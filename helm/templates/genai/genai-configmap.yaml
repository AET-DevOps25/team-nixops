apiVersion: v1
kind: ConfigMap
metadata:
  name: genai-configmap
  namespace: "{{ .Values.ServiceNamespace }}"
data:
  genai_config_template.alloy: |
    livedebugging {
      enabled = true
    }
    local.file_match "files" {
    	path_targets = [{
    		__address__ = "localhost",
    		__path__    = "/app/logs/*.log",
    		app         = "genai",
    		environment = "{podname}",
    	}]
    }
    
    loki.source.file "files" {
    	targets               = local.file_match.files.targets
    	forward_to            = [loki.write.genai.receiver]
    	legacy_positions_file = "/tmp/positions.yaml"
    }
    
    loki.write "genai" {
    	endpoint {
    		url = "http://monitoring-service.nixops-monitoring.svc.cluster.local:3100/loki/api/v1/push"
    	}
    	external_labels = {}
    }
    prometheus.remote_write "genai" {
      endpoint {
    		url = "http://monitoring-service.nixops-monitoring.svc.cluster.local:9090/api/v1/write"
      }
    	external_labels = {
        environment = "{podname}",
      }
    }
    prometheus.scrape "genai" {
      targets = [{
        __address__ = "127.0.0.1:8000",
      }]
      metrics_path    = "/metrics"
      forward_to = [prometheus.remote_write.genai.receiver]
    }
    prometheus.exporter.unix "integrations_node_exporter" {
      // Disable unnecessary collectors to reduce overhead
      disable_collectors = ["ipvs", "btrfs", "infiniband", "xfs", "zfs"]
      enable_collectors = ["meminfo"]
    
      filesystem {
        // Exclude filesystem types that aren't relevant for monitoring
        fs_types_exclude     = "^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|tmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$"
        // Exclude mount points that aren't relevant for monitoring
        mount_points_exclude = "^/(dev|proc|run/credentials/.+|sys|var/lib/docker/.+)($|/)"
        // Timeout for filesystem operations
        mount_timeout        = "5s"
      }
      netclass {
        // Ignore virtual and container network interfaces
        ignored_devices = "^(veth.*|cali.*|[a-f0-9]{15})$"
      }
      netdev {
        // Exclude virtual and container network interfaces from device metrics
        device_exclude = "^(veth.*|cali.*|[a-f0-9]{15})$"
      }
    }
    prometheus.scrape "genai_node_exporter" {
      scrape_interval = "15s"
      targets    = prometheus.exporter.unix.integrations_node_exporter.targets
      forward_to = [prometheus.remote_write.genai.receiver]
    }
  genai-db_config_template.alloy: |
    livedebugging {
      enabled = true
    }
    local.file_match "files" {
    	path_targets = [{
    		__address__ = "localhost",
    		__path__    = "/app/logs/*.log",
    		app         = "milvus",
    		environment = "{podname}",
    	}]
    }
    
    loki.source.file "files" {
    	targets               = local.file_match.files.targets
    	forward_to            = [loki.write.genai_db.receiver]
    	legacy_positions_file = "/tmp/positions.yaml"
    }
    
    loki.write "genai_db" {
    	endpoint {
    		url = "http://monitoring-service.nixops-monitoring.svc.cluster.local:3100/loki/api/v1/push"
    	}
    	external_labels = {}
    }
