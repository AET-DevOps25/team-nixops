{
  "openapi": "3.1.0",
  "info": {
    "title": "NAT Webservices",
    "contact": {
      "name": "Digital School Services NAT",
      "url": "https://wiki.tum.de/display/dssnat",
      "email": "digitalservices@nat.tum.de"
    },
    "version": "0.150.2"
  },
  "paths": {
    "/api/v1/status": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Read Status",
        "description": "Retrieve status.",
        "operationId": "read_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSSStatusBase"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/status/extended": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Read Status Extended",
        "description": "Retrieve extended status.",
        "operationId": "read_status_extended",
        "parameters": [
          {
            "name": "fail_on_offline_component",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Raise 503 status, if any component is offline",
              "default": false,
              "title": "Fail On Offline Component"
            },
            "description": "Raise 503 status, if any component is offline"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSSStatus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/app": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Read Apps",
        "description": "Return available apps.",
        "operationId": "read_apps",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/App"
                  },
                  "type": "array",
                  "title": "Response Read Apps"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/auth": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Test Auth",
        "description": "Check auth status.",
        "operationId": "test_auth",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Detail"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/auth/keycloak-config": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Get Keycloak Config",
        "operationId": "get_keycloak_config",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UIConfig"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/identity": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "User Apps And Roles",
        "description": "Get User Info from Keycloak Token.",
        "operationId": "user_apps_and_roles",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/user/adgroups": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Keycloak Adgroups",
        "description": "Get all AD groups, that shall be included in the keycloak token.",
        "operationId": "keycloak_adgroups",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Keycloak Adgroups"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/user/iauth": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Search Iauth User",
        "description": "Search iAuth for users by lastname.\n\nIf `namestart` contains a comma \",\" then the search is on any lastname starting with the part left of the comma and any firstname starting with the part right of the comma.",
        "operationId": "search_iauth_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "namestart",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "description": "Search phrase for name.",
              "title": "Namestart"
            },
            "description": "Search phrase for name."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IauthUser"
                  },
                  "title": "Response Search Iauth User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/search": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Search Ad User",
        "description": "Search AD for users by lastname.\n\nIf `namestart` contains a comma \",\" then the search is on any lastname starting with the part left of the comma and any firstname starting with the part right of the comma.",
        "operationId": "search_ad_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "namestart",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "description": "Search phrase for name.",
              "title": "Namestart"
            },
            "description": "Search phrase for name."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ADUser"
                  },
                  "title": "Response Search Ad User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{username}": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Query User",
        "description": "Get user info.",
        "operationId": "query_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username.",
              "title": "Username"
            },
            "description": "Username."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User Data"
        ],
        "summary": "Update User",
        "description": "Get user info.",
        "operationId": "update_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username.",
              "title": "Username"
            },
            "description": "Username."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserUpdate",
                "description": "New user data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/apikey": {
      "post": {
        "tags": [
          "User Data"
        ],
        "summary": "Create Apikey",
        "description": "Create new apikey.",
        "operationId": "create_apikey",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAPIKeyCreate",
                "description": "New apikey data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAPIKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/user/apikey/{apikey}": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Read Apikey",
        "description": "Read existing apikey.",
        "operationId": "read_apikey",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "apikey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "APIKey",
              "title": "Apikey"
            },
            "description": "APIKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAPIKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "User Data"
        ],
        "summary": "Update Apikey",
        "description": "Update existing apikey.",
        "operationId": "update_apikey",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "apikey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "APIKey",
              "title": "Apikey"
            },
            "description": "APIKey"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppAPIKeyUpdate",
                "description": "Updated apikey data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAPIKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User Data"
        ],
        "summary": "Revoke Apikey",
        "description": "Delete an existing apikey as admin. Use update_apikey with valid_through now as regular user.",
        "operationId": "revoke_apikey",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "apikey",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "APIKey",
              "title": "Apikey"
            },
            "description": "APIKey"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppAPIKey"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/{username}/new": {
      "post": {
        "tags": [
          "User Data"
        ],
        "summary": "Create User",
        "description": "Create user info.",
        "operationId": "create_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username.",
              "title": "Username"
            },
            "description": "Username."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IauthPersonBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/proxy/{app_id}/{function_id}": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Proxy Users",
        "description": "Return all users the current user may proxy for with any of the functions given.",
        "operationId": "proxy_users",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app.",
            "examples": {
              "0": {
                "summary": "-"
              },
              "cor": {
                "summary": "Core Services",
                "value": "cor"
              },
              "fbk": {
                "summary": "Administration of Feedback Configurations",
                "value": "fbk"
              },
              "luf": {
                "summary": "Teaching Activity Report",
                "value": "luf"
              },
              "mhb": {
                "summary": "Module Descriptions",
                "value": "mhb"
              },
              "phd": {
                "summary": "PhD Students Database",
                "value": "phd"
              },
              "prv": {
                "summary": "Student Office - Examinations",
                "value": "prv"
              },
              "rnk": {
                "summary": "Semester Rankings",
                "value": "rnk"
              },
              "ths": {
                "summary": "Administration of Theses",
                "value": "ths"
              }
            }
          },
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of function the user may proxy other users.",
              "title": "Function Id"
            },
            "description": "ID of function the user may proxy other users.",
            "examples": {
              "0": {
                "summary": "-"
              },
              "mail": {
                "summary": "Editing of mail templates",
                "value": "mail"
              },
              "usertasks": {
                "summary": "User started tasks",
                "value": "usertasks"
              },
              "config": {
                "summary": "Editing of feedback config",
                "value": "config"
              },
              "feedback": {
                "summary": "Feedback form available",
                "value": "feedback"
              },
              "account": {
                "summary": "Account for teaching duties and departmental duties",
                "value": "account"
              },
              "course_lecturer": {
                "summary": "Lecturer/Assistant in course",
                "value": "course_lecturer"
              },
              "description": {
                "summary": "Editing of module descriptions",
                "value": "description"
              },
              "candidate": {
                "summary": "Doctoral Candidate with Active Project",
                "value": "candidate"
              },
              "supervisor": {
                "summary": "Supervisor of an ongoing doctoral project",
                "value": "supervisor"
              },
              "voter": {
                "summary": "Eligible voter of an doctoral project",
                "value": "voter"
              },
              "rankin": {
                "summary": "Student Office Rankings",
                "value": "rankin"
              },
              "studentranking": {
                "summary": "Student with semester ranking",
                "value": "studentranking"
              },
              "offer": {
                "summary": "Publishing of thesis project offers",
                "value": "offer"
              },
              "studentarchive": {
                "summary": "Student with finished thesis",
                "value": "studentarchive"
              },
              "studentregister": {
                "summary": "Student with possibility to register thesis",
                "value": "studentregister"
              },
              "studentthesis": {
                "summary": "Student with thesis",
                "value": "studentthesis"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserBase"
                  },
                  "title": "Response Proxy Users"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/user/proxy/{app_id}/{function_id}/{principal_username}/{proxy_username}": {
      "get": {
        "tags": [
          "User Data"
        ],
        "summary": "Read Proxy",
        "description": "Read proxy entry.",
        "operationId": "read_proxy",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app.",
            "examples": {
              "0": {
                "summary": "-"
              },
              "cor": {
                "summary": "Core Services",
                "value": "cor"
              },
              "fbk": {
                "summary": "Administration of Feedback Configurations",
                "value": "fbk"
              },
              "luf": {
                "summary": "Teaching Activity Report",
                "value": "luf"
              },
              "mhb": {
                "summary": "Module Descriptions",
                "value": "mhb"
              },
              "phd": {
                "summary": "PhD Students Database",
                "value": "phd"
              },
              "prv": {
                "summary": "Student Office - Examinations",
                "value": "prv"
              },
              "rnk": {
                "summary": "Semester Rankings",
                "value": "rnk"
              },
              "ths": {
                "summary": "Administration of Theses",
                "value": "ths"
              }
            }
          },
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of function the user may proxy other users.",
              "title": "Function Id"
            },
            "description": "ID of function the user may proxy other users.",
            "examples": {
              "0": {
                "summary": "-"
              },
              "mail": {
                "summary": "Editing of mail templates",
                "value": "mail"
              },
              "usertasks": {
                "summary": "User started tasks",
                "value": "usertasks"
              },
              "config": {
                "summary": "Editing of feedback config",
                "value": "config"
              },
              "feedback": {
                "summary": "Feedback form available",
                "value": "feedback"
              },
              "account": {
                "summary": "Account for teaching duties and departmental duties",
                "value": "account"
              },
              "course_lecturer": {
                "summary": "Lecturer/Assistant in course",
                "value": "course_lecturer"
              },
              "description": {
                "summary": "Editing of module descriptions",
                "value": "description"
              },
              "candidate": {
                "summary": "Doctoral Candidate with Active Project",
                "value": "candidate"
              },
              "supervisor": {
                "summary": "Supervisor of an ongoing doctoral project",
                "value": "supervisor"
              },
              "voter": {
                "summary": "Eligible voter of an doctoral project",
                "value": "voter"
              },
              "rankin": {
                "summary": "Student Office Rankings",
                "value": "rankin"
              },
              "studentranking": {
                "summary": "Student with semester ranking",
                "value": "studentranking"
              },
              "offer": {
                "summary": "Publishing of thesis project offers",
                "value": "offer"
              },
              "studentarchive": {
                "summary": "Student with finished thesis",
                "value": "studentarchive"
              },
              "studentregister": {
                "summary": "Student with possibility to register thesis",
                "value": "studentregister"
              },
              "studentthesis": {
                "summary": "Student with thesis",
                "value": "studentthesis"
              }
            }
          },
          {
            "name": "principal_username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the principal to be proxied.",
              "title": "Principal Username"
            },
            "description": "Username of the principal to be proxied."
          },
          {
            "name": "proxy_username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the user, who may proxy for the principal.",
              "title": "Proxy Username"
            },
            "description": "Username of the user, who may proxy for the principal."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProxy"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User Data"
        ],
        "summary": "Create Or Update Proxy",
        "description": "Create or update proxy entry.",
        "operationId": "create_or_update_proxy",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app.",
            "examples": {
              "0": {
                "summary": "-"
              },
              "cor": {
                "summary": "Core Services",
                "value": "cor"
              },
              "fbk": {
                "summary": "Administration of Feedback Configurations",
                "value": "fbk"
              },
              "luf": {
                "summary": "Teaching Activity Report",
                "value": "luf"
              },
              "mhb": {
                "summary": "Module Descriptions",
                "value": "mhb"
              },
              "phd": {
                "summary": "PhD Students Database",
                "value": "phd"
              },
              "prv": {
                "summary": "Student Office - Examinations",
                "value": "prv"
              },
              "rnk": {
                "summary": "Semester Rankings",
                "value": "rnk"
              },
              "ths": {
                "summary": "Administration of Theses",
                "value": "ths"
              }
            }
          },
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of function the user may proxy other users.",
              "title": "Function Id"
            },
            "description": "ID of function the user may proxy other users.",
            "examples": {
              "0": {
                "summary": "-"
              },
              "mail": {
                "summary": "Editing of mail templates",
                "value": "mail"
              },
              "usertasks": {
                "summary": "User started tasks",
                "value": "usertasks"
              },
              "config": {
                "summary": "Editing of feedback config",
                "value": "config"
              },
              "feedback": {
                "summary": "Feedback form available",
                "value": "feedback"
              },
              "account": {
                "summary": "Account for teaching duties and departmental duties",
                "value": "account"
              },
              "course_lecturer": {
                "summary": "Lecturer/Assistant in course",
                "value": "course_lecturer"
              },
              "description": {
                "summary": "Editing of module descriptions",
                "value": "description"
              },
              "candidate": {
                "summary": "Doctoral Candidate with Active Project",
                "value": "candidate"
              },
              "supervisor": {
                "summary": "Supervisor of an ongoing doctoral project",
                "value": "supervisor"
              },
              "voter": {
                "summary": "Eligible voter of an doctoral project",
                "value": "voter"
              },
              "rankin": {
                "summary": "Student Office Rankings",
                "value": "rankin"
              },
              "studentranking": {
                "summary": "Student with semester ranking",
                "value": "studentranking"
              },
              "offer": {
                "summary": "Publishing of thesis project offers",
                "value": "offer"
              },
              "studentarchive": {
                "summary": "Student with finished thesis",
                "value": "studentarchive"
              },
              "studentregister": {
                "summary": "Student with possibility to register thesis",
                "value": "studentregister"
              },
              "studentthesis": {
                "summary": "Student with thesis",
                "value": "studentthesis"
              }
            }
          },
          {
            "name": "principal_username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the principal to be proxied.",
              "title": "Principal Username"
            },
            "description": "Username of the principal to be proxied."
          },
          {
            "name": "proxy_username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the user, who may proxy for the principal.",
              "title": "Proxy Username"
            },
            "description": "Username of the user, who may proxy for the principal."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AppProxyUpdate",
                "description": "Proxy entry validity."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppProxy"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/": {
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Semesters",
        "description": "Retrieve base data of multiple semesters.",
        "operationId": "read_semesters",
        "parameters": [
          {
            "name": "from_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "current",
                  "type": "string"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "first semester to be returned",
              "title": "From Semester Key"
            },
            "description": "first semester to be returned"
          },
          {
            "name": "to_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "current",
                  "type": "string"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "last semester to be returned",
              "title": "To Semester Key"
            },
            "description": "last semester to be returned"
          },
          {
            "name": "exclude_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              "description": "never return this semester",
              "default": [],
              "title": "Exclude Semester Key"
            },
            "description": "never return this semester"
          },
          {
            "name": "only_with_lecture_period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "return only semesters with defined lecture period",
              "default": true,
              "title": "Only With Lecture Period"
            },
            "description": "return only semesters with defined lecture period"
          },
          {
            "name": "only_with_exam_period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "return only semesters with defined exam period",
              "default": false,
              "title": "Only With Exam Period"
            },
            "description": "return only semesters with defined exam period"
          },
          {
            "name": "only_with_studienjahr_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "return only semesters with studienjahr_id set (hence semesters where course administration is possible)",
              "default": false,
              "title": "Only With Studienjahr Id"
            },
            "description": "return only semesters with studienjahr_id set (hence semesters where course administration is possible)"
          },
          {
            "name": "only_periode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "w",
                    "s"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "return only winter (w) or summer (s) semesters",
              "title": "Only Periode"
            },
            "description": "return only winter (w) or summer (s) semesters"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Semester"
                  },
                  "title": "Response Read Semesters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/extended": {
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Semesters Extended",
        "description": "Retrieve extended data of multiple semesters.",
        "operationId": "read_semesters_extended",
        "parameters": [
          {
            "name": "from_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "current",
                  "type": "string"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "first semester to be returned",
              "title": "From Semester Key"
            },
            "description": "first semester to be returned"
          },
          {
            "name": "to_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "current",
                  "type": "string"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "last semester to be returned",
              "title": "To Semester Key"
            },
            "description": "last semester to be returned"
          },
          {
            "name": "exclude_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 5,
                "maxLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              "description": "never return this semester",
              "default": [],
              "title": "Exclude Semester Key"
            },
            "description": "never return this semester"
          },
          {
            "name": "only_with_lecture_period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "return only semesters with defined lecture period",
              "default": true,
              "title": "Only With Lecture Period"
            },
            "description": "return only semesters with defined lecture period"
          },
          {
            "name": "only_with_exam_period",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "return only semesters with defined exam period",
              "default": false,
              "title": "Only With Exam Period"
            },
            "description": "return only semesters with defined exam period"
          },
          {
            "name": "only_with_studienjahr_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "return only semesters with studienjahr_id set (hence semesters where course administration is possible)",
              "default": false,
              "title": "Only With Studienjahr Id"
            },
            "description": "return only semesters with studienjahr_id set (hence semesters where course administration is possible)"
          },
          {
            "name": "only_periode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "enum": [
                    "w",
                    "s"
                  ],
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "return only winter (w) or summer (s) semesters",
              "title": "Only Periode"
            },
            "description": "return only winter (w) or summer (s) semesters"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemesterFull"
                  },
                  "title": "Response Read Semesters Extended"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/schedule": {
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Background Schedule",
        "description": "Get schedule of holidays and other semester events.",
        "operationId": "read_background_schedule",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language for title fields",
              "default": "de"
            },
            "description": "Language for title fields"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Start of the schedule (defaults to this week’s monday).",
              "title": "Start"
            },
            "description": "Start of the schedule (defaults to this week’s monday)."
          },
          {
            "name": "end",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "End of the schedule (defaults to one week after start).",
              "title": "End"
            },
            "description": "End of the schedule (defaults to one week after start)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FullCalendarEvent"
                  },
                  "title": "Response Read Background Schedule"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/examperiods": {
      "post": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Create Examperiod",
        "description": "Create new exam period.",
        "operationId": "create_examperiod",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemesterExamperiodCreate",
                "description": "JSON with the data of the exam period to be created."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterExamperiod"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/semesters/examperiods/{examperiod_id}": {
      "put": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Update Examperiod",
        "description": "Update an exam period.",
        "operationId": "update_examperiod",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "examperiod_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Examperiod Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemesterExamperiodUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterExamperiod"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Examperiod",
        "description": "Get examperiod by id.",
        "operationId": "read_examperiod",
        "parameters": [
          {
            "name": "examperiod_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Examperiod Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterExamperiodFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Delete Examperiod",
        "description": "Delete an examperiod.",
        "operationId": "delete_examperiod",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "examperiod_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Examperiod Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterExamperiod"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/dates": {
      "post": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Create Semesterdate",
        "description": "Create new semester date.",
        "operationId": "create_semesterdate",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemesterDateCreate"
              },
              "examples": {
                "diesacademicus": {
                  "summary": "Dies Academicus",
                  "value": {
                    "semester_key": "2024w",
                    "datetype": "lecturefree",
                    "semesterdate_start": "2024-12-05T10:00:00+01:00",
                    "semesterdate_end": "2024-12-05T13:00:00+01:00",
                    "semesterdate_title": "Dies Academicus",
                    "semesterdate_title_en": "Dies Academicus",
                    "semesterdate_description": "Um allen Mitgliedern unserer TUM-Familie die Teilnahme am Dies Academicus zu ermöglichen, sind sie für die Dauer der Veranstaltung vom Dienst befreit. Für die Dauer der Jahresfeier finden zudem keine Lehrveranstaltungen statt.",
                    "semesterdate_description_en": "In order to allow all members of our TUM family to participate in the Dies Academicus, they are exempt from work for the duration of the event. There will also be no lectures for the duration of the celebration.",
                    "semesterdate_url": "https://www.tum.de/aktuelles/veranstaltungen/dies-academicus",
                    "semesterdate_url_en": "https://www.tum.de/en/news-and-events/events/dies-academicus"
                  }
                },
                "fvv": {
                  "summary": "FVV",
                  "description": "For the student body assemblies, the exact times differ from campus to campus to fit into the respective time schedule. We usually only enter the core time slot common to all campusses.",
                  "value": {
                    "semester_key": "2024w",
                    "datetype": "lecturefree",
                    "semesterdate_start": "2024-10-30T10:00:00+01:00",
                    "semesterdate_end": "2024-10-30T11:15:00+01:00",
                    "semesterdate_title": "Fachschaftsvollversammlungen (FVV)",
                    "semesterdate_title_en": "Assemblies of the School Student Bodies (FVV)",
                    "semesterdate_description": "Uhrzeit Stammgelände: 09:45 Uhr bis 11:15 Uhr; Uhrzeit Garching, Freising, Straubing und Heilbronn: 10:00 Uhr bis 11:30 Uhr.\nWährend der Vollversammlungen finden keine Lehrveranstaltungen oder Prüfungen statt, um allen Studierenden eine Teilnahme zu ermöglichen.",
                    "semesterdate_description_en": "Time main campus: 09:45 am to 11:15 am; time Garching, Freising, Straubing and Heilbronn: 10:00 am to 11:30 am.\nNo courses or examinations will take place during the assemblies to enable all students to attend."
                  }
                },
                "svv": {
                  "summary": "SVV",
                  "description": "For the student body assemblies, the exact times differ from campus to campus to fit into the respective time schedule. We usually only enter the core time slot common to all campusses.",
                  "value": {
                    "semester_key": "2024w",
                    "datetype": "lecturefree",
                    "semesterdate_start": "2024-11-12T10:00:00+01:00",
                    "semesterdate_end": "2024-11-12T11:15:00+01:00",
                    "semesterdate_title": "Studentische Vollversammlung (SVV)",
                    "semesterdate_title_en": "Assembly of the Student Body (SVV)",
                    "semesterdate_description": "Uhrzeit Stammgelände: 09:45 Uhr bis 11:15 Uhr; Uhrzeit Garching, Freising, Straubing und Heilbronn: 10:00 Uhr bis 11:30 Uhr.\nWährend der Vollversammlungen finden keine Lehrveranstaltungen oder Prüfungen statt, um allen Studierenden eine Teilnahme zu ermöglichen.",
                    "semesterdate_description_en": "Time main campus: 09:45 am to 11:15 am; time Garching, Freising, Straubing and Heilbronn: 10:00 am to 11:30 am.\nNo courses or examinations will take place during the assemblies to enable all students to attend."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterDate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Semesterdates",
        "description": "Get semesterdates.",
        "operationId": "read_semesterdates",
        "parameters": [
          {
            "name": "datetype",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter on datetype",
              "default": [],
              "title": "Datetype"
            },
            "description": "Filter on datetype"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter on datetype",
              "title": "Start"
            },
            "description": "Filter on datetype"
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Key of the semester to retrieve dates for, include special keys (exam calendar lecture next previous planning)",
              "title": "Semester Key"
            },
            "description": "Key of the semester to retrieve dates for, include special keys (exam calendar lecture next previous planning)",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "latest_if_empty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Return the latest date, if no date after start exists.",
              "default": true,
              "title": "Latest If Empty"
            },
            "description": "Return the latest date, if no date after start exists."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterDateHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/dates/{semesterdate_id}": {
      "put": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Update Semesterdate",
        "description": "Update a date.",
        "operationId": "update_semesterdate",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semesterdate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Semesterdate Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemesterDateUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterDate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Delete Semesterdate",
        "description": "Delete an semesterdate.",
        "operationId": "delete_semesterdate",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semesterdate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Semesterdate Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterDate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Semesterdate",
        "description": "Get semesterdate by id.",
        "operationId": "read_semesterdate",
        "parameters": [
          {
            "name": "semesterdate_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Semesterdate Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterDateFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/semesters/{semester_key}": {
      "put": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Update Semester",
        "description": "Update a semester.",
        "operationId": "update_semester",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "title": "Semester Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SemesterUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Semester"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Semester Data"
        ],
        "summary": "Read Semester",
        "description": "Get semester by key.",
        "operationId": "read_semester",
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                }
              ],
              "description": "Key of the semester to retrieve, include special keys (exam calendar lecture next previous planning)",
              "title": "Semester Key"
            },
            "description": "Key of the semester to retrieve, include special keys (exam calendar lecture next previous planning)",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "return semester for date (default is today)",
              "title": "Date"
            },
            "description": "return semester for date (default is today)"
          },
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "null"
                }
              ],
              "title": "for use with \"current\" based on calendar (semester period), lecture period, or APSO exam period.",
              "description": "Returns the current semester (default) or the semester that was/will be current at the given _date_.\n\n\"current\" is defined according to one of the following rules:\n* _calendar_ (default): the calendar period of the semester (1st of October till 31st of March for WS)\n* _lecture_: any date after the end of the lecture period is assigned to the next semester\n* _exam_: as defined in APSO any date until the end of the first week of lecture period is assigned to the previous semester.",
              "deprecated": true
            },
            "description": "Returns the current semester (default) or the semester that was/will be current at the given _date_.\n\n\"current\" is defined according to one of the following rules:\n* _calendar_ (default): the calendar period of the semester (1st of October till 31st of March for WS)\n* _lecture_: any date after the end of the lecture period is assigned to the next semester\n* _exam_: as defined in APSO any date until the end of the first week of lecture period is assigned to the previous semester.",
            "deprecated": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SemesterFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/html": {
      "get": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Read Orgs Html",
        "description": "Retrieve orgs as HTML table.",
        "operationId": "read_orgs_html",
        "parameters": [
          {
            "name": "org_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organisation type.",
              "title": "Org Type"
            },
            "description": "Filter by organisation type."
          },
          {
            "name": "parent_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Children of organisation.",
              "title": "Parent Org Id"
            },
            "description": "Children of organisation."
          },
          {
            "name": "include_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Always include this org.",
              "title": "Include Org Id"
            },
            "description": "Always include this org."
          },
          {
            "name": "exclude_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Never include this org.",
              "title": "Exclude Org Id"
            },
            "description": "Never include this org."
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include orgs that are deactivated in TUMonline.",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include orgs that are deactivated in TUMonline."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LanguageSelection"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Language of output.",
              "title": "Language"
            },
            "description": "Language of output."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/members": {
      "get": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Read Org Members",
        "description": "Retrieve members of an org.",
        "operationId": "read_org_members",
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 1,
              "description": "ID of the org.",
              "title": "Org Id"
            },
            "description": "ID of the org."
          },
          {
            "name": "person_category_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter by person category.",
              "default": [],
              "title": "Person Category Id"
            },
            "description": "Filter by person category."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgPersonCategoryPersons"
                  },
                  "title": "Response Read Org Members"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{app_id}/{role_id}": {
      "get": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Read Orgs App Role",
        "description": "Retrieve orgs for an app/role.",
        "operationId": "read_orgs_app_role",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 6,
              "pattern": "^[-a-zA-Z0-9]{1,6}$",
              "examples": [
                "clerk",
                "admin"
              ],
              "description": "ID of the role.",
              "title": "Role Id"
            },
            "description": "ID of the role."
          },
          {
            "name": "org_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organisation type.",
              "title": "Org Type"
            },
            "description": "Filter by organisation type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgBase"
                  },
                  "title": "Response Read Orgs App Role"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/{org_id}": {
      "get": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Read Org",
        "description": "Retrieve org by ID.",
        "operationId": "read_org",
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the org.",
              "title": "Org Id"
            },
            "description": "ID of the org."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Update Org",
        "description": "Update org data.",
        "operationId": "update_org",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the org.",
              "title": "Org Id"
            },
            "description": "ID of the org."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgUpdate",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Org"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/": {
      "get": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Read Orgs",
        "description": "Retrieve orgs.",
        "operationId": "read_orgs",
        "parameters": [
          {
            "name": "org_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by organisation type.",
              "title": "Org Type"
            },
            "description": "Filter by organisation type."
          },
          {
            "name": "parent_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Children of organisation.",
              "title": "Parent Org Id"
            },
            "description": "Children of organisation."
          },
          {
            "name": "include_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Always include this org.",
              "title": "Include Org Id"
            },
            "description": "Always include this org."
          },
          {
            "name": "exclude_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Never include this org.",
              "title": "Exclude Org Id"
            },
            "description": "Never include this org."
          },
          {
            "name": "include_deleted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include orgs that are deactivated in TUMonline.",
              "default": false,
              "title": "Include Deleted"
            },
            "description": "Include orgs that are deactivated in TUMonline."
          },
          {
            "name": "only_with_logo",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include only orgs with logo available (e.g. to be included as partner org in rankings).",
              "default": false,
              "title": "Only With Logo"
            },
            "description": "Include only orgs with logo available (e.g. to be included as partner org in rankings)."
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query on org code and titles.",
              "title": "Q"
            },
            "description": "Search query on org code and titles."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 5000,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 5000,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrgBase"
                  },
                  "title": "Response Read Orgs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/orgs/sync": {
      "post": {
        "tags": [
          "Organisation Data"
        ],
        "summary": "Sync Orgs",
        "description": "Synchronise orgs_tumonline from TUMonline webservice.",
        "operationId": "sync_orgs",
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/country/": {
      "get": {
        "tags": [
          "Country Data"
        ],
        "summary": "Get Countries",
        "operationId": "get_countries",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit number of results.",
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "country_code",
                "country",
                "country_en"
              ],
              "type": "string",
              "default": "country",
              "title": "Sort By"
            }
          },
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query to filter by country or country_en.",
              "title": "Q"
            },
            "description": "Search query to filter by country or country_en."
          },
          {
            "name": "docgs_only",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If set only include countries known by DocGS",
              "default": true,
              "title": "Docgs Only"
            },
            "description": "If set only include countries known by DocGS"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CountryBase"
                  },
                  "title": "Response Get Countries"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/country/{country_code}": {
      "get": {
        "tags": [
          "Country Data"
        ],
        "summary": "Get Country",
        "operationId": "get_country",
        "parameters": [
          {
            "name": "country_code",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 2,
              "description": "2-letter ISO country code",
              "title": "Country Code"
            },
            "description": "2-letter ISO country code"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Country"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/category": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Categories",
        "description": "Retrieve person categories.",
        "operationId": "read_person_categories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/OrgPersonCategoryBase"
                  },
                  "type": "array",
                  "title": "Response Read Person Categories"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Person Data"
        ],
        "summary": "Create Person Category",
        "description": "Create category.",
        "operationId": "create_person_category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgPersonCategoryBase",
                "description": "JSON with category data."
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgPersonCategoryBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/persons/category/{person_category_id}": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Category",
        "description": "Retrieve person category.",
        "operationId": "read_person_category",
        "parameters": [
          {
            "name": "person_category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the category",
              "title": "Person Category Id"
            },
            "description": "ID of the category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgPersonCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Person Data"
        ],
        "summary": "Update Person Category",
        "description": "Update category.",
        "operationId": "update_person_category",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_category_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the category",
              "title": "Person Category Id"
            },
            "description": "ID of the category"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrgPersonCategoryUpdate",
                "description": "JSON with fields to update, omitted fields are left unchanged."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrgPersonCategoryBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/function": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Functions",
        "description": "Retrieve person functions.",
        "operationId": "read_functions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PersonFunctionBase"
                  },
                  "type": "array",
                  "title": "Response Read Functions"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/persons/function/{function_id}": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Function",
        "description": "Retrieve function by ID.",
        "operationId": "read_function",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the function.",
              "title": "Function Id"
            },
            "description": "ID of the function."
          },
          {
            "name": "assignment_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "ID of the org at which the function needs to be assigned.",
              "title": "Assignment Org Id"
            },
            "description": "ID of the org at which the function needs to be assigned."
          },
          {
            "name": "forward_email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter person with (True) or without (False) configured email forward (Default (None): no filtering)",
              "title": "Forward Email"
            },
            "description": "Filter person with (True) or without (False) configured email forward (Default (None): no filtering)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonFunction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Person Data"
        ],
        "summary": "Update Function",
        "description": "Update function definition.",
        "operationId": "update_function",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the function.",
              "title": "Function Id"
            },
            "description": "ID of the function."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonFunctionUpdate",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonFunction"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Update Function"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/function/{function_id}/access/{app_id}/{role_id}": {
      "post": {
        "tags": [
          "Person Data"
        ],
        "summary": "Grant Function Access",
        "description": "Grant a role in app access to persons assigned to the function.",
        "operationId": "grant_function_access",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the function.",
              "title": "Function Id"
            },
            "description": "ID of the function."
          },
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 6,
              "pattern": "^[-a-zA-Z0-9]{1,6}$",
              "examples": [
                "clerk",
                "admin"
              ],
              "description": "ID of the role.",
              "title": "Role Id"
            },
            "description": "ID of the role."
          },
          {
            "name": "persons_in_response",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include persons in response.",
              "default": false,
              "title": "Persons In Response"
            },
            "description": "Include persons in response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonFunction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Person Data"
        ],
        "summary": "Revoke Function Access",
        "description": "Revoke a role in app access to persons assigned to the function.",
        "operationId": "revoke_function_access",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the function.",
              "title": "Function Id"
            },
            "description": "ID of the function."
          },
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 6,
              "pattern": "^[-a-zA-Z0-9]{1,6}$",
              "examples": [
                "clerk",
                "admin"
              ],
              "description": "ID of the role.",
              "title": "Role Id"
            },
            "description": "ID of the role."
          },
          {
            "name": "persons_in_response",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include persons in response.",
              "default": false,
              "title": "Persons In Response"
            },
            "description": "Include persons in response."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonFunction"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Get Person",
        "description": "Retrieve person.",
        "operationId": "get_person",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username of the person.",
              "title": "Username"
            },
            "description": "Username of the person."
          },
          {
            "name": "person_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 16,
                  "maxLength": 16,
                  "pattern": "^[A-F0-9]{16}$",
                  "examples": [
                    "8694A922D56E4F87",
                    "2D1E1B14DDBF776D"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "email"
                },
                {
                  "type": "null"
                }
              ],
              "description": "E-Mail of the person.",
              "title": "Email"
            },
            "description": "E-Mail of the person."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonBaseOrg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/{username}": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person",
        "description": "Retrieve person by Username.",
        "operationId": "read_person",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person.",
              "title": "Username"
            },
            "description": "Username of the person."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonBaseOrg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/vcard/me": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Vcard Redirect",
        "description": "Redirect to users own vcard.",
        "operationId": "read_person_vcard_redirect",
        "responses": {
          "307": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/persons/vcard/{person_id}": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Vcard",
        "description": "Retrieve person vcard by ID.",
        "operationId": "read_person_vcard",
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          },
          {
            "name": "include_courses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True, include courses an thesis offers",
              "default": false,
              "title": "Include Courses"
            },
            "description": "If True, include courses an thesis offers"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/PersonWithFunctions"
                    },
                    {
                      "$ref": "#/components/schemas/Person"
                    }
                  ],
                  "title": "Response Read Person Vcard"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/vcard/{person_id}/extended": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Vcard User",
        "description": "Retrieve person vcard by ID with extended content (e.g. hidden functions).",
        "operationId": "read_person_vcard_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/vcard/{person_id}/link": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Vcard Links",
        "description": "Retrieve person vcard links.",
        "operationId": "read_person_vcard_links",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonLink"
                  },
                  "title": "Response Read Person Vcard Links"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Person Data"
        ],
        "summary": "Create Person Vcard Link",
        "description": "Create new link for person vcard.",
        "operationId": "create_person_vcard_link",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonLinkCreate",
                "description": "JSON with the link info"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonLink"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/vcard/{person_id}/link/{link_id}": {
      "put": {
        "tags": [
          "Person Data"
        ],
        "summary": "Update Person Vcard Link",
        "description": "Update person vcard link.",
        "operationId": "update_person_vcard_link",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the link.",
              "title": "Link Id"
            },
            "description": "ID of the link."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonLinkUpdate",
                "description": "JSON with the updated link info"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonLink"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Person Vcard Link",
        "description": "Retrieve person vcard link.",
        "operationId": "read_person_vcard_link",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          },
          {
            "name": "link_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the link.",
              "title": "Link Id"
            },
            "description": "ID of the link."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonLink"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/vcard/{person_id}/function/{function_id}": {
      "put": {
        "tags": [
          "Person Data"
        ],
        "summary": "Update Person Function",
        "description": "Update person vcard function.",
        "operationId": "update_person_function",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "person_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 16,
              "maxLength": 16,
              "pattern": "^[A-F0-9]{16}$",
              "examples": [
                "8694A922D56E4F87",
                "2D1E1B14DDBF776D"
              ],
              "description": "ID of the person.",
              "title": "Person Id"
            },
            "description": "ID of the person."
          },
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the assigned function.",
              "title": "Function Id"
            },
            "description": "ID of the assigned function."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PersonFunctionAssignmentUpdate",
                "description": "JSON with the updated assignment info"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Person"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/list/{function_id}": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Persons",
        "description": "Get persons.",
        "operationId": "read_persons",
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Filter persons by function_id.",
              "title": "Function Id"
            },
            "description": "Filter persons by function_id."
          },
          {
            "name": "assignment_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter persons by function_id assigned in this org.",
              "title": "Assignment Org Id"
            },
            "description": "Filter persons by function_id assigned in this org."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonList"
                  },
                  "title": "Response Read Persons"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/persons/list/{function_id}/html": {
      "get": {
        "tags": [
          "Person Data"
        ],
        "summary": "Read Persons Html",
        "description": "Get persons.",
        "operationId": "read_persons_html",
        "parameters": [
          {
            "name": "function_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Filter persons by function_id.",
              "title": "Function Id"
            },
            "description": "Filter persons by function_id."
          },
          {
            "name": "assignment_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter persons by function_id assigned in this org.",
              "title": "Assignment Org Id"
            },
            "description": "Filter persons by function_id assigned in this org."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LanguageSelection"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Language of output.",
              "title": "Language"
            },
            "description": "Language of output."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Programs",
        "description": "Retrieve program SPOs for user.",
        "operationId": "read_programs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "pattern": "^[a-zA-Z]{3}$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          },
          {
            "name": "role_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the role in the app.",
              "title": "Role Id"
            },
            "description": "ID of the role in the app."
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit to SPOs that are active",
              "title": "Active"
            },
            "description": "Limit to SPOs that are active"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramSPO"
                  },
                  "title": "Response Read Programs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/search": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Search Programs",
        "description": "Search program SPOs.",
        "operationId": "search_programs",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query on study_id and degree_program_name.",
              "title": "Q"
            },
            "description": "Search query on study_id and degree_program_name."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organisational unit responsible for the study program (hierarchical).",
              "title": "Org Id"
            },
            "description": "Organisational unit responsible for the study program (hierarchical)."
          },
          {
            "name": "degree_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Degree type of the study program.",
              "default": [],
              "title": "Degree Type Id"
            },
            "description": "Degree type of the study program."
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit to SPOs that are active",
              "title": "Active"
            },
            "description": "Limit to SPOs that are active"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSPOHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/combined": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Programs Combined",
        "description": "Retrieve programs.",
        "operationId": "read_programs_combined",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProgramBase"
                  },
                  "type": "array",
                  "title": "Response Read Programs Combined"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/combined/search": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Search Programs Combined",
        "description": "Search programs.",
        "operationId": "search_programs_combined",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search query on study_id and degree_program_name.",
              "title": "Q"
            },
            "description": "Search query on study_id and degree_program_name."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "exclusiveMinimum": 0
                },
                {
                  "type": "null"
                }
              ],
              "description": "Organisational unit responsible for the study program (hierarchical).",
              "title": "Org Id"
            },
            "description": "Organisational unit responsible for the study program (hierarchical)."
          },
          {
            "name": "degree_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Degree type of the study program.",
              "default": [],
              "title": "Degree Type Id"
            },
            "description": "Degree type of the study program."
          },
          {
            "name": "active",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit to SPOs that are active",
              "title": "Active"
            },
            "description": "Limit to SPOs that are active"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/combined/{study_id}": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Program Combined",
        "description": "Retrieve program.",
        "operationId": "read_program_combined",
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/team/{teamtype_id}/clerk": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Teams Clerk",
        "description": "Retrieve teams for clerk.",
        "operationId": "read_teams_clerk",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTeam"
                  },
                  "title": "Response Read Teams Clerk"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/team/{teamtype_id}/clerk/{team_id}": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Team Clerk",
        "description": "Retrieve CST/GO team including current students.",
        "operationId": "read_team_clerk",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          },
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the CST/GO team.",
              "title": "Team Id"
            },
            "description": "ID of the CST/GO team."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTeamPrograms"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/team": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Teamtypes",
        "description": "Retrieve teamtypes.",
        "operationId": "read_teamtypes",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Show only teams with teamtype_id starting with prefix.",
              "title": "Prefix"
            },
            "description": "Show only teams with teamtype_id starting with prefix."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTeamType"
                  },
                  "title": "Response Read Teamtypes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/team/{teamtype_id}": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Teamtype",
        "description": "Retrieve teamtype.",
        "operationId": "read_teamtype",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTeamType"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Create Team",
        "description": "Create new team.",
        "operationId": "create_team",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramTeamCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/team/{teamtype_id}/teams": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Teams",
        "description": "Retrieve teams.",
        "operationId": "read_teams",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "exclusiveMinimum": 0
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter teams by org(s).",
              "title": "Org Id"
            },
            "description": "Filter teams by org(s)."
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Show only teams with team_id starting with prefix.",
              "title": "Prefix"
            },
            "description": "Show only teams with team_id starting with prefix."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramTeam"
                  },
                  "title": "Response Read Teams"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/team/{teamtype_id}/{team_id}": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Team",
        "description": "Retrieve team.",
        "operationId": "read_team",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          },
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the team.",
              "title": "Team Id"
            },
            "description": "ID of the team."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Update Team",
        "description": "Update a team.",
        "operationId": "update_team",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          },
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the CST/GO team.",
              "title": "Team Id"
            },
            "description": "ID of the CST/GO team."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramTeamUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Delete Team",
        "description": "Delete a team.",
        "operationId": "delete_team",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teamtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TeamTypeID",
              "description": "ID of the type of team"
            },
            "description": "ID of the type of team"
          },
          {
            "name": "team_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the CST/GO team.",
              "title": "Team Id"
            },
            "description": "ID of the CST/GO team."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramTeam"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/degree": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Degree Types",
        "description": "Retrieve degree types.",
        "operationId": "read_degree_types",
        "parameters": [
          {
            "name": "mode",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "all",
                "active"
              ],
              "type": "string",
              "description": "\"active\": show only degree types with active programs.",
              "default": "active",
              "title": "Mode"
            },
            "description": "\"active\": show only degree types with active programs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DegreeBase"
                  },
                  "title": "Response Read Degree Types"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/degree/{degree_type_id}": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Degree Type",
        "description": "Retrieve degree type.",
        "operationId": "read_degree_type",
        "parameters": [
          {
            "name": "degree_type_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the type of team",
              "title": "Degree Type Id"
            },
            "description": "ID of the type of team"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DegreeBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/{study_id}/{spo_version}": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Program",
        "description": "Retrieve program SPO.",
        "operationId": "read_program",
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSPO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Update Program",
        "description": "Update local data for program SPO.",
        "operationId": "update_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramBaseUpdate",
                "description": "JSON with update data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramSPO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/{study_id}/{spo_version}/progresscheck": {
      "post": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Update Progresscheck",
        "description": "Update progress check for SPO.",
        "operationId": "update_progresscheck",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ProgramProgressCheckCreate"
                },
                "description": "JSON with List of progress check elements",
                "title": "Progresscheck In"
              },
              "examples": {
                "bsc": {
                  "summary": "Bachelor’s Program",
                  "value": [
                    {
                      "credits": 30,
                      "fachsemester": 3
                    },
                    {
                      "credits": 60,
                      "fachsemester": 4
                    },
                    {
                      "credits": 90,
                      "fachsemester": 5
                    },
                    {
                      "credits": 120,
                      "fachsemester": 6
                    },
                    {
                      "credits": 150,
                      "fachsemester": 7
                    },
                    {
                      "credits": 180,
                      "fachsemester": 8
                    }
                  ]
                },
                "msc": {
                  "summary": "Master’s Program with Fundamentals Exams",
                  "value": [
                    {
                      "special_check": "10 CP in physikalischen Spezialfächern",
                      "special_check_en": "10 credits in Physics special courses",
                      "fachsemester": 2
                    },
                    {
                      "credits": 30,
                      "fachsemester": 3
                    },
                    {
                      "credits": 60,
                      "fachsemester": 4
                    },
                    {
                      "credits": 90,
                      "fachsemester": 5
                    },
                    {
                      "credits": 120,
                      "fachsemester": 6
                    }
                  ]
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Program"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/programs/{study_id}/{spo_version}/warning": {
      "get": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Read Warning",
        "description": "Read warn config for SPO.",
        "operationId": "read_warning",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarnConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Study Programs"
        ],
        "summary": "Config Warning",
        "description": "Set warn config for SPO.",
        "operationId": "config_warning",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WarnConfigUpdate",
                "description": "JSON including the templates for the letter and config parameters"
              },
              "examples": {
                "de": {
                  "summary": "Default texts in German",
                  "value": {
                    "address": "<p><span style=\"font-size:8pt\">Technische Universität München | Arcisstraße 21 | 80333 München</span></p>\n<p><span style=\"font-size:10pt\">%ANREDE% %VORNAME_KOMPLETT% %FAMILIENNAME%</span></p>\n<p><span style=\"font-size:10pt\">%STRASSE%<br />\n%PLZ% %ORT%</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
                    "maintext": "<p>Garching, %DATUM_HEUTE%</p>\n<p>Betreff: Ihr Studienfortschritt im {{ program.degree_program_name }}</p>\n<p>&nbsp;</p>\n<p>%SEHRGEEHRT% %VORNAME% %NAMENSZUSATZ%%FAMILIENNAME%,</p>\n<p>die vielfältigen Anforderungen eines Studiums zu erfüllen, fällt nicht immer leicht. Die TUM möchte Sie daher hiermit frühzeitig auf offensichtliche Schwierigkeiten in Ihrem Studium aufmerksam machen. Wir empfehlen Ihnen dringend, über die Ursachen Ihres nicht im Plan liegenden Studienfortschritts nachzudenken und die Studienfachberatung oder andere Anlaufstellen aufzusuchen.</p>\n<p>Wir möchten Sie bei der Umsetzung Ihrer eigenen Ziele bestmöglich unterstützen. Dazu benötigen wir Ihre Mitwirkung, Ihr Interesse am Studienfach und auch Ihren Willen, die erforderliche Zeit und das unverzichtbare Engagement für Ihr Studium aufzubringen.</p>\n<p>Damit Sie unsere Erwartung an Ihre Mitwirkung einordnen können, möchten wir Sie darauf hinweisen, dass wir in der Auslegung unserer Module im Mittel von 30 Stunden Arbeit je Credit ausgehen, was bei 30 Credits pro Semester einer Belastung von 1800 Stunden im Jahr entspricht. Werden Prüfungen verzögert, der Studienablauf signifikant verändert oder wird die Arbeit vor allem in die Prüfungsvorbereitung geschoben, so steigt der erforderliche Aufwand für Sie noch einmal zusätzlich an. Um das Studium spätestens zum achten Fachsemester - also erfolgreich innerhalb der Studienfortschrittskontrolle - abzuschließen, müssen im Mittel mindestens 20 Credits pro Semester erworben werden.</p>\n<p><b>In Ihrem Fall haben wir festgestellt, dass Sie sich aktuell im {{ fachsemester }}. Fachsemester befinden{% if frv %}, wobei eine gewährte Fristverlängerung von {% if frv==1 %}einem Semester{% else %}{{ frv|format_number }} Semestern{% endif %} berücksichtigt wird,{% endif %} aber bisher lediglich {{ credits }} CP erworben haben.{% if credits and special_warning_credits %} Darunter nur {{ special_warning_credits }} Credits in für die Grundlagenprüfung relevanten Fächern.{% endif %}</b></p>\n<p>Was bedeutet das für die kommenden Semester?</p>\n<p>Durch noch nicht bestandene oder aufgeschobene Prüfungen kann für Sie in den nächsten Semestern eine sehr hohe Prüfungsbelastung entstehen. Konkret ist für Ihren Studienerfolg erforderlich: {% for semester in program.progresschecks %}{% if semester.fachsemester>=fachsemester_effective %}nach dem {{ semester.fachsemester + (frv or 0) }}. Fachsemester mindestens {% if semester.credits %}{{ semester.credits }} Credits{% endif %}{% if semester.special_check %}{% if semester.credits %}, davon{% endif %} {{ semester.special_check }}{% endif %}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}. Wenn diese Grenzen nicht erreicht werden, greift die Studienfortschrittskontrolle mit einem Ausschluss aus dem Studium.</p>\n<p>Nehmen Sie daher, soweit noch nicht geschehen, bitte kurzfristig Kontakt mit einer Vertrauensperson Ihrer Wahl oder mit einem der folgenden Ansprechpartner auf:</p>\n<p>- Dr. Philipp Höffer v. Loewenfeld (Sprechstunde Montag nachmittag und, wenn die Bürotür offen steht) oder das Team der Studienberatung in Physik (https://academics.nat.tum.de/beratung#c4487)</p>\n<p>- Dr. Katja Block (Sprechstunde Montag 9:30-11:30 und Mittowch 13:30-15:30) als Ansprechpartnerin für das Studium in besonderen Lebenslagen</p>\n<p>- Allgemeine Studienberatung; Unterstützung bei Neuorientierung oder alternativen Studienmöglichkeiten sowie Lern- und Prüfungscoaching (https://www.tum.de/studium/hilfe-und-beratung)</p>\n<p>- Studierendenwerk (https://www.studierendenwerk-muenchen-oberbayern.de/beratungsnetzwerk/): Anlaufstelle für soziale und wirtschaftliche Fragen wie z.B. Studienfinanzierung, psychologische Beratung etc.</p>\n<p>Kommen Sie auf uns zu – wir sind für Sie da.</p>\n<p>Ich wünsche Ihnen viel Erfolg in den kommenden Semestern.</p>",
                    "signature": "<p>&nbsp;</p>\n<p>Mit besten Grüßen</p>\n<p>Philipp Höffer v. Loewenfeld<br />\n<span style=\"font-size:6pt\">Dieses Dokument wurde maschinell erstellt und ist ohne Siegel und Unterschrift gültig.</span></p>",
                    "sidetext": "<p><span style=\"color:#0065BD; font-size:8pt\">TUM School of Natural Sciences<br/>\nBachelorprüfungsausschuss Physik</span></p>\n<p><span style=\"font-size:8pt\">Dr. Philipp Höffer v. Loewenfeld<br/>\nSchriftführer<br/>\n<br/>\nJames-Franck-Str. 1<br/>\n85748 Garching<br/>\n<br/>\n<br/>\nTel: +49 89 289-12344<br/>\n<br/>\nphvl@tum.de</span></p>",
                    "ignore_fa": false
                  }
                },
                "en": {
                  "summary": "Default texts in English",
                  "value": {
                    "address": "<p><span style=\"font-size:8pt\">Technical University of Munich | Arcisstraße 21 | 80333 München | Germany</span></p>\n<p><span style=\"font-size:10pt\">%ANREDE% %VORNAME_KOMPLETT% %FAMILIENNAME%</span></p>\n<p><span style=\"font-size:10pt\">%STRASSE%<br />\n%PLZ% %ORT%</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>",
                    "maintext": "<p>Garching, %DATUM_HEUTE%</p>\n<p>Subject: Your academic progress in the {{ program.degree_program_name }}</p>\n<p>&nbsp;</p>\n<p>Dear %VORNAME% %NAMENSZUSATZ%%FAMILIENNAME%,</p>\n<p>keeping apace with the demands of full-time study is not always easy. When difficulties do arise, however, it is best to address them as quickly as possible. We are writing today in an effort to call your attention early to your apparent difficulties in meeting your academic progress targets. We strongly recommend that you consider the factors leading to these difficulties and seek out academic counseling.</p>\n<p>Our goal is to support you as good as possible in meeting your own goals. In order to do so, we require your participation, your interest in your field of study and your willingness to devote the necessary time and level of commitment to your degree program.</p>\n<p>To help you better understand our expectations, we would like to explain that the design of our degree program modules is based on an average of 30 hours of work per credit, which, at 30 credits per semester, corresponds to a workload of 1800 hours per academic year. If examinations are postponed, if the progression of studies significantly shifts from the planned curriculum, or if the completion of course requirements is pushed into periods of time intended for exam preparation, the effort necessary for you to master the workload increases exponentially. In order to complete the study program within six semesters - and hence within the targets specified by the academic progress check - a student needs to earn on average 20 credits per semester.</p>\n<p><b>In your case, we have found that you have earned only {{ credits }} CP{% if credits and special_warning_credits is not none %} including {{ special_warning_credits }} CP in Physics special courses{% endif %} by your {{ fachsemester }}. semester{% if frv %}, where an extension of {% if frv==1 %}one semester{% else %}{{ frv|format_number(\"cardinal\", \"en\") }} semesters{% endif %} is accounted for{% endif %}.</b></p>\n<p>So what does this mean for the coming semesters?</p>\n<p>Examinations that have not yet been passed or have been postponed can place a very high examination load on you in the coming semesters. In concrete terms, to successfully complete your studies, you need to have earned {% for semester in program.progresschecks %}{% if semester.fachsemester>=fachsemester_effective %}after {{ semester.fachsemester + (frv or 0) }}. semester at least{% if semester.credits %} {{ semester.credits }} CP{% endif %}{% if semester.special_check_en %}{% if semester.credits %} and therein{% endif %} {{ semester.special_check_en }}{% endif %}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}. If these minimums are not achieved, the academic progress check takes effect to expel you from the program.</p>\n<p>We, thus, again encourage you to contact the trusted person of your choice or someone at one of the following services as soon as possible:</p>\n<p>- Dr. Martin Saß (consultation hour regularly Wednesday and Thursday morning) or the team of study organisation and counceling in Physics (https://academics.nat.tum.de/en/counseling#c4487)</p>\n<p>- Dr. Katja Block (consultation hour Monday 9:30-11:30 and Wednesday 13:30-15:30) as contact person for studying with special needs</p>\n<p>- Student Advising; support with new academic orientation or alternative options for study, as well as learning and examination coaching (https://www.tum.de/en/studies/support-and-advice)</p>\n<p>- Student Union (https://www.studierendenwerk-muenchen-oberbayern.de/en/advisory-network): contact point for social and financial issues, such as paying for your studies, psychological counseling, etc.</p>\n<p>Come and talk to us – we are here to help.</p>\n<p>Wishing you all the best in the coming semesters.</p>",
                    "signature": "<p>&nbsp;</p>\n<p>Your’s sincerely</p>\n<p>Martin Saß<br />\n<span style=\"font-size:6pt\">This letter was automatically created and is valid without seal and signature.</span></p>",
                    "sidetext": "<p><span style=\"color:#0065BD; font-size:8pt\">TUM School of Natural Sciences<br/>\nMaster Examination Board Physics</span></p>\n<p><span style=\"font-size:8pt\">Dr. Martin Saß<br/>\nProgram Manager<br/>\n<br/>\nBoltzmannstr. 3<br/>\n85748 Garching<br/>\n<br/>\n<br/>\nTel: +49 89 289-18463<br/>\n<br/>\nmsass@tum.de</span></p>",
                    "ignore_fa": false,
                    "ignore_frv_age": 12960000.0,
                    "special_stpk_id": 1440028
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WarnConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/researchfields/bylevel/{level}": {
      "get": {
        "tags": [
          "Research Fields"
        ],
        "summary": "Query Researchfields",
        "description": "Retrieve researchfields for query.",
        "operationId": "query_researchfields",
        "parameters": [
          {
            "name": "level",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 3,
              "minimum": 0,
              "description": "Level of research areas.",
              "title": "Level"
            },
            "description": "Level of research areas."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Researchfield"
                  },
                  "title": "Response Query Researchfields"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/researchfields/": {
      "get": {
        "tags": [
          "Research Fields"
        ],
        "summary": "Read Researchfields",
        "description": "Retrieve researchfields.",
        "operationId": "read_researchfields",
        "parameters": [
          {
            "name": "include_subfields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include subfields, otherwise only give top level research areas.",
              "default": false,
              "title": "Include Subfields"
            },
            "description": "Include subfields, otherwise only give top level research areas."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Researchfield"
                  },
                  "title": "Response Read Researchfields"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/researchfields/{researchfield_0}": {
      "get": {
        "tags": [
          "Research Fields"
        ],
        "summary": "Read Researchfields0",
        "description": "Retrieve researchfields for given research area.",
        "operationId": "read_researchfields0",
        "parameters": [
          {
            "name": "researchfield_0",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the research area.",
              "title": "Researchfield 0"
            },
            "description": "ID of the research area."
          },
          {
            "name": "include_subfields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include subfields, otherwise only give top level research fields.",
              "default": false,
              "title": "Include Subfields"
            },
            "description": "Include subfields, otherwise only give top level research fields."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Researchfield"
                  },
                  "title": "Response Read Researchfields0"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/researchfields/{researchfield_0}/{researchfield_1}": {
      "get": {
        "tags": [
          "Research Fields"
        ],
        "summary": "Read Researchfields1",
        "description": "Retrieve subfields for given research area and research field.",
        "operationId": "read_researchfields1",
        "parameters": [
          {
            "name": "researchfield_0",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the research area.",
              "title": "Researchfield 0"
            },
            "description": "ID of the research area."
          },
          {
            "name": "researchfield_1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the research field.",
              "title": "Researchfield 1"
            },
            "description": "ID of the research field."
          },
          {
            "name": "include_subfields",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include subfields, otherwise only give top level subfields.",
              "default": false,
              "title": "Include Subfields"
            },
            "description": "Include subfields, otherwise only give top level subfields."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Researchfield"
                  },
                  "title": "Response Read Researchfields1"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/researchfields/{researchfield_0}/{researchfield_1}/{researchfield_2}": {
      "get": {
        "tags": [
          "Research Fields"
        ],
        "summary": "Read Researchfields2",
        "description": "Retrieve optiona for given research area, research field, and subfield.",
        "operationId": "read_researchfields2",
        "parameters": [
          {
            "name": "researchfield_0",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the research area.",
              "title": "Researchfield 0"
            },
            "description": "ID of the research area."
          },
          {
            "name": "researchfield_1",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the research field.",
              "title": "Researchfield 1"
            },
            "description": "ID of the research field."
          },
          {
            "name": "researchfield_2",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the subfield.",
              "title": "Researchfield 2"
            },
            "description": "ID of the subfield."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Researchfield"
                  },
                  "title": "Response Read Researchfields2"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremonies",
        "description": "Retrieve degree ceremonies.",
        "operationId": "read_ceremonies",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter ceremonies by org.",
              "title": "Org Id"
            },
            "description": "Filter ceremonies by org."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CeremonyBase"
                  },
                  "title": "Response Read Ceremonies"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Create Ceremony",
        "description": "Create new ceremony.",
        "operationId": "create_ceremony",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "replace_apv_ceremony_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Replace ceremony in APV programs and Ph.D. acceptance committees to invite new students to.",
              "title": "Replace Apv Ceremony Id"
            },
            "description": "Replace ceremony in APV programs and Ph.D. acceptance committees to invite new students to."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CeremonyCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/feedback": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremony Feedbacks",
        "description": "Read ceremony invitations, the logged in user is asked for feedback.",
        "operationId": "read_ceremony_feedbacks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CeremonyInvitationFeedback"
                  },
                  "type": "array",
                  "title": "Response Read Ceremony Feedbacks"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/ceremony/feedback/{invitation_id}": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremony Feedback",
        "description": "Read feedback for ceremony invitation.",
        "operationId": "read_ceremony_feedback",
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the invitation.",
              "title": "Invitation Id"
            },
            "description": "ID of the invitation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyInvitationFeedback"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Ceremony Feedback",
        "description": "Store feedback for ceremony invitation.",
        "operationId": "ceremony_feedback",
        "parameters": [
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the invitation.",
              "title": "Invitation Id"
            },
            "description": "ID of the invitation."
          },
          {
            "name": "attendees_count",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of attendees including the invited person (0 for cannot/will not attend).",
              "title": "Attendees Count"
            },
            "description": "Number of attendees including the invited person (0 for cannot/will not attend)."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/CeremonyInvitationBase"
                  },
                  {
                    "type": "null"
                  }
                ],
                "description": "Updated address data, if ceremony object has `check_address`",
                "title": "Address In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyInvitationFeedback"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/{ceremony_id}": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremony",
        "description": "Retrieve degree ceremony.",
        "operationId": "read_ceremony",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Update Ceremony",
        "description": "Update a degree ceremony.",
        "operationId": "update_ceremony",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "replace_apv_ceremony_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Replace ceremony in APV programs and Ph.D. acceptance committees to invite new students to.",
              "title": "Replace Apv Ceremony Id"
            },
            "description": "Replace ceremony in APV programs and Ph.D. acceptance committees to invite new students to."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CeremonyUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Delete Ceremony",
        "description": "Delete a degree ceremony.",
        "operationId": "delete_ceremony",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Create Ceremony Invitation",
        "description": "Create new ceremony invitation.",
        "operationId": "create_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CeremonyInvitationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/{ceremony_id}/invitations": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremony With Invitations",
        "description": "Retrieve degree ceremony.",
        "operationId": "read_ceremony_with_invitations",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ceremony"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/{ceremony_id}/attendees": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremony With Attendees",
        "description": "Retrieve degree ceremony with attendees.",
        "operationId": "read_ceremony_with_attendees",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ceremony"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/{ceremony_id}/attendees/xlsx": {
      "get": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Read Ceremony With Attendees Xlsx",
        "description": "Retrieve ceremony attendees as XLSX.",
        "operationId": "read_ceremony_with_attendees_xlsx",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "responses": {
          "200": {
            "description": "Return emails of ranked students as XLSX file.",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/{ceremony_id}/adgroup": {
      "post": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Create Ceremony Invitations",
        "description": "Create new ceremony invitations from AD group.",
        "operationId": "create_ceremony_invitations",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "adgroup",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "AD group to obtain invitees from",
              "title": "Adgroup"
            },
            "description": "AD group to obtain invitees from"
          },
          {
            "name": "prefer_dienst",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True (default) prefer institutional address before private address.",
              "default": true,
              "title": "Prefer Dienst"
            },
            "description": "If True (default) prefer institutional address before private address."
          },
          {
            "name": "delete",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Delete existing entries, if no longer in AD group.",
              "default": false,
              "title": "Delete"
            },
            "description": "Delete existing entries, if no longer in AD group."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ceremony/{ceremony_id}/{invitation_id}": {
      "put": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Update Ceremony Invitation",
        "description": "Update ceremony invitation.",
        "operationId": "update_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the invitation.",
              "title": "Invitation Id"
            },
            "description": "UUID of the invitation."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CeremonyInvitationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ceremony Invitations"
        ],
        "summary": "Delete Ceremony Invitation",
        "description": "Delete ceremony invitation.",
        "operationId": "delete_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the invitation.",
              "title": "Invitation Id"
            },
            "description": "UUID of the invitation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Read Students",
        "description": "Retrieve students.",
        "operationId": "read_students",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "minItems": 1,
              "description": "IDs of study programs.",
              "title": "Study Id"
            },
            "description": "IDs of study programs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentBase"
                  },
                  "title": "Response Read Students"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/search": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Search Students",
        "description": "Search db for students by name or matrikel.",
        "operationId": "search_students",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "namestart",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "description": "Search phrase for name or matrikel.",
              "title": "Namestart"
            },
            "description": "Search phrase for name or matrikel."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StudentBase"
                  },
                  "title": "Response Search Students"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/sync/{org_id}": {
      "post": {
        "tags": [
          "Student File"
        ],
        "summary": "Sync Students",
        "description": "Sync students for Org org_id.",
        "operationId": "sync_students",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org (and all child orgs) for which synchronisation should be done.",
              "title": "Org Id"
            },
            "description": "ID of the org (and all child orgs) for which synchronisation should be done."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/frv/{frv_id}/pdf": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Read Frv Pdf",
        "description": "Read PDF confirmation of extension/postponement for a student.",
        "operationId": "read_frv_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "frv_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the extension",
              "title": "Frv Id"
            },
            "description": "UUID of the extension"
          }
        ],
        "responses": {
          "200": {
            "description": "Return PDF document stored for attest.",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Read Frv Pdf"
                }
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/attest/{attest_id}/sync": {
      "put": {
        "tags": [
          "Student File"
        ],
        "summary": "Sync Attest Exams",
        "description": "Sync exams for a disadvantage compensation/attest.",
        "operationId": "sync_attest_exams",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "attest_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the compensation/attest",
              "title": "Attest Id"
            },
            "description": "UUID of the compensation/attest"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/attest/sync": {
      "put": {
        "tags": [
          "Student File"
        ],
        "summary": "Sync Attests Exams",
        "description": "Sync exams for all disadvantage compensations/attests of a study program.",
        "operationId": "sync_attests_exams",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "uniqueItems": true,
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "IDs of the study programs to sync exams for",
              "title": "Study Id"
            },
            "description": "IDs of the study programs to sync exams for"
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "Filter for semester (defaults to current exam semester).",
              "default": "exam",
              "title": "Semester Key"
            },
            "description": "Filter for semester (defaults to current exam semester)."
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/attest/examiner": {
      "put": {
        "tags": [
          "Student File"
        ],
        "summary": "Disadvantage Info Examiner",
        "description": "Inform examiners on disadvantage compensations in their exam.",
        "operationId": "disadvantage_info_examiner",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "IDs of the study programs to sync exams for",
              "title": "Study Id"
            },
            "description": "IDs of the study programs to sync exams for"
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "Filter for semester (defaults to current exam semester).",
              "default": "exam",
              "title": "Semester Key"
            },
            "description": "Filter for semester (defaults to current exam semester)."
          },
          {
            "name": "exam_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Restrict to the exam with ID",
              "title": "Exam Id"
            },
            "description": "Restrict to the exam with ID"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/EmailNoToOptFrom"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Optional individual email sent to the examiner, overriding the default template set for the program."
              },
              "example": {}
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/degree/statistics": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Read Degree Statistics",
        "description": "Read degree statistics.",
        "operationId": "read_degree_statistics",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of study programs to filter",
              "title": "Study Id"
            },
            "description": "ID of study programs to filter"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only analyse degrees from this date on.",
              "title": "Start Date"
            },
            "description": "Only analyse degrees from this date on."
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only analyse degrees until this date.",
              "title": "End Date"
            },
            "description": "Only analyse degrees until this date."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentDegreeStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/statistics": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Read Student Statistics",
        "description": "Read student statistics.",
        "operationId": "read_student_statistics",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of study programs to filter",
              "title": "Study Id"
            },
            "description": "ID of study programs to filter"
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "Key of the semester.",
              "default": "current",
              "title": "Semester Key"
            },
            "description": "Key of the semester.",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentStatistics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/v3": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Read V3 Candidates",
        "description": "Read candidates for third trials.",
        "operationId": "read_v3_candidates",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of study programs to filter",
              "title": "Study Id"
            },
            "description": "ID of study programs to filter",
            "examples": {
              "163017051": {
                "summary": "B. Sc. Physics",
                "value": "163017051"
              }
            }
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "Only analyse degrees from this date on.",
              "default": "exam",
              "title": "Semester Key"
            },
            "description": "Only analyse degrees from this date on."
          },
          {
            "name": "ghk",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 2,
              "description": "Only analyse degrees until this date.",
              "title": "Ghk"
            },
            "description": "Only analyse degrees until this date.",
            "examples": {
              "163017051_1": {
                "summary": "B.Sc. Physics - Fundamentals and Orientation Exam (GOP) part 1",
                "value": [
                  1598730,
                  1603374,
                  1605166
                ]
              },
              "163017051_2": {
                "summary": "B.Sc. Physics - Fundamentals and Orientation Exam (GOP) part 2",
                "value": [
                  1600244,
                  1599646,
                  1605168
                ]
              }
            }
          },
          {
            "name": "register_students",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Register the students",
              "default": false,
              "title": "Register Students"
            },
            "description": "Register the students"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThirdTrialCandidates"
                  },
                  "title": "Response Read V3 Candidates"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/students/{username}": {
      "get": {
        "tags": [
          "Student File"
        ],
        "summary": "Read Student",
        "description": "Retrieve student.",
        "operationId": "read_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "string",
                  "minLength": 8,
                  "maxLength": 8,
                  "pattern": "^[0-9]{8}$",
                  "examples": [
                    "00002222"
                  ]
                }
              ],
              "description": "Username or Matrikel of student.",
              "title": "Username"
            },
            "description": "Username or Matrikel of student."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StudentBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grading/": {
      "get": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Read Gradings",
        "description": "Retrieve grading tables.",
        "operationId": "read_gradings",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "description": "IDs of study programs.",
              "default": [],
              "title": "Study Id"
            },
            "description": "IDs of study programs."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GradingTableBase"
                  },
                  "title": "Response Read Gradings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Create Grading",
        "description": "Create grading table.",
        "operationId": "create_grading",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradingTableCreate",
                "description": "JSON with grading data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradingTableExtended"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grading/{grading_id}": {
      "patch": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Update Grading",
        "description": "Update grading tables.",
        "operationId": "update_grading",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "grading_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the grading table.",
              "title": "Grading Id"
            },
            "description": "ID of the grading table."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradingTableUpdate",
                "description": "JSON with grading data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradingTableExtended"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Read Grading",
        "description": "Retrieve grading table.",
        "operationId": "read_grading",
        "parameters": [
          {
            "name": "grading_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the grading table.",
              "title": "Grading Id"
            },
            "description": "ID of the grading table."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradingTable"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grading/{grading_id}/extended": {
      "get": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Read Grading Extended",
        "description": "Retrieve grading table with extended data.",
        "operationId": "read_grading_extended",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "grading_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the grading table.",
              "title": "Grading Id"
            },
            "description": "ID of the grading table."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GradingTableExtended"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grading/{grading_id}/tags": {
      "get": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Read Grading Tags",
        "description": "Retrieve grading table tags.",
        "operationId": "read_grading_tags",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "grading_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the grading table.",
              "title": "Grading Id"
            },
            "description": "ID of the grading table."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Read Grading Tags"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grading/{grading_id}/generate": {
      "post": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Generate Grading Pdf",
        "description": "Retrieve grading.",
        "operationId": "generate_grading_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "grading_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the grading",
              "title": "Grading Id"
            },
            "description": "ID of the grading"
          },
          {
            "name": "publish",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Publish the grading table",
              "default": true,
              "title": "Publish"
            },
            "description": "Publish the grading table"
          }
        ],
        "responses": {
          "200": {
            "description": "Return grading as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/grading/{grading_id}/pdf": {
      "get": {
        "tags": [
          "Student Statistics"
        ],
        "summary": "Read Grading Pdf",
        "description": "Retrieve grading.",
        "operationId": "read_grading_pdf",
        "parameters": [
          {
            "name": "grading_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the grading",
              "title": "Grading Id"
            },
            "description": "ID of the grading"
          },
          {
            "name": "tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tag of historical grading table",
              "title": "Tag"
            },
            "description": "Tag of historical grading table"
          }
        ],
        "responses": {
          "200": {
            "description": "Return grading as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/background/credentials": {
      "post": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Manage Credentials",
        "description": "Manage credentials object for background tasks.",
        "operationId": "manage_credentials",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Credentials"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/background/list": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Read Tasks",
        "description": "Retrieve list of tasks.",
        "operationId": "read_tasks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TaskNameList"
                  },
                  "type": "array",
                  "title": "Response Read Tasks"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/background/list/{name}": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Read Task",
        "description": "Retrieve task by name, including all task_ids.",
        "operationId": "read_task",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskName"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/background/{task_id}/simple": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Read Taskstatus Simple",
        "description": "Retrieve task status.",
        "operationId": "read_taskstatus_simple",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSimple"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/background/stream": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Stream Test",
        "description": "Retrieve status of all tasks as stream.",
        "operationId": "stream_test",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Stream Test"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/background/{task_id}/stream": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Stream Taskstatus",
        "description": "Retrieve task status as stream.",
        "operationId": "stream_taskstatus",
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the task.",
              "title": "Task Id"
            },
            "description": "ID of the task."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskSimple"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/background/{task_id}": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Read Taskstatus",
        "description": "Retrieve extended task status.",
        "operationId": "read_taskstatus",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Repeat Task",
        "description": "Repeat a task.",
        "operationId": "repeat_task",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Revoke Task",
        "description": "Retrieve task status.",
        "operationId": "revoke_task",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Ignore Failed Task",
        "description": "Set task status to ignored.",
        "operationId": "ignore_failed_task",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "task_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Task Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/background/": {
      "get": {
        "tags": [
          "Background Tasks"
        ],
        "summary": "Read Usertasks",
        "description": "Retrieve tasks assigned to the user.",
        "operationId": "read_usertasks",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Task"
                  },
                  "type": "array",
                  "title": "Response Read Usertasks"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/onboarding/{org_id}": {
      "get": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Read Onboard Group Config",
        "description": "Read config used for onboarding of a new research group.",
        "operationId": "onboarding_read_onboard_group_config",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "ID of the new org",
              "title": "Org Id"
            },
            "description": "ID of the new org"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OnboardSchoolConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Onboarding"
        ],
        "summary": "Onboard Group",
        "description": "Onboard a new research group.",
        "operationId": "onboarding_onboard_group",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "exclusiveMinimum": 0,
              "description": "ID of the new org",
              "title": "Org Id"
            },
            "description": "ID of the new org"
          },
          {
            "name": "assign_legal_roles",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Assign legal roles (set to false, if the professor has not yet started)",
              "default": false,
              "title": "Assign Legal Roles"
            },
            "description": "Assign legal roles (set to false, if the professor has not yet started)"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OnboardGroup",
                "description": "Config for the new group"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gdpr/": {
      "get": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Read Processings",
        "description": "Retrieve processings.",
        "operationId": "gdpr_read_processings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DSBProcessing"
                  },
                  "type": "array",
                  "title": "Response Gdpr Read Processings"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gdpr/processing": {
      "get": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Read Processings Admin",
        "description": "Retrieve processings as admin.",
        "operationId": "gdpr_read_processings_admin",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DSBProcessing"
                  },
                  "type": "array",
                  "title": "Response Gdpr Read Processings Admin"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/gdpr/processing/{app_id}": {
      "post": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Create Processing",
        "description": "Create processing.",
        "operationId": "gdpr_create_processing",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSBProcessingCreate",
                "description": "JSON schema with config data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSBProcessing"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Read Processing",
        "description": "Get processing.",
        "operationId": "gdpr_read_processing",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSBProcessing"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Update Processing",
        "description": "Update processing.",
        "operationId": "gdpr_update_processing",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the app.",
              "title": "App Id"
            },
            "description": "ID of the app."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DSBProcessingUpdate",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSBProcessing"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gdpr/query": {
      "get": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Search Query",
        "description": "Answer GDPR query on right to access for entries.",
        "operationId": "gdpr_search_query",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 2,
              "doc": "Search query for start of name of the person.",
              "title": "Q"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "pattern": "^[a-zA-Z]{3}$"
                },
                {
                  "type": "null"
                }
              ],
              "doc": "Limit to app.",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSBQueryAnswer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gdpr/query/{username}": {
      "get": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Answer Query",
        "description": "Answer GDPR query on right to access.",
        "operationId": "gdpr_answer_query",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "doc": "Username of the querying person.",
              "title": "Username"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "pattern": "^[a-zA-Z]{3}$"
                },
                {
                  "type": "null"
                }
              ],
              "doc": "Limit to app.",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DSBQueryAnswer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/gdpr/query/{username}/docx": {
      "post": {
        "tags": [
          "GDPR Tools"
        ],
        "summary": "Answer Query Docx",
        "description": "Answer GDPR query on right to access by docx letter template.",
        "operationId": "gdpr_answer_query_docx",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "doc": "Username of the querying person.",
              "title": "Username"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 3,
                  "maxLength": 3,
                  "pattern": "^[a-zA-Z]{3}$"
                },
                {
                  "type": "null"
                }
              ],
              "doc": "Limit to app.",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return letter template as docx file.",
            "content": {
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sap/fonds": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "List Sap Fonds",
        "description": "Retrieve configured SAP fonds.",
        "operationId": "sap_list_sap_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "fonds_responsible_username",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Filter by fonds responsible.",
              "title": "Fonds Responsible Username"
            },
            "description": "Filter by fonds responsible."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SAPFonds"
                  },
                  "title": "Response Sap List Sap Fonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Create Sap Fonds",
        "description": "Create SAP fonds.",
        "operationId": "sap_create_sap_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SAPFondsCreate",
                "description": "JSON with fonds data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SAPFonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/sap/fonds/{fonds_id}": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Read Sap Fonds",
        "description": "Retrieve one SAP fonds.",
        "operationId": "sap_read_sap_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "fonds_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the fonds",
              "title": "Fonds Id"
            },
            "description": "ID of the fonds"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SAPFonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Update Sap Fonds",
        "description": "Update SAP fonds.",
        "operationId": "sap_update_sap_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "fonds_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the fonds",
              "title": "Fonds Id"
            },
            "description": "ID of the fonds"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SAPFondsUpdate",
                "description": "JSON with updated fonds data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SAPFonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/staff": {
      "get": {
        "tags": [
          "Teaching Report Staff"
        ],
        "summary": "Read Staffgroups",
        "description": "Retrieve all staff groups.",
        "operationId": "lufv_read_staffgroups",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "contracted",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only show contracted (true) or non-contracted (false) staff groups. Defaults to all.",
              "title": "Contracted"
            },
            "description": "Only show contracted (true) or non-contracted (false) staff groups. Defaults to all."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVStaffGroupNew"
                  },
                  "title": "Response Lufv Read Staffgroups"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/duty": {
      "get": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Read Dutycategories",
        "description": "Retrieve duty categories configured.",
        "operationId": "lufv_read_dutycategories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LUFVDutyCategoryBase"
                  },
                  "type": "array",
                  "title": "Response Lufv Read Dutycategories"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Create Dutycategory",
        "description": "Configure new duty category.",
        "operationId": "lufv_create_dutycategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVDutyCategoryCreate",
                "description": "JSON data with duty category configuration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyCategoryBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/lufv/duty/{dutycategory_id}": {
      "get": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Read Duties",
        "description": "Retrieve duties from category.",
        "operationId": "lufv_read_duties",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVDutyBase"
                  },
                  "title": "Response Lufv Read Duties"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Update Dutycategory",
        "description": "Reconfigure existing duty category.",
        "operationId": "lufv_update_dutycategory",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVDutyCategoryCreate",
                "description": "JSON data with changes in duty category configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Delete Dutycategory",
        "description": "Delete existing duty category.",
        "operationId": "lufv_delete_dutycategory",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Create Duty",
        "description": "Configure new duty in a category.",
        "operationId": "lufv_create_duty",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVDutyCreate",
                "description": "JSON data with duty configuration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDuty"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/duty/{dutycategory_id}/{duty_id}": {
      "get": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Read Duty",
        "description": "Retrieve duty.",
        "operationId": "lufv_read_duty",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          },
          {
            "name": "duty_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty",
              "title": "Duty Id"
            },
            "description": "ID of the duty"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDuty"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Update Duty",
        "description": "Reconfigure existing duty.",
        "operationId": "lufv_update_duty",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          },
          {
            "name": "duty_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty",
              "title": "Duty Id"
            },
            "description": "ID of the duty"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVDutyCategoryCreate",
                "description": "JSON data with changes in duty configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDuty"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Duties"
        ],
        "summary": "Delete Duty",
        "description": "Delete existing duty.",
        "operationId": "lufv_delete_duty",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "dutycategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty category",
              "title": "Dutycategory Id"
            },
            "description": "ID of the duty category"
          },
          {
            "name": "duty_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the duty",
              "title": "Duty Id"
            },
            "description": "ID of the duty"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDuty"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/job": {
      "get": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Read Jobcategories",
        "description": "Retrieve job categories configured.",
        "operationId": "lufv_read_jobcategories",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/LUFVJobCategoryBase"
                  },
                  "type": "array",
                  "title": "Response Lufv Read Jobcategories"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Create Jobcategory",
        "description": "Configure new job category.",
        "operationId": "lufv_create_jobcategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVJobCategoryCreate",
                "description": "JSON data with job category configuration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJobCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/lufv/job/expanded": {
      "get": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Read Jobcategories Expanded",
        "description": "Retrieve job categories including list of jobs.",
        "operationId": "lufv_read_jobcategories_expanded",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "school_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "Only list categories with jobs valid in this school",
              "default": 1,
              "title": "School Org Id"
            },
            "description": "Only list categories with jobs valid in this school",
            "examples": {
              "TUCS000": {
                "summary": "CS",
                "description": "TUM Campus Straubing für Biotechnologie und Nachhaltigkeit (TUMCS)",
                "value": 48777
              },
              "TUS1000": {
                "summary": "CIT",
                "description": "TUM School of Computation, Information and Technology",
                "value": 51897
              },
              "TUS2000": {
                "summary": "ED",
                "description": "TUM School of Engineering and Design",
                "value": 51267
              },
              "TUS3000": {
                "summary": "NAT",
                "description": "TUM School of Natural Sciences",
                "value": 51898
              },
              "TUS4000": {
                "summary": "LS",
                "description": "TUM School of Life Sciences",
                "value": 51258
              },
              "TUS5000": {
                "summary": "MH",
                "description": "TUM School of Medicine and Health",
                "value": 51899
              },
              "TUS6000": {
                "summary": "MGT",
                "description": "TUM School of Management",
                "value": 51900
              },
              "TUS7000": {
                "summary": "SOT",
                "description": "TUM School of Social Sciences and Technology",
                "value": 51901
              },
              "TUZEIO2": {
                "summary": "TUZEIO2",
                "description": "TUM Sprachenzentrum",
                "value": 26608
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVJobCategory"
                  },
                  "title": "Response Lufv Read Jobcategories Expanded"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/job/html": {
      "get": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Read Jobcategories Html",
        "description": "Retrieve job list as HTML tables.",
        "operationId": "lufv_read_jobcategories_html",
        "parameters": [
          {
            "name": "school_org_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the school",
              "title": "School Org Id"
            },
            "description": "ID of the school"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/LanguageSelection"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Language of output.",
              "title": "Language"
            },
            "description": "Language of output."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "const": "ALL",
                  "type": "string"
                }
              ],
              "description": "Limit to jabs valid in semester.",
              "default": "exam",
              "title": "Semester Key"
            },
            "description": "Limit to jabs valid in semester."
          }
        ],
        "responses": {
          "200": {
            "description": "Return job list as HTML tables.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/job/{jobcategory_id}": {
      "get": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Read Jobs",
        "description": "Retrieve jobs from category.",
        "operationId": "lufv_read_jobs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVJobBase"
                  },
                  "title": "Response Lufv Read Jobs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Update Jobcategory",
        "description": "Reconfigure existing job category.",
        "operationId": "lufv_update_jobcategory",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVJobCategoryCreate",
                "description": "JSON data with changes in job category configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJobCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Delete Jobcategory",
        "description": "Delete existing job category.",
        "operationId": "lufv_delete_jobcategory",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJobCategory"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Create Job",
        "description": "Configure new job in a category.",
        "operationId": "lufv_create_job",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVJobCreate",
                "description": "JSON data with job configuration"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/job/{jobcategory_id}/{job_id}": {
      "get": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Read Job",
        "description": "Retrieve job.",
        "operationId": "lufv_read_job",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job",
              "title": "Job Id"
            },
            "description": "ID of the job"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Update Job",
        "description": "Reconfigure existing job.",
        "operationId": "lufv_update_job",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job",
              "title": "Job Id"
            },
            "description": "ID of the job"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVJobCategoryCreate",
                "description": "JSON data with changes in job configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Jobs"
        ],
        "summary": "Delete Job",
        "description": "Delete existing job.",
        "operationId": "lufv_delete_job",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "jobcategory_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job category",
              "title": "Jobcategory Id"
            },
            "description": "ID of the job category"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job",
              "title": "Job Id"
            },
            "description": "ID of the job"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/course": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Courses",
        "description": "Get log of org accounts in semester.",
        "operationId": "lufv_read_courses",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "ID of the semester",
              "default": "previous",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "only_underannounced",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show course-job-combinations where lvs>lvs_announced.",
              "default": false,
              "title": "Only Underannounced"
            },
            "description": "Only show course-job-combinations where lvs>lvs_announced."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVCourseJobTotalHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/course/{course_id}": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Course",
        "description": "Get log of org accounts in semester.",
        "operationId": "lufv_read_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of course.",
              "title": "Course Id"
            },
            "description": "ID of course."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVCourseJobTotalWithRecords"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/thesis": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Theses",
        "description": "Get theses of supervisors in the org in the semester.",
        "operationId": "lufv_read_theses",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "ID of the semester",
              "default": "previous",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "only_without_cosupervision",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show theses, that are not yet assigned a cosupervisor",
              "default": true,
              "title": "Only Without Cosupervision"
            },
            "description": "Only show theses, that are not yet assigned a cosupervisor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVThesisCosupervision"
                  },
                  "title": "Response Lufv Read Theses"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Org Semesters",
        "description": "Retrieve semesters with accounts of org.",
        "operationId": "lufv_read_org_semesters",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemesterBase"
                  },
                  "title": "Response Lufv Read Org Semesters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Org Accounts",
        "description": "Retrieve accounts of org in a semester.",
        "operationId": "lufv_read_org_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "without_reporter",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only show accounts in orgs without reporter",
              "title": "Without Reporter"
            },
            "description": "Only show accounts in orgs without reporter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVStaffGroup"
                  },
                  "title": "Response Lufv Read Org Accounts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Forward Org Accounts",
        "description": "Forward projection of all accounts in an org to the next semester.",
        "operationId": "lufv_forward_org_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the new semester",
              "title": "Semester Key"
            },
            "description": "ID of the new semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Overwrite parameters of accounts already existing in the new semester.",
              "default": false,
              "title": "Force"
            },
            "description": "Overwrite parameters of accounts already existing in the new semester."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/log": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Org Log",
        "description": "Get log of org accounts in semester.",
        "operationId": "lufv_read_org_log",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVLogAccount"
                  },
                  "title": "Response Lufv Read Org Log"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/pdf": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Org Report Pdf",
        "description": "Retrieve org report as PDF.",
        "operationId": "lufv_read_org_report_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "integral",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Generate PDF for integral report with local documentation.",
              "default": false,
              "title": "Integral"
            },
            "description": "Generate PDF for integral report with local documentation."
          }
        ],
        "responses": {
          "200": {
            "description": "Return teaching report of org as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/confirm": {
      "put": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Confirm Org Accounts",
        "description": "Confirm all accounts of an org as final.",
        "operationId": "lufv_confirm_org_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVOrgConfirmResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Unconfirm Org Accounts",
        "description": "Confirm all accounts of an org as final.",
        "operationId": "lufv_unconfirm_org_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/integral": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Orgintegral",
        "description": "Get teching activity of org as integral.",
        "operationId": "lufv_read_orgintegral",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "school_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the school.",
              "title": "School Org Id"
            },
            "description": "ID of the school."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVOrgIntegral"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Report Orgintegral",
        "description": "Report teching activity of org as integral.",
        "operationId": "lufv_report_orgintegral",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "school_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the school.",
              "title": "School Org Id"
            },
            "description": "ID of the school."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVOrgIntegralReport",
                "description": "JSON with integral report data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVOrgIntegral"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Revoke Orgintegral",
        "description": "Revoke an integral report of teching activity of org.",
        "operationId": "lufv_revoke_orgintegral",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "school_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the school.",
              "title": "School Org Id"
            },
            "description": "ID of the school."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVOrgIntegral"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/duties/{duty_id}": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Org Duties",
        "description": "Get duty records of a specific type of org.",
        "operationId": "lufv_read_org_duties",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "duty_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job",
              "title": "Duty Id"
            },
            "description": "ID of the job",
            "examples": {
              "duty_reduction_group": {
                "summary": "Reduction of Credit Duty within the research group",
                "value": "duty_reduction_group"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVDutyRecordAccount"
                  },
                  "title": "Response Lufv Read Org Duties"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/integral/xlsx": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Schoolintegral Xlsx",
        "description": "Get teching duty summary of school as xlsx file.",
        "operationId": "lufv_read_schoolintegral_xlsx",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of school.",
              "title": "Org Id"
            },
            "description": "ID of school.",
            "examples": {
              "TUCS000": {
                "summary": "CS",
                "description": "TUM Campus Straubing für Biotechnologie und Nachhaltigkeit (TUMCS)",
                "value": 48777
              },
              "TUS1000": {
                "summary": "CIT",
                "description": "TUM School of Computation, Information and Technology",
                "value": 51897
              },
              "TUS2000": {
                "summary": "ED",
                "description": "TUM School of Engineering and Design",
                "value": 51267
              },
              "TUS3000": {
                "summary": "NAT",
                "description": "TUM School of Natural Sciences",
                "value": 51898
              },
              "TUS4000": {
                "summary": "LS",
                "description": "TUM School of Life Sciences",
                "value": 51258
              },
              "TUS5000": {
                "summary": "MH",
                "description": "TUM School of Medicine and Health",
                "value": 51899
              },
              "TUS6000": {
                "summary": "MGT",
                "description": "TUM School of Management",
                "value": 51900
              },
              "TUS7000": {
                "summary": "SOT",
                "description": "TUM School of Social Sciences and Technology",
                "value": 51901
              },
              "TUZEIO2": {
                "summary": "TUZEIO2",
                "description": "TUM Sprachenzentrum",
                "value": 26608
              }
            }
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "confirmed_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only use confirmed entries in report",
              "default": true,
              "title": "Confirmed Only"
            },
            "description": "Only use confirmed entries in report"
          }
        ],
        "responses": {
          "200": {
            "description": "Return school report as XLSX file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/file": {
      "put": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "File Org Accounts",
        "description": "Finalize all semester accounts or org.",
        "operationId": "lufv_file_org_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "school_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the school.",
              "title": "School Org Id"
            },
            "description": "ID of the school."
          },
          {
            "name": "form_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date, the written report was received (None for not received written report).",
              "title": "Form Date"
            },
            "description": "Date, the written report was received (None for not received written report)."
          },
          {
            "name": "carryover",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Carryover individual teaching duty to future semesters",
              "default": false,
              "title": "Carryover"
            },
            "description": "Carryover individual teaching duty to future semesters"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/transfer/{staffgroup_id}": {
      "post": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Accounts Transfer Deputat",
        "description": "Set individual deputat transfers to compensate for not fulfilled duties within a staffgroup.",
        "operationId": "lufv_accounts_transfer_deputat",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the new semester",
              "title": "Semester Key"
            },
            "description": "ID of the new semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "staffgroup_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the staffgroup.",
              "title": "Staffgroup Id"
            },
            "description": "ID of the staffgroup."
          },
          {
            "name": "school_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the school.",
              "title": "School Org Id"
            },
            "description": "ID of the school."
          },
          {
            "name": "remove_existing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Clear all existing deputat_transfer entries and calculate new transfers.",
              "default": false,
              "title": "Remove Existing"
            },
            "description": "Clear all existing deputat_transfer entries and calculate new transfers."
          },
          {
            "name": "maximum_transfer",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Maximum LVS to transfer onto one person",
              "default": "10",
              "title": "Maximum Transfer"
            },
            "description": "Maximum LVS to transfer onto one person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVDutyRecordAccount"
                  },
                  "title": "Response Lufv Accounts Transfer Deputat"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/staff": {
      "get": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Read Org Persons Without Account",
        "description": "Retrieve staff of org without account in a semester.",
        "operationId": "lufv_read_org_persons_without_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
                  },
                  "title": "Response Lufv Read Org Persons Without Account"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/org/{org_id}/{semester_key}/init": {
      "put": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Init Job Records For Org Accounts",
        "description": "Initialize all accounts of org in a semester with TUMonline courses.",
        "operationId": "lufv_init_job_records_for_org_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of org.",
              "title": "Org Id"
            },
            "description": "ID of org."
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "only_empty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True do not touch accounts with existing job entries.",
              "default": false,
              "title": "Only Empty"
            },
            "description": "If True do not touch accounts with existing job entries."
          },
          {
            "name": "only_theses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True only initialize theses records on accounts without theses records.",
              "default": false,
              "title": "Only Theses"
            },
            "description": "If True only initialize theses records on accounts without theses records."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/faculty": {
      "put": {
        "tags": [
          "Teaching Report Organisations"
        ],
        "summary": "Faculty Simulation",
        "description": "Return simulation of the faculty count over the next years.",
        "operationId": "lufv_faculty_simulation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "init_org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the org, to initialize with",
              "default": 51898,
              "title": "Init Org Id"
            },
            "description": "ID of the org, to initialize with"
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit to description from semester.",
              "default": "calendar",
              "title": "Semester Key"
            },
            "description": "Limit to description from semester.",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "years",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "Years to simulate",
              "default": 40,
              "title": "Years"
            },
            "description": "Years to simulate"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FacultySimulationConfig",
                "description": "JSON with the config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FacultySimulation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/summary/{username}/jobs": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Job Summary For User",
        "description": "Retrieve jobs from account for user.",
        "operationId": "lufv_read_job_summary_for_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "include_nonlufv",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include non-LUFV jobs",
              "default": false,
              "title": "Include Nonlufv"
            },
            "description": "Include non-LUFV jobs"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVJobRecord"
                  },
                  "title": "Response Lufv Read Job Summary For User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/summary/{username}/pdf": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Job Summary For User Pdf",
        "description": "Retrieve summary for user as PDF.",
        "operationId": "lufv_read_job_summary_for_user_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "from_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Do not include semesters before this",
              "title": "From Semester Key"
            },
            "description": "Do not include semesters before this",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "to_semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Do not include semesters after this",
              "title": "To Semester Key"
            },
            "description": "Do not include semesters after this",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "include_nonlufv",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include non-LUFV jobs",
              "default": false,
              "title": "Include Nonlufv"
            },
            "description": "Include non-LUFV jobs"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language of the summary (\"de\" for German, \"en\" for English)",
              "default": "de"
            },
            "description": "Language of the summary (\"de\" for German, \"en\" for English)"
          },
          {
            "name": "signature_field",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include a signature field on the report",
              "default": false,
              "title": "Signature Field"
            },
            "description": "Include a signature field on the report"
          }
        ],
        "responses": {
          "200": {
            "description": "Return teaching summary as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/search": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Search Accounts",
        "description": "Search for persons with accounts.",
        "operationId": "lufv_search_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username or search phrase for name of the person",
              "title": "Q"
            },
            "description": "Username or search phrase for name of the person"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "namestart",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search phrase for name.",
              "title": "Namestart"
            },
            "description": "Search phrase for name."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Restrict to accounts of semester with key.",
              "title": "Semester Key"
            },
            "description": "Restrict to accounts of semester with key.",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVPersonHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{username}": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Accounts For User",
        "description": "Retrieve accounts for user.",
        "operationId": "lufv_read_accounts_for_user",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/log": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Account Log",
        "description": "Get log of account.",
        "operationId": "lufv_read_account_log",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVLogBase"
                  },
                  "title": "Response Lufv Read Account Log"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{username}/log": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read User Log",
        "description": "Get log of user accounts.",
        "operationId": "lufv_read_user_log",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVLogSemester"
                  },
                  "title": "Response Lufv Read User Log"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Account",
        "description": "Retrieve account.",
        "operationId": "lufv_read_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Update Account",
        "description": "Reconfigure existing account.\n* _contract_fraction_: fraction of the salaried contract as decimal number >0 and <=1\n* _start_date_: start date of the contract, especially, if after semester start\n* _end_date_: end date of the contract, especially, if before semester end\n* _two_days_: whether teaching was done on more than two days of the week during the lecture period",
        "operationId": "lufv_update_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "force_duty_update",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Force update of duty records",
              "default": false,
              "title": "Force Duty Update"
            },
            "description": "Force update of duty records"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/LUFVAccountUpdate"
                  },
                  {
                    "$ref": "#/components/schemas/LUFVAccountUpdateAdmin"
                  }
                ],
                "description": "JSON data with changes of account configuration",
                "title": "Account In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Delete Account",
        "description": "Delete account",
        "operationId": "lufv_delete_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Create Job Record",
        "description": "Post new job record to an account.",
        "operationId": "lufv_create_job_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVJobRecordCreate",
                "description": "JSON data with the new job record"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJobRecordWithAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/duty": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Account Duty",
        "description": "Retrieve account’s duty records.",
        "operationId": "lufv_read_account_duty",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVDutyRecordEdit-Output"
                  },
                  "title": "Response Lufv Read Account Duty"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Replace Account Duty",
        "description": "Replace account’s duty records.",
        "operationId": "lufv_replace_account_duty",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LUFVDutyRecordEdit-Input"
                },
                "description": "Full list of duty records for the account (existing records will be removed)",
                "title": "Duty In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/pdf": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Account Report Pdf",
        "description": "Retrieve report as PDF.",
        "operationId": "lufv_read_account_report_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Return teaching report as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}": {
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Create Account",
        "description": "Configure new account in a semester.",
        "operationId": "lufv_create_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/LUFVAccountCreate"
                  },
                  {
                    "$ref": "#/components/schemas/LUFVAccountCreateAdmin"
                  }
                ],
                "description": "JSON data with account configuration",
                "title": "Account In"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/import/{school_org_id}": {
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Import Accounts",
        "description": "Import accounts from SAP export.",
        "operationId": "lufv_import_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "school_org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of school",
              "title": "School Org Id"
            },
            "description": "ID of school",
            "examples": {
              "TUCS000": {
                "summary": "CS",
                "description": "TUM Campus Straubing für Biotechnologie und Nachhaltigkeit (TUMCS)",
                "value": 48777
              },
              "TUS1000": {
                "summary": "CIT",
                "description": "TUM School of Computation, Information and Technology",
                "value": 51897
              },
              "TUS2000": {
                "summary": "ED",
                "description": "TUM School of Engineering and Design",
                "value": 51267
              },
              "TUS3000": {
                "summary": "NAT",
                "description": "TUM School of Natural Sciences",
                "value": 51898
              },
              "TUS4000": {
                "summary": "LS",
                "description": "TUM School of Life Sciences",
                "value": 51258
              },
              "TUS5000": {
                "summary": "MH",
                "description": "TUM School of Medicine and Health",
                "value": 51899
              },
              "TUS6000": {
                "summary": "MGT",
                "description": "TUM School of Management",
                "value": 51900
              },
              "TUS7000": {
                "summary": "SOT",
                "description": "TUM School of Social Sciences and Technology",
                "value": 51901
              },
              "TUZEIO2": {
                "summary": "TUZEIO2",
                "description": "TUM Sprachenzentrum",
                "value": 26608
              }
            }
          },
          {
            "name": "sapexport_password",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "writeOnly": true,
                  "format": "password"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If XLSX is encrypted, password to decrypt.",
              "title": "Sapexport Password"
            },
            "description": "If XLSX is encrypted, password to decrypt."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_lufv_import_accounts"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVSAPImportResult"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/external/{school_org_id}": {
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Create Accounts For External",
        "description": "Create accounts for external PD/Hon.Prof..",
        "operationId": "lufv_create_accounts_for_external",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "school_org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of school",
              "title": "School Org Id"
            },
            "description": "ID of school",
            "examples": {
              "TUCS000": {
                "summary": "CS",
                "description": "TUM Campus Straubing für Biotechnologie und Nachhaltigkeit (TUMCS)",
                "value": 48777
              },
              "TUS1000": {
                "summary": "CIT",
                "description": "TUM School of Computation, Information and Technology",
                "value": 51897
              },
              "TUS2000": {
                "summary": "ED",
                "description": "TUM School of Engineering and Design",
                "value": 51267
              },
              "TUS3000": {
                "summary": "NAT",
                "description": "TUM School of Natural Sciences",
                "value": 51898
              },
              "TUS4000": {
                "summary": "LS",
                "description": "TUM School of Life Sciences",
                "value": 51258
              },
              "TUS5000": {
                "summary": "MH",
                "description": "TUM School of Medicine and Health",
                "value": 51899
              },
              "TUS6000": {
                "summary": "MGT",
                "description": "TUM School of Management",
                "value": 51900
              },
              "TUS7000": {
                "summary": "SOT",
                "description": "TUM School of Social Sciences and Technology",
                "value": 51901
              },
              "TUZEIO2": {
                "summary": "TUZEIO2",
                "description": "TUM Sprachenzentrum",
                "value": 26608
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LUFVAccount"
                  },
                  "title": "Response Lufv Create Accounts For External"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/init": {
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Init Job Records",
        "description": "Init account with jobs derived from TUMonline course catalog.",
        "operationId": "lufv_init_job_records",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "only_theses",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only update theses records",
              "default": false,
              "title": "Only Theses"
            },
            "description": "Only update theses records"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/confirm": {
      "put": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Confirm Account",
        "description": "Confirm job records in account as final.",
        "operationId": "lufv_confirm_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/unconfirm": {
      "put": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Unconfirm Account",
        "description": "Revoke confirmation of job records in account as final.",
        "operationId": "lufv_unconfirm_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/file": {
      "put": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "File Account",
        "description": "Finalize semester account with job records.",
        "operationId": "lufv_file_account",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "form_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date, the written report was received (None for not received written report).",
              "title": "Form Date"
            },
            "description": "Date, the written report was received (None for not received written report)."
          },
          {
            "name": "carryover",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Carryover teaching duty to future semesters",
              "default": false,
              "title": "Carryover"
            },
            "description": "Carryover teaching duty to future semesters"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVAccountPlus"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/job/{job_id}": {
      "get": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Read Account Job",
        "description": "Retrieve job.",
        "operationId": "lufv_read_account_job",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job",
              "title": "Job Id"
            },
            "description": "ID of the job"
          },
          {
            "name": "override_course_restriction",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "As admin override individual restriction of courses and list all.",
              "default": false,
              "title": "Override Course Restriction"
            },
            "description": "As admin override individual restriction of courses and list all."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJobCourses"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/leave/{duty_id}": {
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Create Leave Record",
        "description": "Post new job record to an account.",
        "operationId": "lufv_create_leave_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "duty_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LUFVDutyLeaveType",
              "description": "Type of leave"
            },
            "description": "Type of leave"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVLeaveRecordCreate",
                "description": "JSON data with the new leave record"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyRecordAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/leave/{record_id}": {
      "delete": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Delete Leave Record",
        "description": "Delete leave record in an account.",
        "operationId": "lufv_delete_leave_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the record",
              "title": "Record Id"
            },
            "description": "UUID of the record"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyRecordAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/reduction/{duty_id}": {
      "post": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Create Reduction Record",
        "description": "Post new job record to an account.",
        "operationId": "lufv_create_reduction_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "duty_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/LUFVDutyReductionType",
              "description": "Type of reduction"
            },
            "description": "Type of reduction"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVReductionRecord",
                "description": "JSON data with the new reduction record"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyRecordAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/reduction/{record_id}": {
      "delete": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Delete Reduction Record",
        "description": "Delete leave record in an account.",
        "operationId": "lufv_delete_reduction_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the record",
              "title": "Record Id"
            },
            "description": "UUID of the record"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVDutyRecordAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/account/{semester_key}/{username}/{record_id}": {
      "put": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Update Job Record",
        "description": "Update job record in an account.",
        "operationId": "lufv_update_job_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the record",
              "title": "Record Id"
            },
            "description": "UUID of the record"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVJobRecordUpdate",
                "description": "JSON data to be updated in job record"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/LUFVJobRecordWithAccount"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Lufv Update Job Record"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Teaching Report Accounts"
        ],
        "summary": "Delete Job Record",
        "description": "Delete job record in an account.",
        "operationId": "lufv_delete_job_record",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the person",
              "title": "Username"
            },
            "description": "Username of the person"
          },
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the record",
              "title": "Record Id"
            },
            "description": "UUID of the record"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVJobRecordWithAccount"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/coordinator/{semester_key}/account": {
      "get": {
        "tags": [
          "Teaching Report Coordinator"
        ],
        "summary": "Coordinator Read Accounts",
        "description": "Read accounts for coordinator.",
        "operationId": "lufv_coordinator_read_accounts",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonBaseUsername"
                  },
                  "title": "Response Lufv Coordinator Read Accounts"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/coordinator/{semester_key}": {
      "get": {
        "tags": [
          "Teaching Report Coordinator"
        ],
        "summary": "Coordinator Read Courses",
        "description": "Read courses for coordinator.",
        "operationId": "lufv_coordinator_read_courses",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseBaseLUFV"
                  },
                  "title": "Response Lufv Coordinator Read Courses"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/coordinator/{semester_key}/{course_id}": {
      "get": {
        "tags": [
          "Teaching Report Coordinator"
        ],
        "summary": "Coordinator Read Course",
        "description": "Read course details for coordinator.",
        "operationId": "lufv_coordinator_read_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the course",
              "title": "Course Id"
            },
            "description": "ID of the course"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVCoordinatorCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Teaching Report Coordinator"
        ],
        "summary": "Coordinator Create Or Update Job Records",
        "description": "Insert or update job records for a course to multiple accounts.",
        "operationId": "lufv_coordinator_create_or_update_job_records",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the course",
              "title": "Course Id"
            },
            "description": "ID of the course"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LUFVCoordinatorRecordsUpdate",
                "description": "JSON data with the new job records"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVCoordinatorCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/lufv/coordinator/{semester_key}/{course_id}/{job_id}": {
      "get": {
        "tags": [
          "Teaching Report Coordinator"
        ],
        "summary": "Coordinator Read Course Job",
        "description": "Read course details for coordinator with job records.",
        "operationId": "lufv_coordinator_read_course_job",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "ID of the semester",
              "title": "Semester Key"
            },
            "description": "ID of the semester",
            "examples": {
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          },
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the course",
              "title": "Course Id"
            },
            "description": "ID of the course"
          },
          {
            "name": "job_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the job",
              "title": "Job Id"
            },
            "description": "ID of the job"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LUFVCoordinatorCourseJob"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moodle/summary": {
      "get": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Read Summary Courses",
        "description": "Read quiz summary for courses.",
        "operationId": "moodle_read_summary_courses",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MoodleCourse"
                  },
                  "type": "array",
                  "title": "Response Moodle Read Summary Courses"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Create Summary Course",
        "description": "Activate quiz summary for course.",
        "operationId": "moodle_create_summary_course",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoodleCourseCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/moodle/summary/{course_id}": {
      "put": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Update Summary Course",
        "description": "Activate quiz summary for course.",
        "operationId": "moodle_update_summary_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Course Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MoodleCourseUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Delete Summary Course",
        "description": "Deactivate quiz summary for course.",
        "operationId": "moodle_delete_summary_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Course Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Read Summary Course",
        "description": "Read quiz summary for course.",
        "operationId": "moodle_read_summary_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Course Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Check Summary Course",
        "description": "Check quiz summary for course now.",
        "operationId": "moodle_check_summary_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Course Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moodle/summary/{course_id}/{quiz_id}": {
      "post": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Test Summary Course",
        "description": "Check quiz summary for course now.",
        "operationId": "moodle_test_summary_course",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Course Id"
            }
          },
          {
            "name": "quiz_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quiz Id"
            }
          },
          {
            "name": "emails",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "format": "email"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "List of email addresses to send the summary to, defaults to the lists configured for regular summaries.",
              "title": "Emails"
            },
            "description": "List of email addresses to send the summary to, defaults to the lists configured for regular summaries."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Mark Summary Quiz Done",
        "description": "Mark quiz summary for course as done, will not be sent out.",
        "operationId": "moodle_mark_summary_quiz_done",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Course Id"
            }
          },
          {
            "name": "quiz_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Quiz Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MoodleCourse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/moodle/links/{org_id}": {
      "put": {
        "tags": [
          "Moodle Tools"
        ],
        "summary": "Repair Moodle Links",
        "description": "Update e-learning links in TUMonline.",
        "operationId": "moodle_repair_moodle_links",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Take courses from org.",
              "title": "Org Id"
            },
            "description": "Take courses from org."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "Take courses from semester (default: planning).",
              "default": "planning",
              "title": "Semester Key"
            },
            "description": "Take courses from semester (default: planning).",
            "examples": {
              "-": {
                "summary": "-"
              },
              "previous": {
                "summary": "Previous semester by calendar",
                "value": "previous"
              },
              "exam": {
                "summary": "Current semester by exam period",
                "value": "exam"
              },
              "calendar": {
                "summary": "Current semester by calendar",
                "value": "calendar"
              },
              "lecture": {
                "summary": "Current semester by lecture period",
                "value": "lecture"
              },
              "next": {
                "summary": "Next semester by calendar",
                "value": "next"
              },
              "planning": {
                "summary": "Current semester open for lecture planning",
                "value": "planning"
              },
              "2019s": {
                "summary": "SS 2019",
                "value": "2019s"
              },
              "2019w": {
                "summary": "WS 2019/20",
                "value": "2019w"
              },
              "2020s": {
                "summary": "SS 2020",
                "value": "2020s"
              },
              "2020w": {
                "summary": "WS 2020/1",
                "value": "2020w"
              },
              "2021s": {
                "summary": "SS 2021",
                "value": "2021s"
              },
              "2021w": {
                "summary": "WS 2021/2",
                "value": "2021w"
              },
              "2022s": {
                "summary": "SS 2022",
                "value": "2022s"
              },
              "2022w": {
                "summary": "WS 2022/3",
                "value": "2022w"
              },
              "2023s": {
                "summary": "SS 2023",
                "value": "2023s"
              },
              "2023w": {
                "summary": "WS 2023/4",
                "value": "2023w"
              },
              "2024s": {
                "summary": "SS 2024",
                "value": "2024s"
              },
              "2024w": {
                "summary": "WS 2024/5",
                "value": "2024w"
              },
              "2025s": {
                "summary": "SS 2025",
                "value": "2025s"
              },
              "2025w": {
                "summary": "WS 2025/6",
                "value": "2025w"
              },
              "2026s": {
                "summary": "SS 2026",
                "value": "2026s"
              },
              "2026w": {
                "summary": "WS 2026/7",
                "value": "2026w"
              },
              "2027s": {
                "summary": "SS 2027",
                "value": "2027s"
              },
              "2027w": {
                "summary": "WS 2027/8",
                "value": "2027w"
              },
              "2028s": {
                "summary": "SS 2028",
                "value": "2028s"
              },
              "2028w": {
                "summary": "WS 2028/9",
                "value": "2028w"
              },
              "2029s": {
                "summary": "SS 2029",
                "value": "2029s"
              },
              "2029w": {
                "summary": "WS 2029/30",
                "value": "2029w"
              },
              "2030s": {
                "summary": "SS 2030",
                "value": "2030s"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/events": {
      "get": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Read Course Events",
        "description": "Get course dates.",
        "operationId": "course_read_course_events",
        "parameters": [
          {
            "name": "ghk",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "GHK of the course(s).",
              "title": "Ghk"
            },
            "description": "GHK of the course(s)."
          },
          {
            "name": "catalog_tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Catalog tags the courses are included.",
              "title": "Catalog Tag"
            },
            "description": "Catalog tags the courses are included."
          },
          {
            "name": "module_code",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Module codes the courses are included.",
              "title": "Module Code"
            },
            "description": "Module codes the courses are included."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "latest",
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select all dates from a semester.",
              "title": "Semester Key"
            },
            "description": "Select all dates from a semester."
          },
          {
            "name": "show_empty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show events without topic/speaker/link.",
              "default": false,
              "title": "Show Empty"
            },
            "description": "Show events without topic/speaker/link."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 5,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseEventBaseHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/events/ical": {
      "get": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Read Course Events Ical",
        "description": "Get course dates as icalendar file.",
        "operationId": "course_read_course_events_ical",
        "parameters": [
          {
            "name": "ghk",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "GHK of the course(s).",
              "title": "Ghk"
            },
            "description": "GHK of the course(s)."
          },
          {
            "name": "catalog_tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Catalog tags the courses are included.",
              "title": "Catalog Tag"
            },
            "description": "Catalog tags the courses are included."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language of the fields.",
              "default": "de"
            },
            "description": "Language of the fields."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "latest",
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select all dates from a semester.",
              "title": "Semester Key"
            },
            "description": "Select all dates from a semester."
          },
          {
            "name": "show_empty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show events without topic/speaker/link.",
              "default": false,
              "title": "Show Empty"
            },
            "description": "Show events without topic/speaker/link."
          },
          {
            "name": "include_description",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include description.",
              "default": true,
              "title": "Include Description"
            },
            "description": "Include description."
          },
          {
            "name": "include_html",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include description.",
              "default": false,
              "title": "Include Html"
            },
            "description": "Include description."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Return course dates as icalendar file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/calendar": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/events/html": {
      "get": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Read Course Events Html",
        "description": "Get course dates as html paragraph.",
        "operationId": "course_read_course_events_html",
        "parameters": [
          {
            "name": "ghk",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 0
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "GHK of the course(s).",
              "title": "Ghk"
            },
            "description": "GHK of the course(s)."
          },
          {
            "name": "catalog_tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Catalog tags the courses are included.",
              "title": "Catalog Tag"
            },
            "description": "Catalog tags the courses are included."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language of the fields.",
              "default": "de"
            },
            "description": "Language of the fields."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "latest",
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select all dates from a semester.",
              "title": "Semester Key"
            },
            "description": "Select all dates from a semester."
          },
          {
            "name": "show_empty",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show events without topic/speaker/link.",
              "default": false,
              "title": "Show Empty"
            },
            "description": "Show events without topic/speaker/link."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Return course dates as HTML paragraph.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/html": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/events/exampleical": {
      "get": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Test Events Ical",
        "description": "Get example icalendar file.",
        "operationId": "course_test_events_ical",
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language of the fields.",
              "default": "de"
            },
            "description": "Language of the fields."
          }
        ],
        "responses": {
          "200": {
            "description": "Return course dates as icalendar file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "text/calendar": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/sync/{org_id}": {
      "post": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Sync Courses Tumonline",
        "description": "Sync courses of current academic year for Org org_id.",
        "operationId": "course_sync_courses_tumonline",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org from which courses shall be synced.",
              "title": "Org Id"
            },
            "description": "ID of the org from which courses shall be synced."
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/sync/{org_id}/{course_id}": {
      "post": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Sync Course Tumonline",
        "description": "Sync a single course from TUMonline.",
        "operationId": "course_sync_course_tumonline",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org from which the course shall be synced.",
              "title": "Org Id"
            },
            "description": "ID of the org from which the course shall be synced."
          },
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the course to be synced.",
              "title": "Course Id"
            },
            "description": "ID of the course to be synced."
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/": {
      "get": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Read Courses",
        "description": "Get course data.",
        "operationId": "course_read_courses",
        "parameters": [
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Limit to description from semester.",
              "default": "lecture",
              "title": "Semester Key"
            },
            "description": "Limit to description from semester."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the org of the course.",
              "title": "Org Id"
            },
            "description": "ID of the org of the course."
          },
          {
            "name": "catalog_tag",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Tags of the catalogs of modules, the course is included in.",
              "title": "Catalog Tag"
            },
            "description": "Tags of the catalogs of modules, the course is included in."
          },
          {
            "name": "ghk",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "GHK of the course.",
              "title": "Ghk"
            },
            "description": "GHK of the course."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 200,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 50,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/course/{course_id}": {
      "get": {
        "tags": [
          "Course Catalog"
        ],
        "summary": "Read Course",
        "description": "Get course data.",
        "operationId": "course_read_course",
        "parameters": [
          {
            "name": "course_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the course.",
              "title": "Course Id"
            },
            "description": "ID of the course."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/planning/planning/{scheme_id}/html": {
      "get": {
        "tags": [
          "Teaching Plan"
        ],
        "summary": "Read Planning Scheme Html",
        "description": "Get planning scheme as HTML section.",
        "operationId": "planning_read_planning_scheme_html",
        "parameters": [
          {
            "name": "scheme_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the planning scheme.",
              "title": "Scheme Id"
            },
            "description": "ID of the planning scheme."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "latest",
                  "type": "string"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                }
              ],
              "description": "Select all dates from a semester.",
              "default": "latest",
              "title": "Semester Key"
            },
            "description": "Select all dates from a semester."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language of output.",
              "default": "de"
            },
            "description": "Language of output."
          }
        ],
        "responses": {
          "200": {
            "description": "Return planning scheme as HTML section.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program/public": {
      "get": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Read Programs",
        "description": "Get programs configured for thesis administration.",
        "operationId": "ths_read_programs",
        "parameters": [
          {
            "name": "include_offer_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include programs without administration, only offers of thesis projects.",
              "default": false,
              "title": "Include Offer Only"
            },
            "description": "Include programs without administration, only offers of thesis projects."
          },
          {
            "name": "latest_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only include the latest SPO version.",
              "default": false,
              "title": "Latest Only"
            },
            "description": "Only include the latest SPO version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisProgram"
                  },
                  "title": "Response Ths Read Programs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/": {
      "get": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Read Programs",
        "description": "Get programs configured for thesis administration.",
        "operationId": "ths_read_programs_deprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "include_offer_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include programs without administration, only offers of thesis projects.",
              "default": false,
              "title": "Include Offer Only"
            },
            "description": "Include programs without administration, only offers of thesis projects."
          },
          {
            "name": "latest_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only include the latest SPO version.",
              "default": false,
              "title": "Latest Only"
            },
            "description": "Only include the latest SPO version."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisProgram"
                  },
                  "title": "Response Ths Read Programs Deprecated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program": {
      "get": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Read Programs Admin",
        "description": "Get programs configured for thesis administration, where the user has admin/clerk/view access.",
        "operationId": "ths_read_programs_admin",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "include_offer_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include programs without administration, only offers of thesis prohjects.",
              "default": false,
              "title": "Include Offer Only"
            },
            "description": "Include programs without administration, only offers of thesis prohjects."
          },
          {
            "name": "only_combine_exams",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only list programs with combine_exams set",
              "default": false,
              "title": "Only Combine Exams"
            },
            "description": "Only list programs with combine_exams set"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisProgram"
                  },
                  "title": "Response Ths Read Programs Admin"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program/combined": {
      "get": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Read Programs Combined Admin",
        "description": "Get programs combined by study_id configured for thesis administration, where the user has admin/clerk/view access.",
        "operationId": "ths_read_programs_combined_admin",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProgramBase"
                  },
                  "type": "array",
                  "title": "Response Ths Read Programs Combined Admin"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/ths/program/templates/{tag}": {
      "post": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Install Template Admin",
        "description": "Install template for tag in the given thesis programs.",
        "operationId": "ths_install_template_admin",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TemplateTag",
              "description": "Template tag"
            },
            "description": "Template tag"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_ths_install_template_admin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Ths Install Template Admin"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program/templates/{tag}/{study_id}/{spo_version}/{thesis_subtype}": {
      "get": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Get Template Admin",
        "description": "Download template for tag in the given thesis program.",
        "operationId": "ths_get_template_admin",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TemplateTag",
              "description": "Template tag"
            },
            "description": "Template tag"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Study program ID",
              "title": "Study Id"
            },
            "description": "Study program ID"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version",
              "title": "Spo Version"
            },
            "description": "SPO version"
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Thesis subtype",
              "title": "Thesis Subtype"
            },
            "description": "Thesis subtype"
          }
        ],
        "responses": {
          "200": {
            "description": "Return installed DocX template file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Remove Template Admin",
        "description": "Install template for tag in the given thesis programs.",
        "operationId": "ths_remove_template_admin",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/TemplateTag",
              "description": "Template tag"
            },
            "description": "Template tag"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Study program ID",
              "title": "Study Id"
            },
            "description": "Study program ID"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version",
              "title": "Spo Version"
            },
            "description": "SPO version"
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Thesis subtype",
              "title": "Thesis Subtype"
            },
            "description": "Thesis subtype"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program/{study_id}/{spo_version}": {
      "post": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Create Program",
        "description": "Create program configuration.",
        "operationId": "ths_create_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisProgramConfigCreate",
                "description": "JSON schema with config data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisProgramInternal"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program/{study_id}/{spo_version}/{thesis_subtype}": {
      "get": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Read Program",
        "description": "Get program configuration.",
        "operationId": "ths_read_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "ID of the subtype of thesis within the program."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisProgramInternal"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Update Program",
        "description": "Update program configuration.",
        "operationId": "ths_update_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "ID of the subtype of thesis within the program."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisProgramConfigUpdate",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisProgramInternal"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Create Program Preparation",
        "description": "Create program preparation.",
        "operationId": "ths_create_program_preparation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "ID of the subtype of thesis within the program."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisProgramPreparationCreate",
                "description": "JSON schema with preparation data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisProgramPreparation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/program/{study_id}/{spo_version}/{thesis_subtype}/{thesispreparation_id}": {
      "put": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Update Program Preparation",
        "description": "Update program preparation.",
        "operationId": "ths_update_program_preparation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "ID of the subtype of thesis within the program."
          },
          {
            "name": "thesispreparation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the preparation module.",
              "title": "Thesispreparation Id"
            },
            "description": "ID of the preparation module."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisProgramPreparationUpdate",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisProgramPreparation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Theses Program Configuration"
        ],
        "summary": "Delete Program Preparation",
        "description": "Delete program preparation.",
        "operationId": "ths_delete_program_preparation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "ID of the subtype of thesis within the program."
          },
          {
            "name": "thesispreparation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the preparation module.",
              "title": "Thesispreparation Id"
            },
            "description": "ID of the preparation module."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisProgramInternal"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/offer": {
      "get": {
        "tags": [
          "Theses Offers"
        ],
        "summary": "Read Offers",
        "description": "Get public thesis project offers.",
        "operationId": "ths_read_offers",
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the study program.",
              "title": "Study Id"
            },
            "description": "Filter by ID of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "Filter by ID of the subtype of thesis within the program."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by supporting org.",
              "title": "Org Id"
            },
            "description": "Filter by supporting org."
          },
          {
            "name": "supervisor_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by supervisor.",
              "title": "Supervisor Username"
            },
            "description": "Filter by supervisor."
          },
          {
            "name": "supervisor_person_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 16,
                  "maxLength": 16,
                  "pattern": "^[A-F0-9]{16}$",
                  "examples": [
                    "8694A922D56E4F87",
                    "2D1E1B14DDBF776D"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by supervisor (overrides filter by supervisor_username).",
              "title": "Supervisor Person Id"
            },
            "description": "Filter by supervisor (overrides filter by supervisor_username)."
          },
          {
            "name": "researchfield_0",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by researchfield",
              "title": "Researchfield 0"
            },
            "description": "Filter by researchfield"
          },
          {
            "name": "researchfield_1",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by researchfield",
              "title": "Researchfield 1"
            },
            "description": "Filter by researchfield"
          },
          {
            "name": "researchfield_2",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by researchfield",
              "title": "Researchfield 2"
            },
            "description": "Filter by researchfield"
          },
          {
            "name": "researchfield_3",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by researchfield",
              "title": "Researchfield 3"
            },
            "description": "Filter by researchfield"
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Offers are sorted by German or English working title.",
              "default": "de"
            },
            "description": "Offers are sorted by German or English working title."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisOfferHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/offer/{thesisoffer_id}": {
      "get": {
        "tags": [
          "Theses Offers"
        ],
        "summary": "Read Offer",
        "description": "Get thesis offer.",
        "operationId": "ths_read_offer",
        "parameters": [
          {
            "name": "thesisoffer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis offer.",
              "title": "Thesisoffer Id"
            },
            "description": "ID of the thesis offer."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisOffer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/program": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Programs Student",
        "description": "Get thesis programs, the user may register theses in.",
        "operationId": "ths_read_programs_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "student_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "ths.clerk may set the username of the student",
              "title": "Student Username"
            },
            "description": "ths.clerk may set the username of the student"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisProgramStudent"
                  },
                  "title": "Response Ths Read Programs Student"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/registration": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Registrations Student",
        "description": "Get pending thesis registrations as student.",
        "operationId": "ths_read_registrations_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "student_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "ths.clerk may set the username of the student",
              "title": "Student Username"
            },
            "description": "ths.clerk may set the username of the student"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisRegistration"
                  },
                  "title": "Response Ths Read Registrations Student"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Init Registration Student",
        "description": "Create thesis registration as student.",
        "operationId": "ths_init_registration_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRegistrationCreate",
                "description": "JSON schema with thesis registration data."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/register": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Registrations Student",
        "description": "Get pending thesis registrations as student.",
        "operationId": "ths_read_registrations_student_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "student_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "ths.clerk may set the username of the student",
              "title": "Student Username"
            },
            "description": "ths.clerk may set the username of the student"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisRegistration"
                  },
                  "title": "Response Ths Read Registrations Student Deprecated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Create Registration Student",
        "description": "Create thesis registration as student.",
        "operationId": "ths_create_registration_student_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Create form in German [de] (default) or English [en]",
              "default": "de"
            },
            "description": "Create form in German [de] (default) or English [en]"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRegistrationCreate",
                "description": "JSON schema with thesis registration data."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return registration form as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/registration/{thesis_id}": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Registration Student",
        "description": "Get pending thesis registration as student.",
        "operationId": "ths_read_registration_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Update Registration Student",
        "description": "Update thesis registration.",
        "operationId": "ths_update_registration_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRegistrationBase",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Cancel Registration",
        "description": "Cancel thesis registration.",
        "operationId": "ths_cancel_registration",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/register/{thesis_id}": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Registration Student",
        "description": "Get pending thesis registration as student.",
        "operationId": "ths_read_registration_student_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Update Registration",
        "description": "Update thesis registration.",
        "operationId": "ths_update_registration_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Create form in German [de] (default) or English [en]",
              "default": "de"
            },
            "description": "Create form in German [de] (default) or English [en]"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRegistrationBase",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return updated registration form as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Cancel Registration",
        "description": "Cancel thesis registration.",
        "operationId": "ths_cancel_registration_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/registration/{thesis_id}/pdf": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Download Registration Pdf",
        "description": "Re-download thesis registration.",
        "operationId": "ths_download_registration_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Re-Download registration form as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/register/{thesis_id}/pdf": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Download Registration Pdf",
        "description": "Re-download thesis registration.",
        "operationId": "ths_download_registration_pdf_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Re-Download registration form as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/registration/{thesis_id}/confirm": {
      "put": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Student Confirm Registration",
        "description": "Confirm thesis registration as student.",
        "operationId": "ths_student_confirm_registration",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "List of the confirmations",
                "title": "Registration In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Theses Student",
        "description": "Get theses as student.",
        "operationId": "ths_read_theses_student",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Thesis"
                  },
                  "type": "array",
                  "title": "Response Ths Read Theses Student"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/ths/student/{thesis_id}": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Thesis Student",
        "description": "Get thesis as student.",
        "operationId": "ths_read_thesis_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thesis"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Update Thesis Student",
        "description": "Update thesis as student.",
        "operationId": "ths_update_thesis_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisUpdateStudent",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thesis"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Upload Thesis",
        "description": "Upload thesis PDF.",
        "operationId": "ths_upload_thesis",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_ths_upload_thesis"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisFile"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/{thesis_id}/confirm": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Thesis Confirmation Student",
        "description": "Get thesis registration confirmation letter as student.",
        "operationId": "ths_read_thesis_confirmation_student_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "responses": {
          "200": {
            "description": "Return confirmation letter for thesis registration as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/{thesis_id}/deliver": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Thesis Delivery Student",
        "description": "Get thesis delivery letter as student.",
        "operationId": "ths_read_thesis_delivery_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Language of the letter to be created",
              "default": "de"
            },
            "description": "Language of the letter to be created"
          }
        ],
        "responses": {
          "200": {
            "description": "Return delivery letter for thesis as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/{thesis_id}/storage/{filename}": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Thesis Doc",
        "description": "Get document from storage for the thesis.",
        "operationId": "ths_read_thesis_doc",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "pattern": "^[-_a-zA-Z0-9]+\\.(pdf|eml)$",
              "description": "File to retreive.",
              "title": "Filename"
            },
            "description": "File to retreive."
          }
        ],
        "responses": {
          "200": {
            "description": "Download PDF from Student File.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/{thesis_id}/{revision}": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Read Thesis File",
        "description": "Get thesis.",
        "operationId": "ths_read_thesis_file",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Revision of the thesis.",
              "title": "Revision"
            },
            "description": "Revision of the thesis."
          }
        ],
        "responses": {
          "200": {
            "description": "Return thesis PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/student/checktitle": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Check Thesis Title",
        "description": "Check title and return a version printable on LN/ToR.",
        "operationId": "ths_check_thesis_title",
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Title to be checked.",
              "title": "Title"
            },
            "description": "Title to be checked."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisTitelCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/checktitle": {
      "get": {
        "tags": [
          "Theses Students"
        ],
        "summary": "Check Thesis Title",
        "description": "Check title and return a version printable on LN/ToR.",
        "operationId": "ths_check_thesis_title_deprecated",
        "deprecated": true,
        "parameters": [
          {
            "name": "title",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Title to be checked.",
              "title": "Title"
            },
            "description": "Title to be checked."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisTitelCheck"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/offer": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Offers Supervisor",
        "description": "Get thesis project offers.",
        "operationId": "ths_read_offers_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the study program.",
              "title": "Study Id"
            },
            "description": "Filter by ID of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "Filter by ID of the subtype of thesis within the program."
          },
          {
            "name": "valid_to_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "all",
                  "type": "string"
                },
                {
                  "type": "string",
                  "format": "date"
                }
              ],
              "description": "Show only offers valid at this date (defaults to today), set to \"all\" to disable filter",
              "title": "Valid To Date"
            },
            "description": "Show only offers valid at this date (defaults to today), set to \"all\" to disable filter"
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by supporting org.",
              "title": "Org Id"
            },
            "description": "Filter by supporting org."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisOfferHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Create Offer",
        "description": "Create thesis offer.",
        "operationId": "ths_create_offer",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisOfferCreate",
                "description": "JSON schema with offer data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisOffer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/program": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Programs Supervisor",
        "description": "Get thesis programs, the user (or supervisor_username) may act as supervisor in.",
        "operationId": "ths_read_programs_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "supervisor_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username of supervisor, if acting as proxy.",
              "title": "Supervisor Username"
            },
            "description": "Username of supervisor, if acting as proxy."
          },
          {
            "name": "include_offer_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include programs without administration, only offers of thesis projects.",
              "default": false,
              "title": "Include Offer Only"
            },
            "description": "Include programs without administration, only offers of thesis projects."
          },
          {
            "name": "with_theses_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only show programs with actual thesis projects (or offers, if include_offer_only).",
              "default": false,
              "title": "With Theses Only"
            },
            "description": "Only show programs with actual thesis projects (or offers, if include_offer_only)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisProgramSupervisor"
                  },
                  "title": "Response Ths Read Programs Supervisor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/supervisor": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Supervisor",
        "description": "Get thesis programs, the user (or supervisor_username) may act as supervisor in.",
        "operationId": "ths_read_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "supervisor_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username of supervisor, if acting as proxy.",
              "title": "Supervisor Username"
            },
            "description": "Username of supervisor, if acting as proxy."
          },
          {
            "name": "include_offer_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Include programs without administration, only offers of thesis prohjects.",
              "default": true,
              "title": "Include Offer Only"
            },
            "description": "Include programs without administration, only offers of thesis prohjects."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supervisor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/offer/{thesisoffer_id}": {
      "put": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Update Offer",
        "description": "Update thesis offer.",
        "operationId": "ths_update_offer",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesisoffer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis offer.",
              "title": "Thesisoffer Id"
            },
            "description": "ID of the thesis offer."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisOfferUpdate",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisOffer"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Delete Offer",
        "description": "Delete thesis offer.",
        "operationId": "ths_delete_offer",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesisoffer_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis offer.",
              "title": "Thesisoffer Id"
            },
            "description": "ID of the thesis offer."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/registration": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Registrations Supervisor",
        "description": "Get pending thesis registrations as supervisor.",
        "operationId": "ths_read_registrations_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "supervisor_username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username of the supervisor",
              "title": "Supervisor Username"
            },
            "description": "Username of the supervisor"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisRegistration"
                  },
                  "title": "Response Ths Read Registrations Supervisor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/registration/{thesis_id}": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Registration Supervisor",
        "description": "Get pending thesis registration as supervisor.",
        "operationId": "ths_read_registration_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/registration/{thesis_id}/pdf": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Supervisor Download Registration Pdf",
        "description": "Re-download thesis registration.",
        "operationId": "ths_supervisor_download_registration_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Download registration form as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/registration/{thesis_id}/confirm": {
      "put": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Supervisor Confirm Registration",
        "description": "Confirm thesis registration as student.",
        "operationId": "ths_supervisor_confirm_registration",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Theses Supervisor",
        "description": "Get thesis projects as supervisor.",
        "operationId": "ths_read_theses_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the study program.",
              "title": "Study Id"
            },
            "description": "Filter by ID of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "Filter by ID of the subtype of thesis within the program."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              },
              "description": "Filter by supporting org.",
              "default": [],
              "title": "Org Id"
            },
            "description": "Filter by supporting org."
          },
          {
            "name": "namestart",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search phrase for name.",
              "title": "Namestart"
            },
            "description": "Search phrase for name."
          },
          {
            "name": "include_finalized",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include finalized theses (all grades are in). Default: False is semester_key is not set, else True",
              "title": "Include Finalized"
            },
            "description": "Include finalized theses (all grades are in). Default: False is semester_key is not set, else True"
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by semester of start date.",
              "title": "Semester Key"
            },
            "description": "Filter by semester of start date."
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ThesisOrderby",
              "description": "Order rows by student name, student matrikel, begin_date, start_date/planned_start_date, due_date/end_date/cancel_date.",
              "default": "end"
            },
            "description": "Order rows by student name, student matrikel, begin_date, start_date/planned_start_date, due_date/end_date/cancel_date."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisWithGradesHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/semester": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Semesters Supervisor",
        "description": "Get semesters with thesis projects as supervisor.",
        "operationId": "ths_read_semesters_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the study program.",
              "title": "Study Id"
            },
            "description": "Filter by ID of the study program."
          },
          {
            "name": "thesis_subtype",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the subtype of thesis within the program.",
              "title": "Thesis Subtype"
            },
            "description": "Filter by ID of the subtype of thesis within the program."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by supporting org.",
              "title": "Org Id"
            },
            "description": "Filter by supporting org."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Semester"
                  },
                  "title": "Response Ths Read Semesters Supervisor"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/{thesis_id}": {
      "put": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Update Thesis Supervisor",
        "description": "Update thesis as supervisor.",
        "operationId": "ths_update_thesis_supervisor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisUpdateSupervisor",
                "description": "JSON schema with data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Thesis"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/{thesis_id}/gradeform": {
      "get": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Read Thesis Gradeform",
        "description": "Get thesis grading form.",
        "operationId": "ths_read_thesis_gradeform",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "grade_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "description": "1 first examiner, 2 for reviewer.",
              "default": 1,
              "title": "Grade Id"
            },
            "description": "1 first examiner, 2 for reviewer."
          }
        ],
        "responses": {
          "200": {
            "description": "Return grading form for thesis as DocX file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/vnd.openxmlformats-officedocument.wordprocessingml.document": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/{thesis_id}/exam/{thesisexam_id}": {
      "put": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Update Exam",
        "description": "Update info on a thesis exam.",
        "operationId": "ths_update_exam",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "thesisexam_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the thesis exam.",
              "title": "Thesisexam Id"
            },
            "description": "ID of the thesis exam."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Update, even if thesis exam is finalized in TUMonline (only for student office).",
              "default": false,
              "title": "Force"
            },
            "description": "Update, even if thesis exam is finalized in TUMonline (only for student office)."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisExamUpdate",
                "description": "Info on the thesis exam."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisExamWithGrade"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/supervisor/{thesis_id}/exam/{thesisexam_id}/grade": {
      "put": {
        "tags": [
          "Theses Supervisors"
        ],
        "summary": "Exam Grade",
        "description": "Store new grade for a thesis exam.",
        "operationId": "ths_exam_grade",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "thesisexam_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the thesis exam.",
              "title": "Thesisexam Id"
            },
            "description": "ID of the thesis exam."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisexamGradeSupervisor",
                "description": "Grade for the thesis exam."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/registration": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Registrations",
        "description": "Get pending thesis registrations as admin.",
        "operationId": "ths_read_registrations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ThesisRegistrationAdmin"
                  },
                  "type": "array",
                  "title": "Response Ths Read Registrations"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Init Registration",
        "description": "Create thesis registration as admin.\n\nIn contrast to the /student/register endpoint this does not check\n1. if the student is actually enroled in exactly this program,\n2. if the supervisor is on the list of possible supervisors, and\n3. if the begin date is within the next six months.",
        "operationId": "ths_init_registration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRegistrationCreateAdmin",
                "description": "JSON schema with thesis registration data."
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisRegistrationAdmin"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/ths/admin/register": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Registrations",
        "description": "Get pending thesis registrations as admin.",
        "operationId": "ths_read_registrations_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisRegistrationAdmin"
                  },
                  "title": "Response Ths Read Registrations Deprecated"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Create Registration",
        "description": "Create thesis registration as admin.\n\nIn contrast to the /student/register endpoint this does not check\n1. if the student is actually enroled in exactly this program,\n2. if the supervisor is on the list of possible supervisors, and\n3. if the begin date is within the next six months.",
        "operationId": "ths_create_registration_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/LanguageSelection",
              "description": "Create form in German [de] (default) or English [en]",
              "default": "de"
            },
            "description": "Create form in German [de] (default) or English [en]"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRegistrationCreateAdmin",
                "description": "JSON schema with thesis registration data."
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Return registration form as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/registration/{thesis_id}": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Accept Registration",
        "description": "Accept thesis registration.",
        "operationId": "ths_accept_registration",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Accept, even if check date fails, suppresses email confirmation.",
              "default": false,
              "title": "Force"
            },
            "description": "Accept, even if check date fails, suppresses email confirmation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MsgTaskNew"
                    },
                    {
                      "$ref": "#/components/schemas/Msg"
                    }
                  ],
                  "title": "Response Ths Accept Registration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/register/{thesis_id}": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Accept Registration",
        "description": "Accept thesis registration.",
        "operationId": "ths_accept_registration_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis registration.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis registration."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Accept, even if check date fails, suppresses email confirmation.",
              "default": false,
              "title": "Force"
            },
            "description": "Accept, even if check date fails, suppresses email confirmation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MsgTaskNew"
                    },
                    {
                      "$ref": "#/components/schemas/Msg"
                    }
                  ],
                  "title": "Response Ths Accept Registration Deprecated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/registration/{thesis_id}/repair": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Reaccept Registration",
        "description": "Re-Accept thesis registration.",
        "operationId": "ths_reaccept_registration",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "sendmail_student",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Sendmail Student"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MsgTaskNew"
                    },
                    {
                      "$ref": "#/components/schemas/Msg"
                    }
                  ],
                  "title": "Response Ths Reaccept Registration"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/colloquium": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Colloquia",
        "description": "List colloquia as admin.",
        "operationId": "ths_read_colloquia",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "minItems": 1,
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisExamCombination"
                  },
                  "title": "Response Ths Read Colloquia"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Create Colloquium",
        "description": "Create new colloquium by combining thesisexams as admin.",
        "operationId": "ths_create_colloquium",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesisexam_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Set thesisexam_date for all exams",
              "title": "Thesisexam Date"
            },
            "description": "Set thesisexam_date for all exams"
          },
          {
            "name": "thesisexam_info",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Set thesisexam_info for all exams",
              "title": "Thesisexam Info"
            },
            "description": "Set thesisexam_info for all exams"
          },
          {
            "name": "suppress_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True, do not send email on update to supervisors and students",
              "default": false,
              "title": "Suppress Email"
            },
            "description": "If True, do not send email on update to supervisors and students"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "uniqueItems": true,
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "minItems": 1,
                "description": "IDs of the thesis exams to combine.",
                "title": "Thesis Ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisExamCombination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/colloquium/thesisexams": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Thesisexams Without Colloquium",
        "description": "List theses without colloquium as admin.",
        "operationId": "ths_read_thesisexams_without_colloquium",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "minItems": 1,
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ThesisExamThesis"
                  },
                  "title": "Response Ths Read Thesisexams Without Colloquium"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/colloquium/{thesisexam_combination_id}": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Colloquium",
        "description": "Read colloquium as admin.",
        "operationId": "ths_read_colloquium",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesisexam_combination_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesisexam combination.",
              "title": "Thesisexam Combination Id"
            },
            "description": "ID of the thesisexam combination."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisExamCombination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Remove Colloquium",
        "description": "Remove colloquium as admin.",
        "operationId": "ths_remove_colloquium",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesisexam_combination_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesisexam combination.",
              "title": "Thesisexam Combination Id"
            },
            "description": "ID of the thesisexam combination."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Update Colloquium",
        "description": "Update colloquium as admin.",
        "operationId": "ths_update_colloquium",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesisexam_combination_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesisexam combination.",
              "title": "Thesisexam Combination Id"
            },
            "description": "ID of the thesisexam combination."
          },
          {
            "name": "suppress_email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True, do not send email on update to supervisors and students",
              "default": false,
              "title": "Suppress Email"
            },
            "description": "If True, do not send email on update to supervisors and students"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisExamCombinationUpdate",
                "description": "Parameters to update in all exams, optional list of all thesisexam_ids"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisExamCombination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Theses",
        "description": "List theses as admin.",
        "operationId": "ths_read_theses",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "description": "ID of the study program.",
              "default": [],
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "selection",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ThesisSelection",
              "description": "Filter theses.",
              "default": "unfinished"
            },
            "description": "Filter theses."
          },
          {
            "name": "namestart",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search theses for thesis_id, username of student, name of student (separate lastname and firstname with comma), or supervisor, if starts with \"supervisor:\".",
              "title": "Namestart"
            },
            "description": "Search theses for thesis_id, username of student, name of student (separate lastname and firstname with comma), or supervisor, if starts with \"supervisor:\"."
          },
          {
            "name": "order_by",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ThesisOrderby",
              "description": "Order rows by student name, student matrikel, begin_date, start_date/planned_start_date, due_date/end_date/cancel_date.",
              "default": "student"
            },
            "description": "Order rows by student name, student matrikel, begin_date, start_date/planned_start_date, due_date/end_date/cancel_date."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 20,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisAdminHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Thesis",
        "description": "List thesis as admin.",
        "operationId": "ths_read_thesis",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisAdmin"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Update Thesis",
        "description": "Update thesis data, including assignment to a new supervisor.",
        "operationId": "ths_update_thesis",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisUpdateAdmin",
                "description": "JSON with thesis data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThesisAdmin"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/shift": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Shift Begin",
        "description": "Update begin date of thesis.",
        "operationId": "ths_shift_begin",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "format": "date",
                "description": "New begin date of thesis.",
                "title": "Shift"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgThesisChanged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/extension": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Update Extension",
        "description": "Update attest or other extension for thesis.",
        "operationId": "ths_update_extension",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisExtension",
                "description": "Extension as interval or new due date."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgThesisChanged"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/cancel": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Cancel Thesis",
        "description": "Cancel thesis.",
        "operationId": "ths_cancel_thesis",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "cancel_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Force cancel date in the past (ths.admin required).",
              "title": "Cancel Date"
            },
            "description": "Force cancel date in the past (ths.admin required)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/handin": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Admin Handin",
        "description": "Book handin for the thesis.",
        "operationId": "ths_admin_handin",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisHandin",
                "description": "JSON with handin data of the thesis."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MsgTaskNew"
                    },
                    {
                      "$ref": "#/components/schemas/Msg"
                    }
                  ],
                  "title": "Response Ths Admin Handin"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/graderequest/{grade_id}/pdf": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Request Grade By Letter",
        "description": "Assign thesis to a new supervisor.",
        "operationId": "ths_request_grade_by_letter",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "grade_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "maximum": 2,
              "minimum": 1,
              "description": "Username of the new supervisor.",
              "title": "Grade Id"
            },
            "description": "Username of the new supervisor."
          }
        ],
        "responses": {
          "200": {
            "description": "Return PDF letter.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/supervisor": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Change Supervisor",
        "description": "Assign thesis to a new supervisor.",
        "operationId": "ths_change_supervisor_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "minLength": 7,
                "maxLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ],
                "description": "Username of the new supervisor.",
                "title": "Supervisor Username"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/reviewer": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Assign Reviewer",
        "description": "Assign reviewer for the thesis.",
        "operationId": "ths_assign_reviewer",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "string",
                "minLength": 7,
                "maxLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ],
                "description": "Username of the reviewer.",
                "title": "Reviewer Username"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/revision": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Request Revision",
        "description": "Request a revision of the thesis.",
        "operationId": "ths_request_revision",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ThesisRevision",
                "description": "JSON with revision request data."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/grade": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Store Grade",
        "description": "Store new grade for the thesis.",
        "operationId": "ths_store_grade",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Store grade, even if thesis is finalized in TUMonline.",
              "default": false,
              "title": "Force"
            },
            "description": "Store grade, even if thesis is finalized in TUMonline."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeCreate",
                "description": "Grade for the thesis."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/storage": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Storage",
        "description": "List documents in storage for the thesis.",
        "operationId": "ths_read_storage",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageFileBase"
                  },
                  "title": "Response Ths Read Storage"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/storage/{tag}": {
      "post": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Upload Storage",
        "description": "Upload a document to the thesis storage.",
        "operationId": "ths_upload_storage",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "tag",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ThesisDocumentTag",
              "description": "Tag to store the document with."
            },
            "description": "Tag to store the document with."
          },
          {
            "name": "date_of_receipt",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date of receipt.",
              "title": "Date Of Receipt"
            },
            "description": "Date of receipt."
          },
          {
            "name": "student_document",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Make document available for student",
              "default": false,
              "title": "Student Document"
            },
            "description": "Make document available for student"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_ths_upload_storage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageFileBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/storage/{filename}": {
      "get": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Read Storage File",
        "description": "Get document from storage for the thesis.",
        "operationId": "ths_read_storage_file",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "pattern": "^[-_a-zA-Z0-9]+\\.(pdf|eml)$",
              "description": "File to retreive.",
              "title": "Filename"
            },
            "description": "File to retreive."
          }
        ],
        "responses": {
          "200": {
            "description": "Download PDF or Email form Student File.",
            "content": {
              "application/pdf": {},
              "message/rfc822": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/ths/admin/{thesis_id}/exam/{thesisexam_id}/grade": {
      "put": {
        "tags": [
          "Theses Student Office"
        ],
        "summary": "Store Exam Grade",
        "description": "Store new grade for a thesis exam.",
        "operationId": "ths_store_exam_grade",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "thesis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the thesis.",
              "title": "Thesis Id"
            },
            "description": "ID of the thesis."
          },
          {
            "name": "thesisexam_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the thesis exam.",
              "title": "Thesisexam Id"
            },
            "description": "ID of the thesis exam."
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Store grade, even if thesis exam is finalized in TUMonline.",
              "default": false,
              "title": "Force"
            },
            "description": "Store grade, even if thesis exam is finalized in TUMonline."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GradeCreate",
                "description": "Grade for the thesis exam."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}": {
      "post": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Create Ceremony Invitation",
        "description": "Create new ceremony invitation.",
        "operationId": "apv_create_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APVCeremonyInvitationCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVCeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}/import_invitees": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Import Ceremony Invitees",
        "description": "Import students from TUMonline APV into degree ceremony.",
        "operationId": "apv_import_ceremony_invitees",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "Import students from this degree program.",
              "title": "Study Id"
            },
            "description": "Import students from this degree program."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APVTypeID",
              "description": "Import students with this APV type."
            },
            "description": "Import students with this APV type."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org, the APV records are attached",
              "title": "Org Id"
            },
            "description": "ID of the org, the APV records are attached"
          },
          {
            "name": "start_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Do not import degrees before this date (use apv_log_tag below or degree_date)",
              "title": "Start Date"
            },
            "description": "Do not import degrees before this date (use apv_log_tag below or degree_date)"
          },
          {
            "name": "end_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Do not import degrees after this date (use apv_log_tag below or degree_date)",
              "title": "End Date"
            },
            "description": "Do not import degrees after this date (use apv_log_tag below or degree_date)"
          },
          {
            "name": "apv_log_tag",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "degree_date",
                "studentinfo",
                "zpa"
              ],
              "type": "string",
              "description": "If there is an apv record for this student, use the latest date of this log_tag instead of the degree_date",
              "default": "studentinfo",
              "title": "Apv Log Tag"
            },
            "description": "If there is an apv record for this student, use the latest date of this log_tag instead of the degree_date"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}/slides": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Ceremony Slides",
        "description": "Retrieve degree ceremony slides.",
        "operationId": "apv_read_ceremony_slides",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "only_attending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only include attending invitees.",
              "default": true,
              "title": "Only Attending"
            },
            "description": "Only include attending invitees."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/APVCeremonySlidesRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Slides Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVCeremonySlides"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}/slides/latex": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Ceremony Slides Latex",
        "description": "Retrieve degree ceremony slides.",
        "operationId": "apv_read_ceremony_slides_latex",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "only_attending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only include attending invitees.",
              "default": true,
              "title": "Only Attending"
            },
            "description": "Only include attending invitees."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/APVCeremonySlidesRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Slides Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return LaTeX file for ceremony slides.",
            "content": {
              "application/x-latex": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}/slides/pdf": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Ceremony Slides Pdf",
        "description": "Retrieve degree ceremony slides.",
        "operationId": "apv_read_ceremony_slides_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "only_attending",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Only include attending invitees.",
              "default": true,
              "title": "Only Attending"
            },
            "description": "Only include attending invitees."
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/APVCeremonySlidesRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Slides Config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Return PDF file with ceremony slides.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}/{invitation_id}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Ceremony Invitation",
        "description": "Retrieve degree ceremony invitation.",
        "operationId": "apv_read_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the ceremony invitation.",
              "title": "Invitation Id"
            },
            "description": "UUID of the ceremony invitation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVCeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Update Ceremony Invitation",
        "description": "Update invitation data.",
        "operationId": "apv_update_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the ceremony invitation.",
              "title": "Invitation Id"
            },
            "description": "UUID of the ceremony invitation."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APVCeremonyInvitationUpdate",
                "description": "JSON with the data to update."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Delete Ceremony Invitation",
        "description": "Delete a student from the invitation list of a ceremony.",
        "operationId": "apv_delete_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the ceremony invitation.",
              "title": "Invitation Id"
            },
            "description": "UUID of the ceremony invitation."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVCeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/ceremony/{ceremony_id}/{invitation_id}/move/{new_ceremony_id}": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Move Ceremony Invitation",
        "description": "Move invitation to different degree ceremony.",
        "operationId": "apv_move_ceremony_invitation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "Ceremony Id"
            },
            "description": "ID of the ceremony."
          },
          {
            "name": "invitation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the ceremony invitation.",
              "title": "Invitation Id"
            },
            "description": "UUID of the ceremony invitation."
          },
          {
            "name": "new_ceremony_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ceremony.",
              "title": "New Ceremony Id"
            },
            "description": "ID of the ceremony."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVCeremonyInvitation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Apvs",
        "description": "Retrieve APV entries of students.",
        "operationId": "apv_read_apvs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              },
              "description": "Filter study programs by orgs (including child orgs).",
              "default": [],
              "title": "Org Id"
            },
            "description": "Filter study programs by orgs (including child orgs)."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "description": "Filter study programs by study_id.",
              "default": [],
              "title": "Study Id"
            },
            "description": "Filter study programs by study_id."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          },
          {
            "name": "is_positive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show positive/negative APV candidates",
              "default": true,
              "title": "Is Positive"
            },
            "description": "Show positive/negative APV candidates"
          },
          {
            "name": "exclude_with_other_apv",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Exclude candidates with another APV (e.g. only show negative BAKN with not existing negative GOP as well)",
              "default": false,
              "title": "Exclude With Other Apv"
            },
            "description": "Exclude candidates with another APV (e.g. only show negative BAKN with not existing negative GOP as well)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APV"
                  },
                  "title": "Response Apv Read Apvs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/apvtype": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Apvtypes",
        "description": "Retrieve APV types.",
        "operationId": "apv_read_apvtypes",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APVType"
                  },
                  "type": "array",
                  "title": "Response Apv Read Apvtypes"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/apv/started": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Apvs Started",
        "description": "Retrieve APV entries of students.",
        "operationId": "apv_read_apvs_started",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "minimum": 1
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter study programs by orgs (including child orgs).",
              "title": "Org Id"
            },
            "description": "Filter study programs by orgs (including child orgs)."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter study programs by study_id.",
              "title": "Study Id"
            },
            "description": "Filter study programs by study_id."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          },
          {
            "name": "is_positive",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show positive/negative APV candidates",
              "default": true,
              "title": "Is Positive"
            },
            "description": "Show positive/negative APV candidates"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APVStarted"
                  },
                  "title": "Response Apv Read Apvs Started"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/semester/{study_id}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Semester Students",
        "description": "Retrieve students for semester notification.",
        "operationId": "apv_read_semester_students",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the degree program.",
              "title": "Study Id"
            },
            "description": "ID of the degree program."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                }
              ],
              "description": "Semester of the notification.",
              "default": "previous",
              "title": "Semester Key"
            },
            "description": "Semester of the notification."
          },
          {
            "name": "ignore_apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APVTypeID"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Ignore students for which an apv record of one of theses types exists (defaults to GOP).",
              "title": "Ignore Apvtype Id"
            },
            "description": "Ignore students for which an apv record of one of theses types exists (defaults to GOP)."
          },
          {
            "name": "gop_ghks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "GHKs of GOP exams to identify students for `is_gop`",
              "default": [],
              "title": "Gop Ghks"
            },
            "description": "GHKs of GOP exams to identify students for `is_gop`",
            "examples": {
              "PH1": {
                "summary": "GOP part 1 in B.Sc. Physics",
                "value": [
                  1598730,
                  1603374,
                  1605166
                ]
              },
              "PH2": {
                "summary": "GOP part 2 in B.Sc. Physics",
                "value": [
                  1600244,
                  1599646,
                  1605168
                ]
              }
            }
          },
          {
            "name": "is_gop",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "If set, only show students with (True) or without (False) an exam entry for one of gop_ghks exams in the semester",
              "title": "Is Gop"
            },
            "description": "If set, only show students with (True) or without (False) an exam entry for one of gop_ghks exams in the semester"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SemesterNotificationStudent"
                  },
                  "title": "Response Apv Read Semester Students"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/log/{matrikel}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Student Log All Studies",
        "description": "Get logs for one student.",
        "operationId": "apv_student_log_all_studies",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "matrikel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 9,
                  "maxLength": 12,
                  "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                  "examples": [
                    "163017051",
                    "163016066",
                    "163016067",
                    "163016068",
                    "163016069"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APVLog"
                  },
                  "title": "Response Apv Student Log All Studies"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/log/{study_id}/{matrikel}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Student Log",
        "description": "Get logs for one student.",
        "operationId": "apv_student_log",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          },
          {
            "name": "matrikel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APVLog"
                  },
                  "title": "Response Apv Student Log"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/studentinfo/{study_id}/{matrikel}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentinfo Email",
        "description": "Get studentinfo email for one student.",
        "operationId": "apv_studentinfo_email",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          },
          {
            "name": "matrikel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          },
          {
            "name": "audit_deadline",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Set audit_deadline in email (defaults to study program default)",
              "title": "Audit Deadline"
            },
            "description": "Set audit_deadline in email (defaults to study program default)"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVStudentInfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/studentzpa/{study_id}/{matrikel}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentzpa Email",
        "description": "Get studentzpa email for one student.",
        "operationId": "apv_studentzpa_email",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          },
          {
            "name": "matrikel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVStudentZPA"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/studentinfo": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentinfo",
        "description": "Send studentinfo to students.",
        "operationId": "apv_studentinfo",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APVStudentInfos"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APV"
                  },
                  "type": "array",
                  "title": "Response Apv Studentinfo"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/apv/studentconfirmation/{study_id}/{matrikel}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentconfirmation Email",
        "description": "Get studentconfirmation email for one student.",
        "operationId": "apv_studentconfirmation_email",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          },
          {
            "name": "matrikel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVStudentZPA"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/studentconfirmation": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentconfirmation",
        "description": "Send confirmation of degree to arbitrary recipients.",
        "operationId": "apv_studentconfirmation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APVStudentConfirmations"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/APV"
                  },
                  "type": "array",
                  "title": "Response Apv Studentconfirmation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/apv/studentzpa": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentzpa",
        "description": "Clearing of degree documents and sending studentinfo to students.",
        "operationId": "apv_studentzpa",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APVStudentZPAs"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MsgTask"
                    },
                    {
                      "$ref": "#/components/schemas/MsgTaskNew"
                    }
                  ],
                  "title": "Response Apv Studentzpa"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/apv/studentok": {
      "put": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Studentok",
        "description": "Create \"studentok\" log entry for student not yet in APV.",
        "operationId": "apv_studentok",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APVTypeID",
              "description": "Select APV type."
            },
            "description": "Select APV type."
          },
          {
            "name": "matrikel",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "log_text",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Description of log entry, e.g. OTRS ticket number.",
              "title": "Log Text"
            },
            "description": "Description of log entry, e.g. OTRS ticket number."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/semester/{study_id}/zpa": {
      "post": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Semesterzpa",
        "description": "Send clearance for semester notification to CST/GO.",
        "operationId": "apv_semesterzpa",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the degree program.",
              "title": "Study Id"
            },
            "description": "ID of the degree program."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "$ref": "#/components/schemas/SemesterKeySpecial"
                }
              ],
              "description": "Semester of the notification.",
              "default": "previous",
              "title": "Semester Key"
            },
            "description": "Semester of the notification."
          },
          {
            "name": "gop_ghks",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "GHKs of GOP exams to identify students for `is_gop`",
              "default": [],
              "title": "Gop Ghks"
            },
            "description": "GHKs of GOP exams to identify students for `is_gop`",
            "examples": {
              "PH1": {
                "summary": "GOP part 1 in B.Sc. Physics",
                "value": [
                  1598730,
                  1603374,
                  1605166
                ]
              },
              "PH2": {
                "summary": "GOP part 2 in B.Sc. Physics",
                "value": [
                  1600244,
                  1599646,
                  1605168
                ]
              }
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SemesterStudentZPA"
                },
                "title": "Students In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/program": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Programs",
        "description": "Retrieve APV programs.",
        "operationId": "apv_read_programs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              },
              "description": "Filter by org of the study program.",
              "default": [],
              "title": "Org Id"
            },
            "description": "Filter by org of the study program."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the study program.",
              "title": "Study Id"
            },
            "description": "Filter by ID of the study program."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          },
          {
            "name": "zpa_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by CST/GO team responsible for the degrees of the programs.",
              "title": "Zpa Id"
            },
            "description": "Filter by CST/GO team responsible for the degrees of the programs."
          },
          {
            "name": "abi_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by CST/ABI team responsible for the applications of the programs.",
              "title": "Abi Id"
            },
            "description": "Filter by CST/ABI team responsible for the applications of the programs."
          },
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include programs not yet included in APV tool.",
              "default": false,
              "title": "Include Inactive"
            },
            "description": "Include programs not yet included in APV tool."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APVProgram"
                  },
                  "title": "Response Apv Read Programs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/program/combined": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Programs Combined",
        "description": "Retrieve APV program (all SPO versions combined).",
        "operationId": "apv_read_programs_combined",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "minimum": 1
              },
              "description": "Filter by org of the study program.",
              "default": [],
              "title": "Org Id"
            },
            "description": "Filter by org of the study program."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by ID of the study program.",
              "title": "Study Id"
            },
            "description": "Filter by ID of the study program."
          },
          {
            "name": "apvtype_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/APVTypeID"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU).",
              "title": "Apvtype Id"
            },
            "description": "Select APV type (defaults to BAKN, MAGN, or DPBRAU)."
          },
          {
            "name": "zpa_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by CST/GO team responsible for the degrees of the programs.",
              "title": "Zpa Id"
            },
            "description": "Filter by CST/GO team responsible for the degrees of the programs."
          },
          {
            "name": "abi_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by CST/ABI team responsible for the applications in the programs.",
              "title": "Abi Id"
            },
            "description": "Filter by CST/ABI team responsible for the applications in the programs."
          },
          {
            "name": "include_inactive",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include programs not yet included in APV tool.",
              "default": false,
              "title": "Include Inactive"
            },
            "description": "Include programs not yet included in APV tool."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/APVProgramCombined"
                  },
                  "title": "Response Apv Read Programs Combined"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/preprocessor": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Preprocessors",
        "description": "Retrieve available APV preprocessors.",
        "operationId": "apv_read_preprocessors",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/APVPreprocessorDefinition"
                  },
                  "type": "object",
                  "title": "Response Apv Read Preprocessors"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/apv/preprocessor/{preprocessor_id}": {
      "get": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Read Preprocessor",
        "description": "Retrieve APV preprocessor.",
        "operationId": "apv_read_preprocessor",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "preprocessor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the preprocessor.",
              "title": "Preprocessor Id"
            },
            "description": "ID of the preprocessor."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVPreprocessorDefinition"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/program/{study_id}/{spo_version}/{apvtype_id}": {
      "delete": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Deactivate Apv Program",
        "description": "Deactivate a program for APV tool.",
        "operationId": "apv_deactivate_apv_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "apvtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APVTypeID",
              "description": "APV type.",
              "examples": [
                "BAKN",
                "MAGN",
                "DPBRAU",
                "GOP"
              ]
            },
            "description": "APV type."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVProgram"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Update Apv Program",
        "description": "Update a program for APV.",
        "operationId": "apv_update_apv_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program.",
              "title": "Study Id"
            },
            "description": "ID of the study program."
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program.",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program."
          },
          {
            "name": "apvtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APVTypeID",
              "description": "Select APV type."
            },
            "description": "Select APV type."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/APVProgramUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APVProgram"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/sync/{org_id}": {
      "post": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Sync Apvstudents Tumonline",
        "description": "Sync APV students for Org org_id.",
        "operationId": "apv_sync_apvstudents_tumonline",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the org (and all child orgs) for which synchronisation should be done.",
              "title": "Org Id"
            },
            "description": "ID of the org (and all child orgs) for which synchronisation should be done."
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/apv/{remark_type}/{study_id}/{matrikel}/{apvtype_id}": {
      "patch": {
        "tags": [
          "APV Tool"
        ],
        "summary": "Patch Apv Remark",
        "description": "Update the local or zpa (remark_type parameter) remark on a student.",
        "operationId": "apv_patch_apv_remark",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "remark_type",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "remark_local",
                "remark_zpa"
              ],
              "type": "string",
              "description": "Edit internal remark for school office (remark_local) or remark for email to CST/ZPA (remark_zpa).",
              "title": "Remark Type"
            },
            "description": "Edit internal remark for school office (remark_local) or remark for email to CST/ZPA (remark_zpa)."
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program of the student.",
              "title": "Study Id"
            },
            "description": "ID of the study program of the student."
          },
          {
            "name": "apvtype_id",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/APVTypeID",
              "description": "Select APV type."
            },
            "description": "Select APV type."
          },
          {
            "name": "matrikel",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 8,
              "maxLength": 8,
              "pattern": "^[0-9]{8}$",
              "examples": [
                "00002222"
              ],
              "description": "Matrikel of the student.",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student."
          },
          {
            "name": "remark",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Remark for use in the school office.",
              "title": "Remark"
            },
            "description": "Remark for use in the school office."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APV"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cam/": {
      "get": {
        "tags": [
          "Camunda Workflows"
        ],
        "summary": "Read Workflows",
        "description": "Retrieve workflow IDs started by the user.",
        "operationId": "cam_read_workflows",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CamundaWorkflow"
                  },
                  "type": "array",
                  "title": "Response Cam Read Workflows"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "Camunda Workflows"
        ],
        "summary": "Create Workflow",
        "description": "Create new workflow ID.",
        "operationId": "cam_create_workflow",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CamundaWorkflowCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CamundaWorkflow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/cam/{camunda_id}": {
      "get": {
        "tags": [
          "Camunda Workflows"
        ],
        "summary": "Read Workflow",
        "description": "Retrieve workflow ID.",
        "operationId": "cam_read_workflow",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "camunda_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Camunda Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CamundaWorkflow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Camunda Workflows"
        ],
        "summary": "Delete Workflow",
        "description": "Delete workflow ID.",
        "operationId": "cam_delete_workflow",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "camunda_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Camunda Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CamundaWorkflow"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stz/fonds": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Read Persons Fonds",
        "description": "Retrieve STZ fonds-person assignments.",
        "operationId": "stz_read_persons_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "unassigned",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Show unassigned persons.",
              "default": false,
              "title": "Unassigned"
            },
            "description": "Show unassigned persons."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/STZPersonFonds"
                  },
                  "title": "Response Stz Read Persons Fonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Create Person Fonds",
        "description": "Create person-fonds assignment.",
        "operationId": "stz_create_person_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZPersonFondsCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZPersonFonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stz/fonds/{username}": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Read Person Fonds",
        "description": "Retrieve STZ fonds assignment for a person.",
        "operationId": "stz_read_person_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZPersonFonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Update Person Fonds",
        "description": "Update person-fonds assignment.",
        "operationId": "stz_update_person_fonds",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "title": "Username"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZPersonFondsUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZPersonFonds"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stz/concept": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Read Concepts",
        "description": "Retrieve STZ concepts.",
        "operationId": "stz_read_concepts",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/STZConceptBase"
                  },
                  "type": "array",
                  "title": "Response Stz Read Concepts"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Create Concept",
        "description": "Create person-fonds assignment.",
        "operationId": "stz_create_concept",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZConceptCreate",
                "description": "JSON data with new concept data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZConcept"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/stz/concept/{stzconcept_id}": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Read Concept",
        "description": "Retrieve STZ concept.",
        "operationId": "stz_read_concept",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stzconcept_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the concept",
              "title": "Stzconcept Id"
            },
            "description": "ID of the concept"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZConcept"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Update Concept",
        "description": "Update STZ concept.",
        "operationId": "stz_update_concept",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stzconcept_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the concept",
              "title": "Stzconcept Id"
            },
            "description": "ID of the concept"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZConceptUpdate",
                "description": "JSON data with updated concept data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZConcept"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stz/concept/{stzconcept_id}/allocate": {
      "put": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Allocate Assignments",
        "description": "Allocate funds for STZ assignments.",
        "operationId": "stz_allocate_assignments",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stzconcept_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the concept",
              "title": "Stzconcept Id"
            },
            "description": "ID of the concept"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stz/measure/{stzmeasure_id}": {
      "get": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Read Measure",
        "description": "Retrieve STZ measure.",
        "operationId": "stz_read_measure",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stzmeasure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the measure",
              "title": "Stzmeasure Id"
            },
            "description": "ID of the measure"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZMeasure"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Update Measure",
        "description": "Update STZ measure.",
        "operationId": "stz_update_measure",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stzmeasure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the measure",
              "title": "Stzmeasure Id"
            },
            "description": "ID of the measure"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZMeasureUpdate",
                "description": "JSON data with updated measure data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZMeasure"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Create Assignment",
        "description": "Create STZ assignment.",
        "operationId": "stz_create_assignment",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stzmeasure_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID of the measure",
              "title": "Stzmeasure Id"
            },
            "description": "ID of the measure"
          },
          {
            "name": "fonds_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the fonds (account) to assign the funds to",
              "title": "Fonds Id"
            },
            "description": "ID of the fonds (account) to assign the funds to"
          },
          {
            "name": "amount",
            "in": "query",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "number"
                },
                {
                  "type": "string"
                }
              ],
              "description": "Amount of assignment in euro",
              "title": "Amount"
            },
            "description": "Amount of assignment in euro"
          },
          {
            "name": "assignment_date",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date-time"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Date of assignment (defaults to today)",
              "title": "Assignment Date"
            },
            "description": "Date of assignment (defaults to today)"
          },
          {
            "name": "valid_through",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Deadline for assignment (defaults end of current year)",
              "title": "Valid Through"
            },
            "description": "Deadline for assignment (defaults end of current year)"
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Internal comment on this assignment",
              "title": "Comment"
            },
            "description": "Internal comment on this assignment"
          },
          {
            "name": "associate_usernames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "minLength": 7,
                "maxLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              "description": "List of additional usernames associated with this assignment.",
              "default": [],
              "title": "Associate Usernames"
            },
            "description": "List of additional usernames associated with this assignment."
          },
          {
            "name": "notify",
            "in": "query",
            "required": false,
            "schema": {
              "enum": [
                "fonds_responsible",
                "associate_only",
                "none"
              ],
              "type": "string",
              "description": "Send notification email to fonds responsible, to associate only, or none",
              "default": "fonds_responsible",
              "title": "Notify"
            },
            "description": "Send notification email to fonds responsible, to associate only, or none"
          },
          {
            "name": "direct_allocation",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If set, directly allocate the funds via finance office",
              "default": false,
              "title": "Direct Allocation"
            },
            "description": "If set, directly allocate the funds via finance office"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZAssignmentInstructions",
                "description": "JSON data with assignment data"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZAssignment"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stz/measure": {
      "post": {
        "tags": [
          "Tuition Substitution Funds"
        ],
        "summary": "Create Measure",
        "description": "Create person-fonds assignment.",
        "operationId": "stz_create_measure",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/STZMeasureCreate",
                "description": "JSON data with new measure data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/STZConcept"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/rnk/published": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Read Rankings Simple",
        "description": "Retrieve rankings published.",
        "operationId": "rnk_read_rankings_simple",
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "minLength": 9,
                    "maxLength": 12,
                    "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                    "examples": [
                      "163017051",
                      "163016066",
                      "163016067",
                      "163016068",
                      "163016069"
                    ]
                  }
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of study program, the ranking is issued for.",
              "title": "Study Id"
            },
            "description": "ID of study program, the ranking is issued for."
          },
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Key of the semester, the ranking is issued for.",
              "title": "Semester Key"
            },
            "description": "Key of the semester, the ranking is issued for."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RankingSimple"
                  },
                  "title": "Response Rnk Read Rankings Simple"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/semesters": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Read Semesters With Rankings",
        "description": "Retrieve semesters, in which rankings are configured.",
        "operationId": "rnk_read_semesters_with_rankings",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SemesterBase"
                  },
                  "type": "array",
                  "title": "Response Rnk Read Semesters With Rankings"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/rnk/": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Read Rankings",
        "description": "Retrieve rankings configured.",
        "operationId": "rnk_read_rankings",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "const": "ALL",
                  "type": "string"
                },
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only show rankings for this semester, defaults to last semester with rankings.",
              "title": "Semester Key"
            },
            "description": "Only show rankings for this semester, defaults to last semester with rankings."
          },
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 9,
                  "maxLength": 12,
                  "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                  "examples": [
                    "163017051",
                    "163016066",
                    "163016067",
                    "163016068",
                    "163016069"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of study program, the ranking is issued for.",
              "title": "Study Id"
            },
            "description": "ID of study program, the ranking is issued for."
          },
          {
            "name": "spo_version",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "SPO version of study program, the ranking is issued for.",
              "title": "Spo Version"
            },
            "description": "SPO version of study program, the ranking is issued for."
          },
          {
            "name": "cohort_fachsemester",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Semester of student cohort, the ranking is issued for.",
              "title": "Cohort Fachsemester"
            },
            "description": "Semester of student cohort, the ranking is issued for."
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter rankings by org.",
              "title": "Org Id"
            },
            "description": "Filter rankings by org."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RankingBase"
                  },
                  "title": "Response Rnk Read Rankings"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Create Ranking",
        "description": "Configure new ranking.",
        "operationId": "rnk_create_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankingCreate",
                "description": "JSON data with ranking configuration"
              },
              "examples": {
                "1": {
                  "summary": "Student Ranking for the 1st semester in the B.Sc. Physics",
                  "value": {
                    "ranking": "Semester-Ranking für das 1. Semester im B.Sc. Physik im WS 2022/3",
                    "ranking_en": "Student Ranking for the 1st semester in the B.Sc. Physics in WS 2022/3",
                    "semesters": "des ersten Fachsemesters",
                    "semesters_en": "of 1st semester",
                    "cohort": "Die Studierenden müssen sich im ersten Studienjahr der Grundlagen- und Orientierungsprüfung (GOP) unterziehen.",
                    "cohort_en": "The students are subjected to the Fundamentals and Orientation Examinations (GOP) during the first year of studies.",
                    "ranking_base": "Als Grundlage werden ausschließlich die Pflichtmodule aus dem ersten Teil der Grundlagen- und Orientierungsprüfung herangezogen.",
                    "ranking_base_en": "The ranking is based on modules from the first part of the Fundamentals and Orientation Examinations (GOP) only.",
                    "programs": [
                      {
                        "study_id": "163017051",
                        "spo_version": "20171",
                        "cohort_fachsemester": 1
                      },
                      {
                        "study_id": "163017051",
                        "spo_version": "20201",
                        "cohort_fachsemester": 1
                      }
                    ],
                    "semester_key": "2022w",
                    "org_id": 53022
                  }
                },
                "2": {
                  "summary": "Student Ranking for the 2nd semester in the B.Sc. Physics",
                  "value": {
                    "ranking": "Semester-Ranking für das 2. Semester im B.Sc. Physik im SS 2023",
                    "ranking_en": "Student Ranking for the 2nd semester in the B.Sc. Physics in SS 2023",
                    "semesters": "des ersten und zweiten Fachsemesters",
                    "semesters_en": "of 1st and 2nd semester",
                    "cohort": "Die Kohorte bestand zum Studienbeginn im Wintersemester 2022/3 aus 441 Studierenden, die sich im ersten Studienjahr der Grundlagen- und Orientierungsprüfung (GOP) unterziehen.",
                    "cohort_en": "In the starting semester in 2022/3, the cohort had 441 enrolled students. These were subjected to the Fundamentals and Orientation Examinations (GOP) during the first year of studies.",
                    "ranking_base": "Als Grundlage werden ausschließlich die Pflichtmodule aus den Grundlagen- und Orientierungsprüfung herangezogen.",
                    "ranking_base_en": "The ranking is based on modules from the Fundamentals and Orientation Examinations (GOP) only.",
                    "programs": [
                      {
                        "study_id": "163017051",
                        "spo_version": "20171",
                        "cohort_fachsemester": 2
                      },
                      {
                        "study_id": "163017051",
                        "spo_version": "20201",
                        "cohort_fachsemester": 2
                      }
                    ],
                    "semester_key": "2023s",
                    "org_id": 53022
                  }
                },
                "3": {
                  "summary": "Student Ranking for the 3rd semester in the B.Sc. Physics",
                  "value": {
                    "ranking": "Semester-Ranking für das 3. Semester im B.Sc. Physik im WS 2022/3",
                    "ranking_en": "Student Ranking for the 3rd semester in the B.Sc. Physics in WS 2022/3",
                    "semesters": "des zweiten und dritten Fachsemesters",
                    "semesters_en": "of 2nd and 3rd semester",
                    "cohort": "Die Kohorte bestand zum Studienbeginn im Wintersemester 2021/2 aus 486 Studierenden. Im ersten Studienjahr findet die Grundlagen- und Orientierungsprüfung (GOP) statt. Studierende, die den ersten Teil der GOP im WS 2021/2 endgültig nicht bestanden haben, wurden daher bereits exmatrikuliert. Insbesondere beim Vergleich mit Rankings in Studiengängen ohne GOP führt dies zu einer erheblichen Verzerrung zum Nachteil der Studierenden, die die GOP bestanden haben, da Studierende mit schlechteren Leistungen aus der Grundgesamtheit ausgeschieden sind. Im WS 2021/2 waren alle prüfungsrechtlichen Fristen aufgrund der Einschränkungen durch die COVID-19-Pandemie ausgesetzt.",
                    "cohort_en": "In the starting semester in 2021/2 the cohort had 486 enrolled students. These were subjected to the Fundamentals and Orientation Examinations (GOP) during the first year of studies. It therefore needs to be considered, that students who have irreversibly failed the first part of the GOP in WS 2021/2, have already been exmatriculated. Especially when comparing with rankings from programs without GOP, this leads to a significant bias to the disadvantage of students who passed the GOP, as students with a poorer performance were excluded from the student cohort. Due to the restrictions during the COVID-19 pandemic, all exam-related deadlines and requirements were postponed in WS 2021/2.",
                    "ranking_base": "Als Grundlage werden ausschließlich Pflicht- und Wahlmodule, die in den Studiengang eingehen herangezogen.",
                    "ranking_base_en": "The ranking is based on modules according to the exam regulations only.",
                    "programs": [
                      {
                        "study_id": "163017051",
                        "spo_version": "20171",
                        "cohort_fachsemester": 3
                      },
                      {
                        "study_id": "163017051",
                        "spo_version": "20201",
                        "cohort_fachsemester": 3
                      }
                    ],
                    "semester_key": "2022w",
                    "org_id": 53022
                  }
                },
                "4": {
                  "summary": "Student Ranking for the 4th semester in the B.Sc. Physics",
                  "value": {
                    "ranking": "Semester-Ranking für das 4. Semester im B.Sc. Physik im SS 2023",
                    "ranking_en": "Student Ranking for the 4th semester in the B.Sc. Physics in SS 2023",
                    "semesters": "des dritten und vierten Fachsemesters",
                    "semesters_en": "of 3rd and 4th semester",
                    "cohort": "Die Kohorte bestand zum Studienbeginn im Wintersemester 2021/2 aus 486 Studierenden, die sich im ersten Studienjahr der Grundlagen- und Orientierungsprüfung (GOP) unterziehen mussten. Allerdings waren im WS 2021/2 alle prüfungsrechtlichen Fristen auf Grund der Einschränkungen durch die COVID-19-Pandemie ausgesetzt.",
                    "cohort_en": "In the starting semester in 2021/2 the cohort had 486 enrolled students. These were subjected to the Fundamentals and Orientation Examinations (GOP) during the first year of studies. But due to the restrictions during the COVID-19 pandemic all exam-related deadlines and requirements were postponed in WS 2021/2.",
                    "ranking_base": "Als Grundlage werden ausschließlich Pflicht- und Wahlmodule, die in den Studiengang eingehen herangezogen.",
                    "ranking_base_en": "The ranking is based on modules according to the exam regulations only.",
                    "programs": [
                      {
                        "study_id": "163017051",
                        "spo_version": "20171",
                        "cohort_fachsemester": 4
                      },
                      {
                        "study_id": "163017051",
                        "spo_version": "20201",
                        "cohort_fachsemester": 4
                      }
                    ],
                    "semester_key": "2022w",
                    "org_id": 53022
                  }
                },
                "5": {
                  "summary": "Student Ranking for the 5th semester in the B.Sc. Physics",
                  "value": {
                    "ranking": "Semester-Ranking für das 5. Semester im B.Sc. Physik im WS 2023/4",
                    "ranking_en": "Student Ranking for the 5th semester in the B.Sc. Physics in WS 2023/4",
                    "semesters": "des vierten und fünften Fachsemesters",
                    "semesters_en": "of 4th and 5th semester",
                    "cohort": "Die Kohorte bestand zum Studienbeginn im Wintersemester 2021/2 aus 486 Studierenden. Im ersten Studienjahr findet die Grundlagen- und Orientierungsprüfung (GOP) statt. Es ist daher zu beachten, dass Studierende, die die GOP in den vergangenen Semestern endgültig nicht bestanden haben, bereits exmatrikuliert wurden. Insbesondere beim Vergleich mit Rankings in Studiengängen ohne GOP kann dies zu einer erheblichen Verzerrung zum Nachteil der Studierenden führen, die die GOP bestanden haben, da Studierende mit schlechteren Leistungen aus der Grundgesamtheit ausgeschieden sind. Im WS 2021/2 waren alle prüfungsrechtlichen Fristen aufgrund der Einschränkungen durch die COVID-19-Pandemie ausgesetzt.",
                    "cohort_en": "In the starting semester in 2021/2 the cohort had 486 enrolled students. These were subjected to the Fundamentals and Orientation Examinations (GOP) during the first year of studies. It therefore needs to be considered, that students who have irreversibly failed the GOP in the past semesters have already been exmatriculated. Especially when comparing with rankings from programs without GOP, this can lead to a significant bias to the disadvantage of students who passed the GOP, as students with a poorer performance were excluded from the student cohort. Due to the restrictions during the COVID-19 pandemic, all exam-related deadlines and requirements were postponed in WS 2021/2.",
                    "ranking_base": "Als Grundlage werden ausschließlich Pflicht- und Wahlmodule, die in den Studiengang eingehen herangezogen.",
                    "ranking_base_en": "The ranking is based on modules according to the exam regulations only.",
                    "programs": [
                      {
                        "study_id": "163017051",
                        "spo_version": "20171",
                        "cohort_fachsemester": 5
                      },
                      {
                        "study_id": "163017051",
                        "spo_version": "20201",
                        "cohort_fachsemester": 5
                      }
                    ],
                    "semester_key": "2023w",
                    "org_id": 53022
                  }
                },
                "6": {
                  "summary": "Student Ranking for the 6th semester in the B.Sc. Physics",
                  "value": {
                    "ranking": "Semester-Ranking für das 6. Semester im B.Sc. Physik im SS 2023",
                    "ranking_en": "Student Ranking for the 6th semester in the B.Sc. Physics in SS 2023",
                    "semesters": "des fünften und sechsten Fachsemesters",
                    "semesters_en": "of 5th and 6th semester",
                    "cohort": "Die Kohorte bestand zum Studienbeginn im Wintersemester 2020/1 aus 512 Studierenden, die sich im ersten Studienjahr der Grundlagen- und Orientierungsprüfung (GOP) unterziehen mussten. Allerdings waren von SS 2020 bis einschließlich WS 2021/2 alle prüfungsrechtlichen Fristen auf Grund der Einschränkungen durch die COVID-19-Pandemie ausgesetzt.",
                    "cohort_en": "In the starting semester in 2020/1 the cohort had 512 enrolled students. These were subjected to the Fundamentals and Orientation Examinations (GOP) during the first year of studies. But due to the restrictions during the COVID-19 pandemic all exam-related deadlines and requirements were postponed in SS 2020 until including WS 2021/2.",
                    "ranking_base": "Als Grundlage werden ausschließlich Pflicht- und Wahlmodule, die in den Studiengang eingehen herangezogen.",
                    "ranking_base_en": "The ranking is based on modules according to the exam regulations only.",
                    "programs": [
                      {
                        "study_id": "163017051",
                        "spo_version": "20171",
                        "cohort_fachsemester": 6
                      },
                      {
                        "study_id": "163017051",
                        "spo_version": "20201",
                        "cohort_fachsemester": 6
                      }
                    ],
                    "semester_key": "2023s",
                    "org_id": 53022
                  }
                },
                "7": {
                  "summary": "Student Ranking for the First Year in the Physics Master’s Programs",
                  "value": {
                    "ranking": "Semester-Ranking für das 1. Studienjahr in den Physik-Masterstudiengängen im WS 2022/3",
                    "ranking_en": "Student Ranking for the First Year in the Physics Master’s Programs in WS 2022/3",
                    "semesters": "des ersten und zweiten Fachsemesters",
                    "semesters_en": "of 1st and 2nd semester",
                    "cohort": "Für das Ranking werden die vier Masterstudiengänge Physik zusammengefasst, da sie durch die identische Studiengangsstruktur vergleichbar sind. Die Kohorte umfasst alle Studierenden im ersten Studienjahr, in dem die Vertiefungsphase des Masterstudiums stattfindet.",
                    "cohort_en": "The ranking combines the four Master’s programs in Physics. Due to the identical structure of these study programs, these are comparable. The cohort includes all students within their first year of studies during the Master’s program’s phase of advanced studies.",
                    "ranking_base": "Als Grundlage werden ausschließlich Pflicht- und Wahlmodule der Vertiefungsphase, die in den Studiengang eingehen herangezogen.",
                    "ranking_base_en": "The ranking is based on modules of the advanced studies of the program according to the exam regulations only.",
                    "programs": [
                      {
                        "study_id": "163016066",
                        "spo_version": "20181",
                        "cohort_fachsemester": 1
                      },
                      {
                        "study_id": "163016066",
                        "spo_version": "20181",
                        "cohort_fachsemester": 2
                      },
                      {
                        "study_id": "163016067",
                        "spo_version": "20181",
                        "cohort_fachsemester": 1
                      },
                      {
                        "study_id": "163016067",
                        "spo_version": "20181",
                        "cohort_fachsemester": 2
                      },
                      {
                        "study_id": "163016068",
                        "spo_version": "20181",
                        "cohort_fachsemester": 1
                      },
                      {
                        "study_id": "163016068",
                        "spo_version": "20181",
                        "cohort_fachsemester": 2
                      },
                      {
                        "study_id": "163016069",
                        "spo_version": "20181",
                        "cohort_fachsemester": 1
                      },
                      {
                        "study_id": "163016069",
                        "spo_version": "20181",
                        "cohort_fachsemester": 2
                      }
                    ],
                    "semester_key": "2022w",
                    "org_id": 53021
                  }
                },
                "8": {
                  "summary": "Student Ranking for the Second Year in the Physics Master’s Programs",
                  "value": {
                    "ranking": "Semester-Ranking für das 2. Studienjahr in den Physik-Masterstudiengängen im WS 2022/3",
                    "ranking_en": "Student Ranking for the Second Year in the Physics Master’s Programs in WS 2022/3",
                    "semesters": "des dritten und vierten Fachsemesters",
                    "semesters_en": "of 3rd and 4th semester",
                    "cohort": "Für das Ranking werden die vier Masterstudiengänge Physik zusammengefasst, da sie durch die identische Studiengangsstruktur vergleichbar sind. Die Kohorte umfasst alle Studierenden im zweiten Studienjahr, in dem die Forschungsphase des Masterstudiums stattfindet. Von WS 2020/1 bis WS 2021/2 waren alle prüfungsrechtlichen Fristen aufgrund der Einschränkungen durch die COVID-19-Pandemie ausgesetzt.",
                    "cohort_en": "The ranking combines the four Master’s programs in Physics. Due to the identical structure of these study programs, these are comparable. The cohort includes all students within their second year of studies during the Master’s program’s research phase. Due to the restrictions during the COVID-19 pandemic, all exam-related deadlines and requirements were postponed in the semesters from winter 2020/1 to winter 2021/2.",
                    "ranking_base": "Als Grundlage werden ausschließlich Pflicht- und Wahlmodule, die in den Studiengang eingehen herangezogen.",
                    "ranking_base_en": "The ranking is based on modules according to the exam regulations only.",
                    "programs": [
                      {
                        "study_id": "163016066",
                        "spo_version": "20181",
                        "cohort_fachsemester": 3
                      },
                      {
                        "study_id": "163016066",
                        "spo_version": "20181",
                        "cohort_fachsemester": 4
                      },
                      {
                        "study_id": "163016067",
                        "spo_version": "20181",
                        "cohort_fachsemester": 3
                      },
                      {
                        "study_id": "163016067",
                        "spo_version": "20181",
                        "cohort_fachsemester": 4
                      },
                      {
                        "study_id": "163016068",
                        "spo_version": "20181",
                        "cohort_fachsemester": 3
                      },
                      {
                        "study_id": "163016068",
                        "spo_version": "20181",
                        "cohort_fachsemester": 4
                      },
                      {
                        "study_id": "163016069",
                        "spo_version": "20181",
                        "cohort_fachsemester": 3
                      },
                      {
                        "study_id": "163016069",
                        "spo_version": "20181",
                        "cohort_fachsemester": 4
                      }
                    ],
                    "semester_key": "2022w",
                    "org_id": 53021
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/search": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Search Rankings",
        "description": "Search for rankings.",
        "operationId": "rnk_search_rankings",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2
                },
                {
                  "type": "null"
                }
              ],
              "description": "Matrikel, username or search phrase for name of the student",
              "title": "Q"
            },
            "description": "Matrikel, username or search phrase for name of the student"
          },
          {
            "name": "matrikel",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 8,
                  "maxLength": 8,
                  "pattern": "^[0-9]{8}$",
                  "examples": [
                    "00002222"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Matrikel of the student",
              "title": "Matrikel"
            },
            "description": "Matrikel of the student"
          },
          {
            "name": "username",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "null"
                }
              ],
              "description": "Username of the student",
              "title": "Username"
            },
            "description": "Username of the student"
          },
          {
            "name": "namestart",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 2
                },
                {
                  "type": "null"
                }
              ],
              "description": "Search phrase for name.",
              "title": "Namestart"
            },
            "description": "Search phrase for name."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 10,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingStudentHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/combine": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Combine Rankings",
        "description": "Combine ranking cohorts.",
        "operationId": "rnk_combine_rankings",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "student_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer",
                  "minimum": -1
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include students up to rank `student_count`. Default is best percentile, set to -1 for all.",
              "title": "Student Count"
            },
            "description": "Include students up to rank `student_count`. Default is best percentile, set to -1 for all."
          },
          {
            "name": "percentile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Percentile used, if student_count is not given.",
              "default": 20,
              "title": "Percentile"
            },
            "description": "Percentile used, if student_count is not given."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankingCombine",
                "description": "List of ranking cohorts to combine"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingCombination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/cohort/stats": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Cohort Stats Pdf",
        "description": "Get ranking for student.",
        "operationId": "rnk_cohort_stats_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "study_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 9,
                "maxLength": 12,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              "minItems": 1,
              "description": "ID of the study program",
              "default": [],
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "use_node_values",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Use credits/grades from ranking node instead of main node.",
              "default": false,
              "title": "Use Node Values"
            },
            "description": "Use credits/grades from ranking node instead of main node."
          }
        ],
        "responses": {
          "200": {
            "description": "Return cohort statistics as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/student": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Read Rankings Student",
        "description": "Retrieve rankings available as student.",
        "operationId": "rnk_read_rankings_student",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/RankingStudentProgram"
                  },
                  "type": "array",
                  "title": "Response Rnk Read Rankings Student"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/rnk/student/{ranking_id}/{study_id}": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Read Ranking Student",
        "description": "Retrieve ranking as student.",
        "operationId": "rnk_read_ranking_student",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          }
        ],
        "responses": {
          "200": {
            "description": "Return ranking as PDF file.",
            "content": {
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/{ranking_id}": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Read Ranking",
        "description": "Retrieve ranking configured.",
        "operationId": "rnk_read_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          },
          {
            "name": "student_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include students up to rank `student_count`. Default is best percentile, set to -1 for all.",
              "title": "Student Count"
            },
            "description": "Include students up to rank `student_count`. Default is best percentile, set to -1 for all."
          },
          {
            "name": "percentile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Percentile used, if student_count is not given.",
              "default": 20,
              "title": "Percentile"
            },
            "description": "Percentile used, if student_count is not given."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Ranking"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Update Ranking",
        "description": "Reconfigure existing ranking.",
        "operationId": "rnk_update_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RankingUpdate",
                "description": "JSON data with changes of ranking configuration"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Delete Ranking",
        "description": "Delete existing ranking.",
        "operationId": "rnk_delete_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Import Students",
        "description": "Import students to a ranking.",
        "operationId": "rnk_import_students",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/{ranking_id}/xlsx": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Export Ranking Xlsx",
        "description": "Retrieve ranking configured.",
        "operationId": "rnk_export_ranking_xlsx",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          },
          {
            "name": "student_count",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Include students up to rank `student_count`. Default is best percentile, set to -1 for all.",
              "title": "Student Count"
            },
            "description": "Include students up to rank `student_count`. Default is best percentile, set to -1 for all."
          },
          {
            "name": "percentile",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 100,
              "minimum": 1,
              "description": "Percentile used, if student_count is not given.",
              "default": 20,
              "title": "Percentile"
            },
            "description": "Percentile used, if student_count is not given."
          }
        ],
        "responses": {
          "200": {
            "description": "Return emails of ranked students as XLSX file.",
            "content": {
              "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/{ranking_id}/{semester_key}": {
      "post": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Clone Ranking",
        "description": "Reconfigure existing ranking.",
        "operationId": "rnk_clone_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking to clone",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking to clone"
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "description": "Key of the new semester",
              "title": "Semester Key"
            },
            "description": "Key of the new semester"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/{ranking_id}/publish": {
      "put": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Publish Ranking",
        "description": "Publish ranking.",
        "operationId": "rnk_publish_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Unpublish Ranking",
        "description": "Unpublish ranking.",
        "operationId": "rnk_unpublish_ranking",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RankingBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/rnk/{ranking_id}/{study_id}/{username}": {
      "get": {
        "tags": [
          "Semester Rankings"
        ],
        "summary": "Ranking Student Pdf",
        "description": "Get ranking for student.",
        "operationId": "rnk_ranking_student_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "ranking_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the ranking",
              "title": "Ranking Id"
            },
            "description": "ID of the ranking"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 7,
                  "maxLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                {
                  "type": "string",
                  "minLength": 8,
                  "maxLength": 8,
                  "pattern": "^[0-9]{8}$",
                  "examples": [
                    "00002222"
                  ]
                }
              ],
              "description": "Username or matrikel of the student",
              "title": "Username"
            },
            "description": "Username or matrikel of the student"
          },
          {
            "name": "finalize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Issue final ranking for this student and fix record.",
              "default": false,
              "title": "Finalize"
            },
            "description": "Issue final ranking for this student and fix record."
          },
          {
            "name": "force_recreate",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Always recreate ranking, even if PDF already exists, and set rank to live rank.",
              "default": false,
              "title": "Force Recreate"
            },
            "description": "Always recreate ranking, even if PDF already exists, and set rank to live rank."
          }
        ],
        "responses": {
          "200": {
            "description": "Return ranking as PDF file.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/": {
      "get": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Read Scholarships",
        "description": "Retrieve scholarships configured.",
        "operationId": "stp_read_scholarships",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "semester_key",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "minLength": 5,
                  "maxLength": 5,
                  "pattern": "^[0-9]{4}[sSwW]$"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Only show scholarships for this semester.",
              "title": "Semester Key"
            },
            "description": "Only show scholarships for this semester."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Scholarship"
                  },
                  "title": "Response Stp Read Scholarships"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Create Scholarship",
        "description": "Create scholarship configuration.",
        "operationId": "stp_create_scholarship",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScholarshipCreate",
                "description": "JSON with scholarship data to create."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scholarship"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/nominate": {
      "get": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Read Scholarships For Nomination",
        "description": "Retrieve scholarships configured for nomination from programs.",
        "operationId": "stp_read_scholarships_for_nomination",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Select org. If not given, all programs with access are shown.",
              "title": "Org Id"
            },
            "description": "Select org. If not given, all programs with access are shown."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScholarshipWithPrograms"
                  },
                  "title": "Response Stp Read Scholarships For Nomination"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/nominate/{scholarship_id}": {
      "get": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Read Scholarship For Nomination",
        "description": "Retrieve scholarship.",
        "operationId": "stp_read_scholarship_for_nomination",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScholarshipWithCandidates"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Nominate For Scholarship",
        "description": "Suggest students for nomination in scholarship.",
        "operationId": "stp_nominate_for_scholarship",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/ScholarshipNominations"
                },
                "description": "List of usernames to be nominated, grouped by study_id/spo_version/fachsemester",
                "title": "Nomination Sets"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/MsgTaskNew"
                    },
                    {
                      "$ref": "#/components/schemas/Msg"
                    }
                  ],
                  "title": "Response Stp Nominate For Scholarship"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/nominate/{scholarship_id}/xlsx": {
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Nominate For Scholarship Import",
        "description": "Import nominees.",
        "operationId": "stp_nominate_for_scholarship_import",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_stp_nominate_for_scholarship_import"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/nominate/{scholarship_id}/{study_id}/{spo_version}/{fachsemester}/{student_username}": {
      "delete": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Cancel Nominate For Scholarship",
        "description": "Cancel a nomination of a student for a scholarship.",
        "operationId": "stp_cancel_nominate_for_scholarship",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program"
          },
          {
            "name": "fachsemester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Semester of students eligible",
              "title": "Fachsemester"
            },
            "description": "Semester of students eligible"
          },
          {
            "name": "student_username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "description": "Username of the student nomination to be canceled",
              "title": "Student Username"
            },
            "description": "Username of the student nomination to be canceled"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Msg"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/{scholarship_id}": {
      "get": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Read Scholarship",
        "description": "Retrieve scholarship.",
        "operationId": "stp_read_scholarship",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScholarshipWithPrograms"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Update Scholarship",
        "description": "Update scholarship.",
        "operationId": "stp_update_scholarship",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScholarshipUpdate",
                "description": "JSON with fields to update, omitted fields are left unchanged."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scholarship"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Delete Scholarship",
        "description": "Delete scholarship.",
        "operationId": "stp_delete_scholarship",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "force",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "If True, delete even if there are invitations",
              "default": false,
              "title": "Force"
            },
            "description": "If True, delete even if there are invitations"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Scholarship"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Create Scholarship Programs",
        "description": "Add all active SPOs of the degree types to scholarship.",
        "operationId": "stp_create_scholarship_programs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "fachsemester",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 1,
              "description": "Semester of students eligible",
              "default": [
                2,
                3
              ],
              "title": "Fachsemester"
            },
            "description": "Semester of students eligible"
          },
          {
            "name": "degree_type_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 1,
              "description": "ID of the degree types (defaults to 17 (B.Sc.) and 16 (M.Sc.))",
              "default": [
                16,
                17
              ],
              "title": "Degree Type Id"
            },
            "description": "ID of the degree types (defaults to 17 (B.Sc.) and 16 (M.Sc.))"
          },
          {
            "name": "only_with_ranking",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Exclude SPO versions, for which no student rankings are available",
              "default": false,
              "title": "Only With Ranking"
            },
            "description": "Exclude SPO versions, for which no student rankings are available"
          },
          {
            "name": "org_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "description": "ID of the org to filter programs",
              "title": "Org Id"
            },
            "description": "ID of the org to filter programs"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScholarshipProgram"
                  },
                  "title": "Response Stp Create Scholarship Programs"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/{scholarship_id}/combine_study_id": {
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Combine Scholarship Programs By Study Id",
        "description": "Combine all programs in a scholarship by study_id.",
        "operationId": "stp_combine_scholarship_programs_by_study_id",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScholarshipProgram"
                  },
                  "title": "Response Stp Combine Scholarship Programs By Study Id"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/{scholarship_id}/{study_id}/{spo_version}": {
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Create Scholarship Program",
        "description": "Add study program to scholarship.",
        "operationId": "stp_create_scholarship_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program"
          },
          {
            "name": "fachsemester",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 1,
              "description": "Semester of students eligible",
              "default": [
                2,
                3
              ],
              "title": "Fachsemester"
            },
            "description": "Semester of students eligible"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScholarshipProgram"
                  },
                  "title": "Response Stp Create Scholarship Program"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/{scholarship_id}/{study_id}": {
      "post": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Create Scholarship Program All Spos",
        "description": "Add all active SPOs of a study program to scholarship.",
        "operationId": "stp_create_scholarship_program_all_spos",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "fachsemester",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "minItems": 1,
              "description": "Semester of students eligible",
              "default": [
                2,
                3
              ],
              "title": "Fachsemester"
            },
            "description": "Semester of students eligible"
          },
          {
            "name": "only_with_ranking",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Exclude SPO versions, for which no student rankings are available",
              "default": false,
              "title": "Only With Ranking"
            },
            "description": "Exclude SPO versions, for which no student rankings are available"
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScholarshipProgram"
                  },
                  "title": "Response Stp Create Scholarship Program All Spos"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/stp/{scholarship_id}/{study_id}/{spo_version}/{fachsemester}": {
      "put": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Update Scholarship Program",
        "description": "Update study program config in scholarship.",
        "operationId": "stp_update_scholarship_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program"
          },
          {
            "name": "fachsemester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Semester of students eligible",
              "title": "Fachsemester"
            },
            "description": "Semester of students eligible"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScholarshipProgramUpdate",
                "description": "JSON with program config"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ScholarshipProgram"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Stp Update Scholarship Program"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Scholarship Invitations"
        ],
        "summary": "Delete Scholarship Program",
        "description": "Delete study program config in scholarship.",
        "operationId": "stp_delete_scholarship_program",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "scholarship_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the scholarship",
              "title": "Scholarship Id"
            },
            "description": "ID of the scholarship"
          },
          {
            "name": "study_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 9,
              "maxLength": 12,
              "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
              "examples": [
                "163017051",
                "163016066",
                "163016067",
                "163016068",
                "163016069"
              ],
              "description": "ID of the study program",
              "title": "Study Id"
            },
            "description": "ID of the study program"
          },
          {
            "name": "spo_version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "SPO version of the study program",
              "title": "Spo Version"
            },
            "description": "SPO version of the study program"
          },
          {
            "name": "fachsemester",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Semester of students eligible",
              "title": "Fachsemester"
            },
            "description": "Semester of students eligible"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScholarshipProgram"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fob/": {
      "get": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Read Fobject Templates",
        "description": "Read templates for fobjects.",
        "operationId": "fob_read_fobject_templates",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FobjectTemplate"
                  },
                  "type": "array",
                  "title": "Response Fob Read Fobject Templates"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fob/operative": {
      "post": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Create Fobject Operative",
        "description": "Create an fobject gathering quantities from an org.",
        "operationId": "fob_create_fobject_operative",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FobjectMengeOperationalCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/fob/manual": {
      "post": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Create Set Manual",
        "description": "Create a manual quantity at an org.",
        "operationId": "fob_create_set_manual",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FobjectMengeManualCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/fob/{org_id}/manual/{set_id}": {
      "post": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Update Set Manual",
        "description": "Update manual quantity at an org.",
        "operationId": "fob_update_set_manual",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Org the set is in.",
              "title": "Org Id"
            },
            "description": "ID of the Org the set is in."
          },
          {
            "name": "set_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the set.",
              "title": "Set Id"
            },
            "description": "ID of the set."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FobjectMengeManualUpdate"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fob/{org_id}/duplicate": {
      "put": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Duplicate Fobject Sets",
        "description": "Duplicate fobject sets with title_short from source_org_id to org_id by operative sets.",
        "operationId": "fob_duplicate_fobject_sets",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Org the duplicating set shall be created in.",
              "title": "Org Id"
            },
            "description": "ID of the Org the duplicating set shall be created in."
          },
          {
            "name": "title_short",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "Short title of the set to be duplicated",
              "title": "Title Short"
            },
            "description": "Short title of the set to be duplicated"
          },
          {
            "name": "source_org_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Source organisation",
              "title": "Source Org Id"
            },
            "description": "Source organisation"
          },
          {
            "name": "org_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter by organisation type.",
              "default": [],
              "title": "Org Type"
            },
            "description": "Filter by organisation type."
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fob/{org_id}/gather": {
      "post": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Create Fobject Gather",
        "description": "Create an fobject gathering quantities from an org.",
        "operationId": "fob_create_fobject_gather",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Organisation to put the object(s)",
              "title": "Org Id"
            },
            "description": "Organisation to put the object(s)"
          },
          {
            "name": "source_org_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Source organisation, negative values for virtual organisations",
              "title": "Source Org Id"
            },
            "description": "Source organisation, negative values for virtual organisations"
          },
          {
            "name": "org_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Filter by organisation type.",
              "default": [],
              "title": "Org Type"
            },
            "description": "Filter by organisation type."
          },
          {
            "name": "explicit_usernames",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 7,
                "maxLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              "description": "List of usernames to include via an explicit, manual quantity.",
              "default": [],
              "title": "Explicit Usernames"
            },
            "description": "List of usernames to include via an explicit, manual quantity."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FobjectGroupTemplate"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fob/{org_id}/{template}": {
      "put": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Create Fobjects",
        "description": "Create fobjects by template.",
        "operationId": "fob_create_fobjects",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Org to create the objects in.",
              "title": "Org Id"
            },
            "description": "ID of the Org to create the objects in."
          },
          {
            "name": "template",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/FobjectTemplateId",
              "description": "ID of the template"
            },
            "description": "ID of the template"
          },
          {
            "name": "node_types",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NodeType"
              },
              "description": "Apply to nodes of type(s). Possible types are restricted by the template. Default is set by the template.",
              "default": [],
              "title": "Node Types"
            },
            "description": "Apply to nodes of type(s). Possible types are restricted by the template. Default is set by the template."
          },
          {
            "name": "update_existing",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "description": "Update existing objects",
              "default": true,
              "title": "Update Existing"
            },
            "description": "Update existing objects"
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/fob/{org_id}": {
      "post": {
        "tags": [
          "TUMonline Function Objects"
        ],
        "summary": "Create Arbitrary Fobjects",
        "description": "Create fobjects.",
        "operationId": "fob_create_arbitrary_fobjects",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Org to create the objects in.",
              "title": "Org Id"
            },
            "description": "ID of the Org to create the objects in."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FobjectCreate",
                "description": "Object definitions"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/{docgs_id}": {
      "patch": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Patch Phd Project Local",
        "description": "Updates PhdProjectLocal. Only Updates fields committee_id, username_override, supervisor_username_override, phd_thesis_title_override and pause.",
        "operationId": "phd_patch_phd_project_local",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Phd Project assigned in DocGS",
              "title": "Docgs Id"
            },
            "description": "ID of the Phd Project assigned in DocGS"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdProjectLocalUpdateable",
                "description": "JSON with fields to update, omitted fields are left unchanged."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdProjectLocalUpdateable"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/graduate_centers/": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Create Graduate Center",
        "operationId": "phd_create_graduate_center",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GraduateCenter-Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GraduateCenter-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Graduate Center",
        "operationId": "phd_get_graduate_center",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GraduateCenter-Output"
                  },
                  "title": "Response Phd Get Graduate Center"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/sync/{org_id}": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Sync Docgs",
        "description": "Sync phd students for Org org_id from docGS.",
        "operationId": "phd_sync_docgs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "description": "ID of the org for which synchronisation should be done.",
              "title": "Org Id"
            },
            "description": "ID of the org for which synchronisation should be done."
          },
          {
            "name": "list_type",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "promliste",
                "aborted",
                "finished",
                "preliminary"
              ],
              "type": "string",
              "title": "List Type"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/promotion-list": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Promotion List",
        "operationId": "phd_get_promotion_list",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name_sorting",
                "docgs_id",
                "supervisor_lastname",
                "begin_date"
              ],
              "default": "name_sorting",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "title": "Sort Order"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 500,
              "minimum": 1,
              "description": "Limit number of results.",
              "default": 100,
              "title": "Limit"
            },
            "description": "Limit number of results."
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Skip first results.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Skip first results."
          },
          {
            "name": "list_type",
            "in": "query",
            "required": true,
            "schema": {
              "enum": [
                "promliste",
                "aborted",
                "finished",
                "preliminary"
              ],
              "type": "string",
              "title": "List Type"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by `name` which searches in `firstname`, `lastname`, and `username`.",
              "title": "Name"
            },
            "description": "Filter by `name` which searches in `firstname`, `lastname`, and `username`."
          },
          {
            "name": "committee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Acceptance Committee `committee_id`.",
              "title": "Committee Id"
            },
            "description": "Filter by Acceptance Committee `committee_id`."
          },
          {
            "name": "gc_docgs",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Graduate Center `gc_docgs`.",
              "title": "Gc Docgs"
            },
            "description": "Filter by Graduate Center `gc_docgs`."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdProjectInfoHits"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/exam/list": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Exam List",
        "description": "Get a list of PhD projects ready for examination, with optional filtering and sorting.",
        "operationId": "phd_get_exam_list",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of records to skip. Default is 0.",
              "default": 0,
              "title": "Offset"
            },
            "description": "Number of records to skip. Default is 0."
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "maximum": 1000,
              "minimum": 1,
              "description": "Maximum number of records to return. Default is 100.",
              "default": 100,
              "title": "Limit"
            },
            "description": "Maximum number of records to return. Default is 100."
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "enum": [
                "docgs_id",
                "username",
                "supervisor_username",
                "phd_thesis_title"
              ],
              "default": "docgs_id",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "title": "Sort Order"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by persons name, matching firstname, lastname, or username.",
              "title": "Name"
            },
            "description": "Filter by persons name, matching firstname, lastname, or username."
          },
          {
            "name": "supervisor",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by supervisor name.",
              "title": "Supervisor"
            },
            "description": "Filter by supervisor name."
          },
          {
            "name": "committee_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "Filter by Acceptance Committee `committee_id`.",
              "title": "Committee Id"
            },
            "description": "Filter by Acceptance Committee `committee_id`."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdExamListResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/exam/{docgs_id}/suggestion": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Create Committee Suggestion",
        "operationId": "phd_create_committee_suggestion",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Phd Project assigned in DocGS",
              "title": "Docgs Id"
            },
            "description": "ID of the Phd Project assigned in DocGS"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufCommitteeSuggestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufSuggestionsBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/exam/{docgs_id}/suggestion/{rundlauf_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Update Committee Suggestion",
        "operationId": "phd_update_committee_suggestion",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Phd Project assigned in DocGS",
              "title": "Docgs Id"
            },
            "description": "ID of the Phd Project assigned in DocGS"
          },
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the Rundlauf",
              "title": "Rundlauf Id"
            },
            "description": "ID of the Rundlauf"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufCommitteeSuggestion"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufSuggestionsBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/exam/{docgs_id}/suggestion/{rundlauf_id}/accept": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Accept Committee Suggestion",
        "operationId": "phd_accept_committee_suggestion",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the Phd Project assigned in DocGS",
              "title": "Docgs Id"
            },
            "description": "ID of the Phd Project assigned in DocGS"
          },
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the Rundlauf ",
              "title": "Rundlauf Id"
            },
            "description": "ID of the Rundlauf "
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufSuggestionsBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/export/{org_id}": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Export Rundlauf Docgs",
        "operationId": "phd_export_rundlauf_docgs",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org for which synchronisation should be done.",
              "title": "Org Id"
            },
            "description": "ID of the org for which synchronisation should be done."
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/einreichung/{org_id}": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Check Einreichung",
        "operationId": "phd_check_einreichung",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org for which synchronisation should be done.",
              "title": "Org Id"
            },
            "description": "ID of the org for which synchronisation should be done."
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/elements/{element}": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Qp Elements",
        "description": "Training elements",
        "operationId": "phd_get_qp_elements",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "element",
            "in": "path",
            "required": true,
            "schema": {
              "enum": [
                "subjectrelated",
                "publication",
                "presentation",
                "international",
                "teaching",
                "softskills"
              ],
              "type": "string",
              "title": "Element"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdQPElement"
                  },
                  "title": "Response Phd Get Qp Elements"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/{docgs_id}/courses/{semester_key}": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Courses By Semester",
        "description": "Get list of courses for GS Program",
        "operationId": "phd_get_courses_by_semester",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          },
          {
            "name": "semester_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$",
              "title": "Semester Key"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseBase"
                  },
                  "title": "Response Phd Get Courses By Semester"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/subjectrelated": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Subjectrelated",
        "description": "New subject related qualification element from a dssnat course",
        "operationId": "phd_submit_subjectrelated",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPCourseIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPSubjectrelatedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/recognize": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Recognize External Training",
        "description": "New recognition of external course as subjectrelated qualification element",
        "operationId": "phd_recognize_external_training",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPSubjectrelatedIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPSubjectrelatedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/subjectrelated/{training_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Edit Subjectrelated",
        "description": "Edit subjectrelated training",
        "operationId": "phd_edit_subjectrelated",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "training_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the subjectrelated training element.",
              "title": "Training Id"
            },
            "description": "ID of the subjectrelated training element."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPSubjectrelatedIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPSubjectrelatedOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Delete Subjectrelated",
        "description": "Delete subjectrelated qualification element",
        "operationId": "phd_delete_subjectrelated",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "training_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the subjectrelated element.",
              "title": "Training Id"
            },
            "description": "ID of the subjectrelated element."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Phd Delete Subjectrelated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/publication": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Publication",
        "description": "Submit a new publication/discussion as qualification element",
        "operationId": "phd_submit_publication",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPPublicationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPPublicationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/publication/{publication_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Edit Publication",
        "description": "Edit publication",
        "operationId": "phd_edit_publication",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "publication_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the publication element.",
              "title": "Publication Id"
            },
            "description": "ID of the publication element."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPPublicationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPPublicationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Delete Publication",
        "description": "Delete publication entry",
        "operationId": "phd_delete_publication",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "publication_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the publication element.",
              "title": "Publication Id"
            },
            "description": "ID of the publication element."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Phd Delete Publication"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/presentation": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Presentation",
        "description": "Submit a new presentation as qualification element",
        "operationId": "phd_submit_presentation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPPresentationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPPresentationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/presentation/{presentation_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Edit Presentation",
        "description": "Edit presentation",
        "operationId": "phd_edit_presentation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "presentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the presentation element.",
              "title": "Presentation Id"
            },
            "description": "ID of the presentation element."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPPresentationIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPPresentationOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Delete Presentation",
        "description": "Delete presentation element",
        "operationId": "phd_delete_presentation",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "presentation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the presentation element.",
              "title": "Presentation Id"
            },
            "description": "ID of the presentation element."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Phd Delete Presentation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/international": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit International",
        "description": "Submit a new international experience as qualification element",
        "operationId": "phd_submit_international",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPInternationalIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPInternationalOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/international/{stay_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Edit International",
        "description": "Edit international experience",
        "operationId": "phd_edit_international",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stay_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the international experience element.",
              "title": "Stay Id"
            },
            "description": "ID of the international experience element."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPInternationalIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPInternationalOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Delete International",
        "description": "Delete international experience element",
        "operationId": "phd_delete_international",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "stay_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the international experience element.",
              "title": "Stay Id"
            },
            "description": "ID of the international experience element."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Phd Delete International"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/teaching": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Teaching",
        "description": "Submit teaching activity as qualification element",
        "operationId": "phd_submit_teaching",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/PhdQPTeachingIn"
                },
                "title": "Teachings In"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdQPTeachingOut"
                  },
                  "title": "Response Phd Submit Teaching"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/teaching/{teaching_id}": {
      "delete": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Delete Teaching",
        "description": "Delete teaching element",
        "operationId": "phd_delete_teaching",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "teaching_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the teaching element.",
              "title": "Teaching Id"
            },
            "description": "ID of the teaching element."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPTeachingOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/votes": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Votes List",
        "operationId": "phd_votes_list",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdRundlaufVote"
                  },
                  "title": "Response Phd Votes List"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/vote/{rundlauf_id}": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Create Vote",
        "operationId": "phd_create_vote",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufVoteCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufVote"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/vote/{vote_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Vote Update",
        "operationId": "phd_vote_update",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "vote_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Vote Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufVoteUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufVoteUpdate"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/committees": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Committees",
        "operationId": "phd_get_committees",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhdQPAcceptanceCommitteeOut"
                  },
                  "type": "array",
                  "title": "Response Phd Get Committees"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/phd/rundlauf/{rundlauf_id}/voters": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Eligible Voters",
        "description": "Get list of users eligible to vote in this Rundlauf.\n\nReturns all committee members except supervisor, chairman and examiners.",
        "operationId": "phd_get_eligible_voters",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PersonBaseUsername"
                  },
                  "title": "Response Phd Get Eligible Voters"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/voter": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Rundlauf List Voter",
        "description": "Applies a time filter to only include Rundläufe from the last two months.\nThis ensures that the returned list contains recent or ongoing Rundläufe relevant to the user's potential voting responsibilities.",
        "operationId": "phd_rundlauf_list_voter",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhdRundlauf"
                  },
                  "type": "array",
                  "title": "Response Phd Rundlauf List Voter"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/phd/rundlauf/candidate": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Rundlauf List Candidate",
        "description": "Retrieves a list of Rundläufe associated with the PhD candidate making the request, ensuring the user has the 'candidate' role within the 'phd' application context.",
        "operationId": "phd_rundlauf_list_candidate",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/PhdRundlaufCandidateView"
                  },
                  "type": "array",
                  "title": "Response Phd Rundlauf List Candidate"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/phd/rundlauf/clerk": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Rundlauf List",
        "description": "Get a list of Rundlauf's. \nHereby please consider which filter options you will use:\n        \n-> complete = true: you will receive a list of Rundlauf which have a complete timestamp\n        \n-> started = true: you will receive a list of rundlauf which have a start_date\n        \n-> both are false: you will receive a list of rundlauf in which none have a start_date or a complete timestamp",
        "operationId": "phd_rundlauf_list",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "committee_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Committee Id"
            }
          },
          {
            "name": "started",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Started"
            }
          },
          {
            "name": "completed",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "default": false,
              "title": "Completed"
            }
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "name_sorting",
                "docgs_id",
                "rundlauf_start_date",
                "rundlauf_end_date",
                "count_votes"
              ],
              "default": "rundlauf_start_date",
              "title": "Sort By"
            }
          },
          {
            "name": "sort_order",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ],
              "default": "asc",
              "title": "Sort Order"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdRundlauf"
                  },
                  "title": "Response Phd Rundlauf List"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/edit/{rundlauf_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Rundlauf Edit Put",
        "description": "Edit Rundlauf",
        "operationId": "phd_rundlauf_edit_put",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufUpdate",
                "description": "JSON with fields to update, omitted fields are left unchanged."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufUpdateFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Edit Rundlauf Put",
        "description": "Edit Rundlauf",
        "operationId": "phd_edit_rundlauf_put_deprecated",
        "deprecated": true,
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufUpdate",
                "description": "JSON with fields to update, omitted fields are left unchanged."
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufUpdateFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/{rundlauf_id}/end": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "End Rundlauf Post",
        "description": "End Rundlauf",
        "operationId": "phd_end_rundlauf_post",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdRundlaufEndIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/start/{rundlauf_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Start Rundlauf",
        "operationId": "phd_start_rundlauf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdRundlaufStartedFull"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/document/{rundlauf_id}": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Generate Rundlauf Votes Pdf",
        "operationId": "phd_generate_rundlauf_votes_pdf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return PDF report on votes.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/{rundlauf_id}/files": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "List Of Files",
        "description": "Retrieve all files for an Rundlauf",
        "operationId": "phd_list_of_files",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/StorageFileBase"
                  },
                  "title": "Response Phd List Of Files"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/{rundlauf_id}/download/{rundlauf_file}": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Download File",
        "description": "Download specific Rundlauf file",
        "operationId": "phd_download_file",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_file",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "pattern": "^[-_a-zA-Z0-9]+(|\\.[-_a-zA-Z0-9]+)\\.pdf$",
              "description": "File to retreive.",
              "title": "Rundlauf File"
            },
            "description": "File to retreive."
          },
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return PDF report on QP.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/{rundlauf_id}/upload": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Upload Files",
        "description": "Upload files for Rundlauf",
        "operationId": "phd_upload_files",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "rundlauf_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Rundlauf Id"
            }
          },
          {
            "name": "rundlauf_file_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/PhdRundlaufFiles"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_phd_upload_files"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StorageFileBase"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/rundlauf/sync/{org_id}": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Sync Rundlauf",
        "description": "Synchronisation von Rundläufen: DocGS wir aaufgerufen und ausgelesen, alle neuen verwertbaren Rundläufe werden in der DB gespeichert",
        "operationId": "phd_sync_rundlauf",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "ID of the org for which synchronisation should be done.",
              "title": "Org Id"
            },
            "description": "ID of the org for which synchronisation should be done."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/generate_pdf/{docgs_id}": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Generate Pdf Endpoint",
        "operationId": "phd_generate_pdf_endpoint",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return PDF report on QP.",
            "content": {
              "application/json": {
                "schema": {}
              },
              "application/pdf": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/projects/{username}": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Qp Projects",
        "operationId": "phd_get_qp_projects",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 7,
              "maxLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ],
              "title": "Username"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdProjectDocGsTitle"
                  },
                  "title": "Response Phd Get Qp Projects"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/softskill": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Qp Softkills",
        "operationId": "phd_get_qp_softkills",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdQPSoftSkillOut"
                  },
                  "title": "Response Phd Get Qp Softkills"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Softskill",
        "description": "Submit teaching activity as qualification element",
        "operationId": "phd_submit_softskill",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPSoftSkillIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPSoftSkillOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/softskill/{soft_skill_id}": {
      "put": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Edit Softskill",
        "description": "Submit teaching activity as qualification element",
        "operationId": "phd_edit_softskill",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "soft_skill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the softskill element.",
              "title": "Soft Skill Id"
            },
            "description": "ID of the softskill element."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdQPSoftSkillIn"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPSoftSkillOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Delete Softskill",
        "description": "Delete softskill as qualification element",
        "operationId": "phd_delete_softskill",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "soft_skill_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the softskill element.",
              "title": "Soft Skill Id"
            },
            "description": "ID of the softskill element."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdQPSoftSkillOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/list/{docgs_id}/": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Qp List",
        "operationId": "phd_get_qp_list",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QualificationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/feedbacksession/": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Get Feedbacksession",
        "operationId": "phd_get_feedbacksession",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PhdFeedbackSessionOut"
                  },
                  "title": "Response Phd Get Feedbacksession"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/feedbacksession/": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Feedbacksession",
        "operationId": "phd_submit_feedbacksession",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PhdFeedbackSessionIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PhdFeedbackSessionOut"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ]
      }
    },
    "/api/v1/phd/qp/{docgs_id}/elements/{element_id}/export/csv": {
      "get": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Export Qp Element Csv",
        "operationId": "phd_export_qp_element_csv",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          },
          {
            "name": "element_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the qualification element to export to csv.",
              "title": "Element Id"
            },
            "description": "ID of the qualification element to export to csv."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/csv": {}
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/import/{formcode}": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Submit Import Qp",
        "operationId": "phd_submit_import_qp",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          },
          {
            "name": "formcode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Formcode"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MsgTaskNew"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/phd/qp/{docgs_id}/elements/{element_id}/book": {
      "post": {
        "tags": [
          "Ph.D. Administration"
        ],
        "summary": "Book Qp Element",
        "operationId": "phd_book_qp_element",
        "security": [
          {
            "OAuth2AuthorizationCodeBearer": []
          },
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          }
        ],
        "parameters": [
          {
            "name": "docgs_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Docgs Id"
            }
          },
          {
            "name": "element_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID of the qualification that should be marked as booked and synchronized to docgs.",
              "title": "Element Id"
            },
            "description": "ID of the qualification that should be marked as booked and synchronized to docgs."
          },
          {
            "name": "qp_element_type",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/QPElementsEnum"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ADUser": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "groups": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "ADUser"
      },
      "ANMVCreate": {
        "properties": {
          "no_semester_copy": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Semester Copy"
          },
          "register_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Start"
          },
          "register_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register End"
          },
          "deregister_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deregister End"
          },
          "max_students": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Students"
          },
          "max_team_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 2.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Team Size"
          },
          "vergabe_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vergabe Date"
          },
          "check_overlap": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Overlap"
          },
          "reihungskriterien": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reihungskriterien"
          },
          "auto_fix": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Fix"
          },
          "set_status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Set Status"
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short"
          },
          "short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "vergabe_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vergabe Info"
          },
          "vergabe_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vergabe Info En"
          },
          "internal_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Remark"
          },
          "sort_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Sort Id"
          },
          "org_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Org Id"
          },
          "editors": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Editors"
          },
          "course_codes": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array",
                "minItems": 1,
                "uniqueItems": true
              },
              {
                "additionalProperties": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "object"
              }
            ],
            "title": "Course Codes"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "org_id",
          "course_codes"
        ],
        "title": "ANMVCreate"
      },
      "ANMVCreateTemplate": {
        "properties": {
          "no_semester_copy": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Semester Copy"
          },
          "register_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Start"
          },
          "register_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register End"
          },
          "deregister_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deregister End"
          },
          "max_students": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Students"
          },
          "max_team_size": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 2.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Team Size"
          },
          "vergabe_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vergabe Date"
          },
          "check_overlap": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Overlap"
          },
          "reihungskriterien": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reihungskriterien"
          },
          "auto_fix": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Auto Fix"
          },
          "set_status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Set Status"
          },
          "title_template": {
            "type": "string",
            "title": "Title Template",
            "default": "{course_code}: {course_name}"
          },
          "title_template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Template En",
            "default": "{course_code}: {course_name_en}"
          },
          "short_template": {
            "type": "string",
            "title": "Short Template",
            "default": "{course_code}"
          },
          "short_template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Template En",
            "default": "{course_code}"
          },
          "description_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Template"
          },
          "description_template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Template En"
          },
          "vergabe_info_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vergabe Info Template"
          },
          "vergabe_info_template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vergabe Info Template En"
          },
          "internal_remark_template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal Remark Template",
            "default": "Automatisch generiertes Anmeldeverfahren zu {activity[activity_id]}: {course_name}. // Auto-generated registration procedure to {activity[activity_id]}: {course_name_en}."
          }
        },
        "type": "object",
        "title": "ANMVCreateTemplate",
        "example": {
          "auto_fix": true,
          "deregister_end": "2025-06-12",
          "register_end": "2025-06-12",
          "register_start": "2025-06-05",
          "reihungskriterien": "Satzung §4 Abs. 5 approx.: Studienplanzuordnung, ECTS offen, Fachsemester",
          "vergabe_date": "2025-06-13 01:00"
        }
      },
      "APV": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "matrikel": {
            "type": "string",
            "title": "Matrikelnummer",
            "title_en": "Matrikel number"
          },
          "lastexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der letzten Prüfungsleistung/des Zeugnisses",
            "title_en": "Date of the last exam/degree documents"
          },
          "lastexam_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikulationsstatus bei der letzten Prüfungsleistung",
            "title_en": "Enrolement status at last exam"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikulationsstatus",
            "title_en": "Enrolement status"
          },
          "is_positive": {
            "type": "boolean",
            "title": "Abschluss bestanden",
            "default": true,
            "title_en": "Final exam passed"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Erreichte Credits im Studiengang bzw. Abschnitt",
            "title_en": "Credits achieved in the degree program or this part"
          },
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester",
            "title_en": "Subject semester"
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "vom Prüfungsausschuss gewährte Fristverlängerungen",
            "title_en": "Deadline extensions granted by the examination board"
          },
          "study_id": {
            "type": "string",
            "title": "ID des Studiengangs",
            "title_en": "ID of the study program"
          },
          "spo_version": {
            "type": "string",
            "title": "SPO-Version des Studiengangs",
            "title_en": "SPO version of the study program"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID",
            "title": "Art der Abschlussprüfung",
            "title_en": "APV type"
          },
          "studentok_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum Antrag auf Ausstellung der Abschlussdokumente",
            "title_en": "Date of request for issueing the degree documents"
          },
          "studentinfo_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum Info-E-Mail an Studierende*n",
            "title_en": "Date of info email to student"
          },
          "studentzpa_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum E-Mail an Studierende*n über Freigabe an CST/ZPA",
            "title_en": "Date of email to student on clearance to CST/ZPA"
          },
          "apv_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum, an dem die Dokumenterstellung in TUMonline gestartet wurde.",
            "title_en": "Date, the document creation was started in TUMonline"
          },
          "apv_finished_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum, zu dem die Dokumente in TUMonline gültig gesetzt wurden.",
            "title_en": "Date, the documents were finalized in TUMonline"
          },
          "applications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Application"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bewerbungen mit interner MZB",
            "title_en": "Applications referring to an internal MZB"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Titel der Abschlussarbeit in Deutsch",
            "title_en": "Title of the thesis in German"
          },
          "thesis_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Titel der Abschlussarbeit in Englisch",
            "title_en": "Title of the thesis in English"
          },
          "open_exam_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anzahl offener Prüfungsleistungen in TUMonline",
            "title_en": "Count of open exams in TUMonline"
          },
          "ds61": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eintrag im Feld 6.1 des Diploma Supplement",
            "title_en": "Entry in field 6.1 of the diploma supplement"
          },
          "audit_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline set for the student to check their documents in studentinfo email. If after this deadline open_exam_count is 0, the documents should be issued."
          },
          "remark_local": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local note for use by the Student Office."
          },
          "remark_zpa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on the student’s degree documents, that will be included in the email to CST/ZPA."
          },
          "pst_studium_nr": {
            "type": "integer",
            "title": "Pst Studium Nr"
          },
          "pst_person_nr": {
            "type": "integer",
            "title": "Pst Person Nr"
          },
          "thesis_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Id Tumonline"
          },
          "thesis_org_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Org Id Tumonline"
          },
          "thesis_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Id"
          },
          "apv_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Apv Id Tumonline"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "zpa_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zpa Date"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "apv_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "program": {
            "$ref": "#/components/schemas/APVProgramBase"
          },
          "closed": {
            "type": "boolean",
            "title": "Closed"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "thesis_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "matrikel",
          "study_id",
          "spo_version",
          "apvtype_id",
          "pst_studium_nr",
          "pst_person_nr",
          "modified",
          "program",
          "closed",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "thesis_url"
        ],
        "title": "APV"
      },
      "APVCeremonyInvitation": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender_id": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender Id"
          },
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Title"
          },
          "invitation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Zufällige UUID dieser Einladung.",
            "title_en": "Random UUID of this invitation."
          },
          "savethedate_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum \"save the date\"-Nachricht",
            "title_en": "Date of \"save the date\" message"
          },
          "invitationemail_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum Einladungs-E-Mail",
            "title_en": "Date of invitation email"
          },
          "invitationletter_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum Einladungsbrief",
            "title_en": "Date of invitation letter"
          },
          "feedback_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der Rückmeldung.",
            "title_en": "Date of feedback."
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rückmeldung: Anzahl der teilnehmenden Personen.",
            "title_en": "Feedback: number of attending persons."
          },
          "apvinvitation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVInvitation"
              },
              {
                "type": "null"
              }
            ],
            "title": "Informationen zum Abschluss bei Abschluss-Feiern.",
            "title_en": "Information on the degree program, if degree ceremony."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "ceremony": {
            "$ref": "#/components/schemas/CeremonyBase"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "invitation_id",
          "modified",
          "ceremony",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "APVCeremonyInvitation"
      },
      "APVCeremonyInvitationCreate": {
        "properties": {
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Title"
          },
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID"
          },
          "matrikel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matrikel"
          },
          "docgs_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Docgs Id"
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "gender_id",
          "email",
          "username",
          "study_id",
          "apvtype_id"
        ],
        "title": "APVCeremonyInvitationCreate"
      },
      "APVCeremonyInvitationUpdate": {
        "properties": {
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "gender_id": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Title"
          }
        },
        "type": "object",
        "title": "APVCeremonyInvitationUpdate"
      },
      "APVCeremonySlideLettergroup": {
        "properties": {
          "degree_type_short": {
            "type": "string",
            "title": "Degree Type Short"
          },
          "start_letter": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1,
            "title": "Start Letter",
            "default": "A"
          },
          "end_letter": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1,
            "title": "End Letter",
            "default": "Z"
          },
          "group_title": {
            "type": "string",
            "title": "Group Title",
            "default": "Studierende"
          },
          "students": {
            "items": {
              "$ref": "#/components/schemas/APVCeremonySlideStudent"
            },
            "type": "array",
            "title": "Students",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "degree_type_short"
        ],
        "title": "APVCeremonySlideLettergroup"
      },
      "APVCeremonySlideStudent": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "matrikel": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8,
                "minLength": 8,
                "pattern": "^[0-9]{8}$",
                "examples": [
                  "00002222"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Matrikel"
          },
          "firstletter": {
            "type": "string",
            "maxLength": 1,
            "minLength": 1,
            "title": "Firstletter"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramBase"
          },
          "supervisor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Title"
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Count"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGender",
            "readOnly": true
          },
          "shortfullname": {
            "type": "string",
            "title": "Shortfullname",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "firstletter",
          "program",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "shortfullname"
        ],
        "title": "APVCeremonySlideStudent"
      },
      "APVCeremonySlides": {
        "properties": {
          "ceremony": {
            "$ref": "#/components/schemas/CeremonyBase"
          },
          "letter_groups": {
            "items": {
              "$ref": "#/components/schemas/APVCeremonySlideLettergroup"
            },
            "type": "array",
            "title": "Letter Groups",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "ceremony"
        ],
        "title": "APVCeremonySlides"
      },
      "APVCeremonySlidesRequest": {
        "properties": {
          "group_size": {
            "type": "integer",
            "title": "Target group size",
            "default": 20
          },
          "group_letters": {
            "additionalProperties": {
              "type": "string",
              "pattern": "^[A-Za-z]*$"
            },
            "type": "object",
            "title": "Group Letters",
            "default": {}
          }
        },
        "type": "object",
        "title": "APVCeremonySlidesRequest"
      },
      "APVDSBBase": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikelnummer",
            "title_en": "Matrikel number"
          },
          "lastexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der letzten Prüfungsleistung/des Zeugnisses",
            "title_en": "Date of the last exam/degree documents"
          },
          "lastexam_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikulationsstatus bei der letzten Prüfungsleistung",
            "title_en": "Enrolement status at last exam"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikulationsstatus",
            "title_en": "Enrolement status"
          },
          "is_positive": {
            "type": "boolean",
            "title": "Abschluss bestanden",
            "default": true,
            "title_en": "Final exam passed"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Erreichte Credits im Studiengang bzw. Abschnitt",
            "title_en": "Credits achieved in the degree program or this part"
          },
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester",
            "title_en": "Subject semester"
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "vom Prüfungsausschuss gewährte Fristverlängerungen",
            "title_en": "Deadline extensions granted by the examination board"
          },
          "study_id": {
            "type": "string",
            "title": "ID des Studiengangs",
            "title_en": "ID of the study program"
          },
          "spo_version": {
            "type": "string",
            "title": "SPO-Version des Studiengangs",
            "title_en": "SPO version of the study program"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID",
            "title": "Art der Abschlussprüfung",
            "title_en": "APV type"
          },
          "studentok_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum Antrag auf Ausstellung der Abschlussdokumente",
            "title_en": "Date of request for issueing the degree documents"
          },
          "studentinfo_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum Info-E-Mail an Studierende*n",
            "title_en": "Date of info email to student"
          },
          "studentzpa_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum E-Mail an Studierende*n über Freigabe an CST/ZPA",
            "title_en": "Date of email to student on clearance to CST/ZPA"
          },
          "apv_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum, an dem die Dokumenterstellung in TUMonline gestartet wurde.",
            "title_en": "Date, the document creation was started in TUMonline"
          },
          "apv_finished_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum, zu dem die Dokumente in TUMonline gültig gesetzt wurden.",
            "title_en": "Date, the documents were finalized in TUMonline"
          },
          "applications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ApplicationBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bewerbungen mit interner MZB",
            "title_en": "Applications referring to an internal MZB"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Titel der Abschlussarbeit in Deutsch",
            "title_en": "Title of the thesis in German"
          },
          "thesis_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Titel der Abschlussarbeit in Englisch",
            "title_en": "Title of the thesis in English"
          },
          "open_exam_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anzahl offener Prüfungsleistungen in TUMonline",
            "title_en": "Count of open exams in TUMonline"
          },
          "ds61": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eintrag im Feld 6.1 des Diploma Supplement",
            "title_en": "Entry in field 6.1 of the diploma supplement"
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "study_id",
          "spo_version",
          "apvtype_id"
        ],
        "title": "APVDSBBase"
      },
      "APVInvitation": {
        "properties": {
          "program": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProgramBase"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studiengang des Abschlusses",
            "title_en": "Program of the degree"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Titel der Abschlussarbeit",
            "title_en": "Title of the thesis"
          },
          "supervisor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonSimple"
              },
              {
                "type": "null"
              }
            ],
            "title": "Themensteller*in der Abschlussarbeit",
            "title_en": "Supervisor of the thesis"
          },
          "matrikel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matrikel",
            "title_en": "Matrikel"
          },
          "docgs_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID in DocGS",
            "title_en": "ID in DocGS"
          }
        },
        "type": "object",
        "title": "APVInvitation"
      },
      "APVLog": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study ID of the program."
          },
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "log_tag": {
            "type": "string",
            "title": "Tag of the log representing the log reason in machine readable form."
          },
          "log_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Human readable description of the log entry."
          },
          "log_id": {
            "type": "string",
            "format": "uuid",
            "title": "Log Id"
          },
          "log_date": {
            "type": "string",
            "format": "date-time",
            "title": "Log Date"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "matrikel",
          "log_tag",
          "log_id",
          "log_date"
        ],
        "title": "APVLog"
      },
      "APVMailTypeDict": {
        "properties": {
          "studentinfo": {
            "type": "string",
            "title": "Studentinfo"
          },
          "studentinfolate": {
            "type": "string",
            "title": "Studentinfolate"
          },
          "studentzpa": {
            "type": "string",
            "title": "Studentzpa"
          },
          "studentenb": {
            "type": "string",
            "title": "Studentenb"
          },
          "zpa": {
            "type": "string",
            "title": "Zpa"
          },
          "zpaenb": {
            "type": "string",
            "title": "Zpaenb"
          },
          "abi": {
            "type": "string",
            "title": "Abi"
          }
        },
        "type": "object",
        "title": "APVMailTypeDict"
      },
      "APVPreprocessorDefinition": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Name of the preprocessor in German."
          },
          "title_en": {
            "type": "string",
            "title": "Name of the preprocessor in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the preprocessor in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the preprocessor in English."
          },
          "signature": {
            "additionalProperties": true,
            "type": "object",
            "title": "Signature of the command.",
            "default": {}
          },
          "uses_tumonline": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whether this preprocessors accesses TUMonline.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "title",
          "title_en"
        ],
        "title": "APVPreprocessorDefinition"
      },
      "APVProgram": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "invitation_ceremony_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the degree ceremony assigned to this program, new students will be added to the invitation list."
          },
          "zpa_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zpa Id"
          },
          "abi_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Abi Id"
          },
          "apv_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "SPO is active in APV tool."
          },
          "apv_org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the org in which the APV will be created (regularly a node of type \"Studiengangsbündel\" or \"Fakultät\")."
          },
          "previous_apv_org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the org in which the APV will be created for degrees before previous_transfer_date (regularly a node of type \"Fakultät\")."
          },
          "previous_transfer_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "The Sunday of the first week of the lecture period in the first semester of the TUM School."
          },
          "preprocessor": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of preprocessor configurations to be run before clearance."
          },
          "default_mailfrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default mail from for any emails."
          },
          "new_student_notify": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email recipients to send notification on new students to."
          },
          "audit_deadline_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "first:examperiod_registration_end",
                    "second:examperiod_registration_end",
                    "first:examperiod_end",
                    "second:examperiod_end",
                    "first:examperiod_gradedate",
                    "second:examperiod_gradedate"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of exam period tags defining the default audit deadlines."
          },
          "apv_stpk_id": {
            "type": "integer",
            "title": "ID of the final degree node in the SPO."
          },
          "stpstudnr": {
            "type": "integer",
            "title": "ID of the study program in the SPO management."
          },
          "stpstpnr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stpstpnr"
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase",
            "title": "Org of this program."
          },
          "last_sync": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of last synchronisation of this program’s students."
          },
          "sync_warning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning from the last sync in German."
          },
          "sync_warning_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning from the last sync in English."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "mailtemplates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProgramMailTemplate"
            },
            "type": "object",
            "title": "Mailtemplates"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "apvtype": {
            "$ref": "#/components/schemas/APVType"
          }
        },
        "type": "object",
        "required": [
          "apv_stpk_id",
          "stpstudnr",
          "program_name",
          "program_name_en",
          "study_id",
          "spo_version",
          "org_id",
          "org",
          "modified",
          "mailtemplates",
          "apvtype"
        ],
        "title": "APVProgram"
      },
      "APVProgramBase": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "invitation_ceremony_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the degree ceremony assigned to this program, new students will be added to the invitation list."
          },
          "zpa_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zpa Id"
          },
          "abi_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Abi Id"
          },
          "apv_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "SPO is active in APV tool."
          },
          "apv_org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the org in which the APV will be created (regularly a node of type \"Studiengangsbündel\" or \"Fakultät\")."
          },
          "previous_apv_org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the org in which the APV will be created for degrees before previous_transfer_date (regularly a node of type \"Fakultät\")."
          },
          "previous_transfer_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "The Sunday of the first week of the lecture period in the first semester of the TUM School."
          },
          "preprocessor": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of preprocessor configurations to be run before clearance."
          },
          "default_mailfrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default mail from for any emails."
          },
          "new_student_notify": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email recipients to send notification on new students to."
          },
          "audit_deadline_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "first:examperiod_registration_end",
                    "second:examperiod_registration_end",
                    "first:examperiod_end",
                    "second:examperiod_end",
                    "first:examperiod_gradedate",
                    "second:examperiod_gradedate"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of exam period tags defining the default audit deadlines."
          },
          "apv_stpk_id": {
            "type": "integer",
            "title": "Apv Stpk Id"
          },
          "stpstudnr": {
            "type": "integer",
            "title": "Stpstudnr"
          },
          "stpstpnr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stpstpnr"
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "last_sync": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sync"
          },
          "sync_warning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Warning"
          },
          "sync_warning_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Warning En"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "mailtemplates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProgramMailTemplateBase"
            },
            "type": "object",
            "title": "Mailtemplates"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "apvtype": {
            "$ref": "#/components/schemas/APVType"
          }
        },
        "type": "object",
        "required": [
          "apv_stpk_id",
          "stpstudnr",
          "program_name",
          "program_name_en",
          "study_id",
          "spo_version",
          "org_id",
          "org",
          "modified",
          "mailtemplates",
          "apvtype"
        ],
        "title": "APVProgramBase"
      },
      "APVProgramCombined": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "apvtype_id": {
            "type": "string",
            "title": "Apvtype Id"
          },
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "spo_versions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Spo Versions",
            "default": []
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "student_count": {
            "type": "integer",
            "title": "Student Count",
            "default": 0
          },
          "last_sync": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sync"
          },
          "sync_warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Warnings"
          },
          "sync_warnings_en": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Warnings En"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "apvtype_id",
          "program_name",
          "program_name_en",
          "org"
        ],
        "title": "APVProgramCombined"
      },
      "APVProgramUpdate": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "invitation_ceremony_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the degree ceremony assigned to this program, new students will be added to the invitation list."
          },
          "zpa_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zpa Id"
          },
          "abi_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Abi Id"
          },
          "apv_active": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "SPO is active in APV tool."
          },
          "apv_org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the org in which the APV will be created (regularly a node of type \"Studiengangsbündel\" or \"Fakultät\")."
          },
          "previous_apv_org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the org in which the APV will be created for degrees before previous_transfer_date (regularly a node of type \"Fakultät\")."
          },
          "previous_transfer_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "The Sunday of the first week of the lecture period in the first semester of the TUM School."
          },
          "preprocessor": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of preprocessor configurations to be run before clearance."
          },
          "default_mailfrom": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default mail from for any emails."
          },
          "new_student_notify": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email recipients to send notification on new students to."
          },
          "audit_deadline_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "first:examperiod_registration_end",
                    "second:examperiod_registration_end",
                    "first:examperiod_end",
                    "second:examperiod_end",
                    "first:examperiod_gradedate",
                    "second:examperiod_gradedate"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of exam period tags defining the default audit deadlines."
          },
          "mailtemplates": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVMailTypeDict"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "APVProgramUpdate"
      },
      "APVStarted": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "matrikel": {
            "type": "string",
            "title": "Matrikelnummer",
            "title_en": "Matrikel number"
          },
          "lastexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der letzten Prüfungsleistung/des Zeugnisses",
            "title_en": "Date of the last exam/degree documents"
          },
          "lastexam_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikulationsstatus bei der letzten Prüfungsleistung",
            "title_en": "Enrolement status at last exam"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikulationsstatus",
            "title_en": "Enrolement status"
          },
          "is_positive": {
            "type": "boolean",
            "title": "Abschluss bestanden",
            "default": true,
            "title_en": "Final exam passed"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Erreichte Credits im Studiengang bzw. Abschnitt",
            "title_en": "Credits achieved in the degree program or this part"
          },
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester",
            "title_en": "Subject semester"
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "vom Prüfungsausschuss gewährte Fristverlängerungen",
            "title_en": "Deadline extensions granted by the examination board"
          },
          "study_id": {
            "type": "string",
            "title": "ID des Studiengangs",
            "title_en": "ID of the study program"
          },
          "spo_version": {
            "type": "string",
            "title": "SPO-Version des Studiengangs",
            "title_en": "SPO version of the study program"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID",
            "title": "Art der Abschlussprüfung",
            "title_en": "APV type"
          },
          "studentok_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum Antrag auf Ausstellung der Abschlussdokumente",
            "title_en": "Date of request for issueing the degree documents"
          },
          "studentinfo_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum Info-E-Mail an Studierende*n",
            "title_en": "Date of info email to student"
          },
          "studentzpa_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum E-Mail an Studierende*n über Freigabe an CST/ZPA",
            "title_en": "Date of email to student on clearance to CST/ZPA"
          },
          "apv_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum, an dem die Dokumenterstellung in TUMonline gestartet wurde.",
            "title_en": "Date, the document creation was started in TUMonline"
          },
          "apv_finished_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum, zu dem die Dokumente in TUMonline gültig gesetzt wurden.",
            "title_en": "Date, the documents were finalized in TUMonline"
          },
          "applications": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Application"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bewerbungen mit interner MZB",
            "title_en": "Applications referring to an internal MZB"
          },
          "audit_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deadline set for the student to check their documents in studentinfo email. If after this deadline open_exam_count is 0, the documents should be issued."
          },
          "remark_local": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local note for use by the Student Office."
          },
          "remark_zpa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on the student’s degree documents, that will be included in the email to CST/ZPA."
          },
          "pst_studium_nr": {
            "type": "integer",
            "title": "Pst Studium Nr"
          },
          "pst_person_nr": {
            "type": "integer",
            "title": "Pst Person Nr"
          },
          "thesis_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Id Tumonline"
          },
          "thesis_org_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Org Id Tumonline"
          },
          "thesis_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Id"
          },
          "apv_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Apv Id Tumonline"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "zpa_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zpa Date"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "apv_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "program": {
            "$ref": "#/components/schemas/APVProgramBase"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "thesis_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "matrikel",
          "study_id",
          "spo_version",
          "apvtype_id",
          "pst_studium_nr",
          "pst_person_nr",
          "modified",
          "program",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "thesis_url"
        ],
        "title": "APVStarted"
      },
      "APVStudentConfirmations": {
        "properties": {
          "students": {
            "items": {
              "$ref": "#/components/schemas/APVStudentZPA"
            },
            "type": "array",
            "title": "List of students."
          },
          "to": {
            "items": {
              "type": "string",
              "format": "email"
            },
            "type": "array",
            "minItems": 1,
            "title": "List of recipients."
          }
        },
        "type": "object",
        "required": [
          "students",
          "to"
        ],
        "title": "APVStudentConfirmations"
      },
      "APVStudentInfo": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program of the student."
          },
          "apvtype_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVTypeID"
              },
              {
                "type": "null"
              }
            ],
            "title": "APV type (defaults to BAKN or MAGN)"
          },
          "mail_override": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmailNoToOptFrom"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional individual email sent to the student, overriding the default template set for the program."
          },
          "sendmail_student": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If False, do not send notification email to student.",
            "default": true
          },
          "audit_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional individual audit deadline for student, overriding the default. After this deadline the degree documents will be issued as soon as no exams are open."
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "study_id"
        ],
        "title": "APVStudentInfo"
      },
      "APVStudentInfos": {
        "properties": {
          "students": {
            "items": {
              "$ref": "#/components/schemas/APVStudentInfo"
            },
            "type": "array",
            "title": "List of students."
          },
          "audit_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional audit deadline for all student, overriding the default. After this deadline the degree documents will be issued as soon as no exams are open."
          }
        },
        "type": "object",
        "required": [
          "students"
        ],
        "title": "APVStudentInfos"
      },
      "APVStudentZPA": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program of the student."
          },
          "apvtype_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVTypeID"
              },
              {
                "type": "null"
              }
            ],
            "title": "APV type (defaults to BAKN or MAGN)"
          },
          "mail_override": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EmailNoToOptFrom"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional individual email sent to the student, overriding the default template set for the program."
          },
          "sendmail_student": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If False, do not send notification email to student.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "study_id"
        ],
        "title": "APVStudentZPA"
      },
      "APVStudentZPAs": {
        "properties": {
          "students": {
            "items": {
              "$ref": "#/components/schemas/APVStudentZPA"
            },
            "type": "array",
            "title": "List of students."
          },
          "notify_abi": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If applicable, notify ABI on degrees of applicants.",
            "default": true
          }
        },
        "type": "object",
        "required": [
          "students"
        ],
        "title": "APVStudentZPAs"
      },
      "APVType": {
        "properties": {
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID"
          },
          "apvtype_tumonline": {
            "type": "string",
            "title": "Apvtype Tumonline"
          }
        },
        "type": "object",
        "required": [
          "apvtype_id",
          "apvtype_tumonline"
        ],
        "title": "APVType"
      },
      "APVTypeID": {
        "type": "string",
        "enum": [
          "BAKN",
          "MAGN",
          "DPBRAU",
          "GOP",
          "ATSAB",
          "MAGARBN",
          "MAGARBZ",
          "BAKARBN",
          "DHP",
          "VDP1",
          "DVP",
          "PRFAUF",
          "RIG",
          "STEX",
          "VP",
          "BAKARBZ",
          "PRUEFARB"
        ],
        "title": "APVTypeID"
      },
      "App": {
        "properties": {
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          },
          "app_name_en": {
            "type": "string",
            "title": "App Name En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "roles": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AppRoleBase"
            },
            "type": "object",
            "title": "Roles",
            "default": {}
          },
          "functions": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AppFunctionBase"
            },
            "type": "object",
            "title": "Functions",
            "default": {}
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "app_name",
          "app_name_en",
          "sorting",
          "modified"
        ],
        "title": "App"
      },
      "AppAPIKey": {
        "properties": {
          "apikey": {
            "type": "string",
            "format": "uuid",
            "title": "Apikey"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Valid From"
          },
          "valid_through": {
            "type": "string",
            "format": "date-time",
            "title": "Valid Through"
          },
          "authinfo": {
            "$ref": "#/components/schemas/UserBase"
          },
          "user": {
            "$ref": "#/components/schemas/PersonBaseUsername"
          }
        },
        "type": "object",
        "required": [
          "apikey",
          "valid_from",
          "valid_through",
          "authinfo",
          "user"
        ],
        "title": "AppAPIKey"
      },
      "AppAPIKeyCreate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "roles": {
            "patternProperties": {
              "^[a-zA-Z]{3}$": {
                "patternProperties": {
                  "^[-a-zA-Z0-9]{1,6}$": {
                    "items": {
                      "type": "integer"
                    },
                    "type": "array",
                    "uniqueItems": true
                  }
                },
                "propertyNames": {
                  "maxLength": 6,
                  "minLength": 1,
                  "examples": [
                    "clerk",
                    "admin"
                  ]
                },
                "type": "object"
              }
            },
            "propertyNames": {
              "maxLength": 3,
              "minLength": 3
            },
            "type": "object",
            "title": "Roles"
          }
        },
        "type": "object",
        "required": [
          "roles"
        ],
        "title": "AppAPIKeyCreate"
      },
      "AppAPIKeyUpdate": {
        "properties": {
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "roles": {
            "anyOf": [
              {
                "patternProperties": {
                  "^[a-zA-Z]{3}$": {
                    "patternProperties": {
                      "^[-a-zA-Z0-9]{1,6}$": {
                        "items": {
                          "type": "integer"
                        },
                        "type": "array",
                        "uniqueItems": true
                      }
                    },
                    "propertyNames": {
                      "maxLength": 6,
                      "minLength": 1,
                      "examples": [
                        "clerk",
                        "admin"
                      ]
                    },
                    "type": "object"
                  }
                },
                "propertyNames": {
                  "maxLength": 3,
                  "minLength": 3
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles"
          }
        },
        "type": "object",
        "title": "AppAPIKeyUpdate"
      },
      "AppBase": {
        "properties": {
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          },
          "app_name_en": {
            "type": "string",
            "title": "App Name En"
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "app_name",
          "app_name_en"
        ],
        "title": "AppBase"
      },
      "AppFunction": {
        "properties": {
          "function_id": {
            "type": "string",
            "title": "Function Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name"
          },
          "function_name_en": {
            "type": "string",
            "title": "Function Name En"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "app": {
            "$ref": "#/components/schemas/AppBase"
          }
        },
        "type": "object",
        "required": [
          "function_id",
          "function_name",
          "function_name_en",
          "modified",
          "app_id",
          "app"
        ],
        "title": "AppFunction"
      },
      "AppFunctionBase": {
        "properties": {
          "function_id": {
            "type": "string",
            "title": "Function Id"
          },
          "function_name": {
            "type": "string",
            "title": "Function Name"
          },
          "function_name_en": {
            "type": "string",
            "title": "Function Name En"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "function_id",
          "function_name",
          "function_name_en",
          "modified"
        ],
        "title": "AppFunctionBase"
      },
      "AppMailTypeBase": {
        "properties": {
          "mailtype_id": {
            "type": "string",
            "title": "Mailtype Id"
          },
          "mailtype": {
            "type": "string",
            "title": "Mailtype"
          },
          "mailtype_en": {
            "type": "string",
            "title": "Mailtype En"
          },
          "default_mailtemplate_id": {
            "type": "string",
            "title": "Default Mailtemplate Id"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          }
        },
        "type": "object",
        "required": [
          "mailtype_id",
          "mailtype",
          "mailtype_en",
          "default_mailtemplate_id",
          "app_id"
        ],
        "title": "AppMailTypeBase"
      },
      "AppProgramMailTemplate": {
        "properties": {
          "mailtemplate_subject": {
            "type": "string",
            "title": "Mailtemplate Subject"
          },
          "mailtemplate_body": {
            "type": "string",
            "title": "Mailtemplate Body"
          },
          "mailtemplate_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate From"
          },
          "mailtemplate_name": {
            "type": "string",
            "title": "Mailtemplate Name"
          },
          "mailtemplate_name_en": {
            "type": "string",
            "title": "Mailtemplate Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "mailtemplate_id": {
            "type": "string",
            "title": "Mailtemplate Id"
          },
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "is_editable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Editable"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "mailtype_id": {
            "type": "string",
            "title": "Mailtype Id"
          },
          "mailtype": {
            "type": "string",
            "title": "Mailtype"
          },
          "mailtype_en": {
            "type": "string",
            "title": "Mailtype En"
          },
          "default_mailtemplate_id": {
            "type": "string",
            "title": "Default Mailtemplate Id"
          },
          "app": {
            "$ref": "#/components/schemas/AppBase"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate_subject",
          "mailtemplate_body",
          "mailtemplate_name",
          "mailtemplate_name_en",
          "org_id",
          "mailtemplate_id",
          "app_id",
          "modified",
          "org",
          "mailtype_id",
          "mailtype",
          "mailtype_en",
          "default_mailtemplate_id",
          "app"
        ],
        "title": "AppProgramMailTemplate",
        "example": {
          "mailtemplate_body": "See English version below.\n-------------------------------\n{{ gender.greeting }},\n\n\nMit freundlichen Grüßen\n{{ sender_fullname }}\n\nTechnische Universität München\n{{ sender_school }}\n\n{{ sender_email }}\n{{ sender_www }}\n----------------------------------------\n{{ gender.greeting_en }}.\n\n\n-- \nYours sincerely\n{{ sender_fullname }}\n\nTechnical University of Munich\n{{ sender_school_en }}\n\n{{ sender_email }}\n{{ sender_www }}",
          "mailtemplate_from": "example@tum.de",
          "mailtemplate_id": "mailtype_templatename",
          "mailtemplate_name": "Bezeichnung des Mailtemplates (in Deutsch)",
          "mailtemplate_name_en": "Name of the Mail-Template (in English)",
          "mailtemplate_subject": "Betreff der Nachricht an {{ fullname }}",
          "org_id": 54071
        }
      },
      "AppProxy": {
        "properties": {
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "principal_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Principal Username",
            "examples": [
              "go42tum"
            ]
          },
          "proxy_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Proxy Username",
            "examples": [
              "go42tum"
            ]
          },
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "function": {
            "$ref": "#/components/schemas/AppFunction"
          },
          "principal": {
            "$ref": "#/components/schemas/PersonBaseInternal"
          },
          "proxy": {
            "$ref": "#/components/schemas/PersonBaseInternal"
          }
        },
        "type": "object",
        "required": [
          "principal_username",
          "proxy_username",
          "app_id",
          "function_id",
          "modified",
          "function",
          "principal",
          "proxy"
        ],
        "title": "AppProxy"
      },
      "AppProxyUpdate": {
        "properties": {
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          }
        },
        "type": "object",
        "title": "AppProxyUpdate"
      },
      "AppRoleBase": {
        "properties": {
          "role_id": {
            "type": "string",
            "maxLength": 6,
            "minLength": 1,
            "pattern": "^[-a-zA-Z0-9]{1,6}$",
            "title": "Role Id",
            "examples": [
              "clerk",
              "admin"
            ]
          },
          "role_name": {
            "type": "string",
            "title": "Role Name"
          },
          "role_name_en": {
            "type": "string",
            "title": "Role Name En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org_ids": {
            "items": {
              "type": "integer",
              "exclusiveMinimum": 0.0
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Org Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "role_id",
          "role_name",
          "role_name_en",
          "sorting",
          "modified"
        ],
        "title": "AppRoleBase"
      },
      "Application": {
        "properties": {
          "application_nr": {
            "type": "string",
            "title": "Application Nr"
          },
          "applicant_nr": {
            "type": "string",
            "title": "Applicant Nr"
          },
          "application_date": {
            "type": "string",
            "format": "date-time",
            "title": "Application Date"
          },
          "zulassung_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zulassung Date"
          },
          "enrolement_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enrolement Date"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramBase"
          },
          "application_id": {
            "type": "integer",
            "title": "Application Id"
          }
        },
        "type": "object",
        "required": [
          "application_nr",
          "applicant_nr",
          "application_date",
          "semester",
          "program",
          "application_id"
        ],
        "title": "Application"
      },
      "ApplicationBase": {
        "properties": {
          "application_nr": {
            "type": "string",
            "title": "Application Nr"
          },
          "applicant_nr": {
            "type": "string",
            "title": "Applicant Nr"
          },
          "application_date": {
            "type": "string",
            "format": "date-time",
            "title": "Application Date"
          },
          "zulassung_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zulassung Date"
          },
          "enrolement_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enrolement Date"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramBase"
          }
        },
        "type": "object",
        "required": [
          "application_nr",
          "applicant_nr",
          "application_date",
          "semester",
          "program"
        ],
        "title": "ApplicationBase"
      },
      "Body_eva_import_tans": {
        "properties": {
          "tan_csv": {
            "type": "string",
            "format": "binary",
            "title": "Tan Csv",
            "description": "CSV-export of TANs for the survey from Evasys (one TAN per line, no header)."
          }
        },
        "type": "object",
        "required": [
          "tan_csv"
        ],
        "title": "Body_eva_import_tans"
      },
      "Body_leh_convert_for_matching_import": {
        "properties": {
          "export_csv": {
            "type": "string",
            "format": "binary",
            "title": "Export Csv",
            "description": "CSV like \"Liste der Studierenden nach Fachsemester\" with columns MATRIKELNUMMER, STUDIENID and optional LV_NUMMER, LV_GRUPPE."
          }
        },
        "type": "object",
        "required": [
          "export_csv"
        ],
        "title": "Body_leh_convert_for_matching_import"
      },
      "Body_lufv_import_accounts": {
        "properties": {
          "sapexport": {
            "type": "string",
            "format": "binary",
            "title": "Sapexport",
            "description": "XLSX export from SAP."
          }
        },
        "type": "object",
        "required": [
          "sapexport"
        ],
        "title": "Body_lufv_import_accounts"
      },
      "Body_phd_upload_files": {
        "properties": {
          "file_in": {
            "type": "string",
            "format": "binary",
            "title": "File In",
            "description": "..."
          }
        },
        "type": "object",
        "required": [
          "file_in"
        ],
        "title": "Body_phd_upload_files"
      },
      "Body_rom_exam_prep": {
        "properties": {
          "candidate_csv": {
            "type": "string",
            "format": "binary",
            "title": "Candidate Csv",
            "description": "CSV export of exam candidates from TUMonline"
          },
          "advanced_config_json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Advanced Config Json",
            "description": "Advanced configuration options (force rooms, cover config).",
            "examples": [
              "",
              "{\n\t\"cover\": {\n\t\t\"remark\": \"- Bitte kennzeichnen Sie jedes abgegebene Blatt lesbar mit dem angegebenen Pseudonym. Ihre Arbeit kann dadurch anonym korrigiert werden.\n- Bitte halten Sie Ihren Studentenausweis oder einen amtlichen Lichtbildausweis bereit.\n- Bitte vor dem Abgeben der Arbeit alle Blätter inklusive Deckblatt in einen der Bögen Kanzleipapier einlegen.\",\n\t\t\"signature\": \"Unterschrift Studierende(r)\",\n\t\t\"problem_count\": 5\n\t\t}\n}",
              "{\n\t\"rooms\": [\n\t\t{\"room_code\": \"5101.EG.501\"},\n\t\t{\"room_code\": \"5101.EG.502\", \"seating_ids\": [2, 3]}\n\t\t]\n}"
            ]
          }
        },
        "type": "object",
        "required": [
          "candidate_csv"
        ],
        "title": "Body_rom_exam_prep"
      },
      "Body_store_attest": {
        "properties": {
          "attest_pdf": {
            "type": "string",
            "format": "binary",
            "title": "Attest Pdf",
            "description": "PDF of the certificate"
          }
        },
        "type": "object",
        "required": [
          "attest_pdf"
        ],
        "title": "Body_store_attest"
      },
      "Body_stp_nominate_for_scholarship_import": {
        "properties": {
          "rankingexport": {
            "type": "string",
            "format": "binary",
            "title": "Rankingexport",
            "description": "XLSX list of nominees including columns \"MATRIKEL\", \"STUDY_ID\", and \"SPO_VERSION\"."
          }
        },
        "type": "object",
        "required": [
          "rankingexport"
        ],
        "title": "Body_stp_nominate_for_scholarship_import"
      },
      "Body_ths_install_template_admin": {
        "properties": {
          "template_in": {
            "type": "string",
            "format": "binary",
            "title": "Template In",
            "description": "DocX template file."
          },
          "programs_in_json": {
            "type": "string",
            "title": "Programs In Json",
            "description": "List of programs, to install this template for",
            "default": "[\n  {\n    \"study_id\": \"163017051\",\n    \"spo_version\": \"20201\",\n    \"thesis_subtype\": 1\n  }\n]"
          }
        },
        "type": "object",
        "required": [
          "template_in"
        ],
        "title": "Body_ths_install_template_admin"
      },
      "Body_ths_upload_storage": {
        "properties": {
          "thesis_in": {
            "type": "string",
            "format": "binary",
            "title": "Thesis In",
            "description": "PDF or EML file."
          }
        },
        "type": "object",
        "required": [
          "thesis_in"
        ],
        "title": "Body_ths_upload_storage"
      },
      "Body_ths_upload_thesis": {
        "properties": {
          "thesis_in": {
            "type": "string",
            "format": "binary",
            "title": "Thesis In",
            "description": "PDF file of the thesis."
          }
        },
        "type": "object",
        "required": [
          "thesis_in"
        ],
        "title": "Body_ths_upload_thesis"
      },
      "Body_update_attest_pdf": {
        "properties": {
          "attest_pdf": {
            "type": "string",
            "format": "binary",
            "title": "Attest Pdf",
            "description": "PDF of the certificate"
          }
        },
        "type": "object",
        "required": [
          "attest_pdf"
        ],
        "title": "Body_update_attest_pdf"
      },
      "Building": {
        "properties": {
          "building_code": {
            "type": "string",
            "title": "Building Code"
          },
          "building_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Id"
          },
          "building_name": {
            "type": "string",
            "title": "Building Name"
          },
          "building_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Short"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "campus_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campus Id"
          },
          "campus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CampusBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "floors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Floors"
          }
        },
        "type": "object",
        "required": [
          "building_code",
          "building_name",
          "modified"
        ],
        "title": "Building"
      },
      "BuildingBase": {
        "properties": {
          "building_code": {
            "type": "string",
            "title": "Building Code"
          },
          "building_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Id"
          },
          "building_name": {
            "type": "string",
            "title": "Building Name"
          },
          "building_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Short"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          }
        },
        "type": "object",
        "required": [
          "building_code",
          "building_name"
        ],
        "title": "BuildingBase"
      },
      "BuildingBaseRoom": {
        "properties": {
          "building_code": {
            "type": "string",
            "title": "Building Code"
          },
          "building_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Id"
          },
          "building_name": {
            "type": "string",
            "title": "Building Name"
          },
          "building_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Short"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "campus_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campus Id"
          },
          "campus": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CampusBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "building_code",
          "building_name"
        ],
        "title": "BuildingBaseRoom"
      },
      "Campus": {
        "properties": {
          "campus": {
            "type": "string",
            "title": "Campus"
          },
          "campus_en": {
            "type": "string",
            "title": "Campus En"
          },
          "campusshort": {
            "type": "string",
            "title": "Campusshort"
          },
          "campusshort_en": {
            "type": "string",
            "title": "Campusshort En"
          },
          "campus_id": {
            "type": "integer",
            "title": "Campus Id"
          },
          "roomfinder_areas": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roomfinder Areas"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pcode"
          },
          "buildings": {
            "items": {
              "$ref": "#/components/schemas/BuildingBase"
            },
            "type": "array",
            "title": "Buildings"
          }
        },
        "type": "object",
        "required": [
          "campus",
          "campus_en",
          "campusshort",
          "campusshort_en",
          "campus_id",
          "buildings"
        ],
        "title": "Campus"
      },
      "CampusBase": {
        "properties": {
          "campus": {
            "type": "string",
            "title": "Campus"
          },
          "campus_en": {
            "type": "string",
            "title": "Campus En"
          },
          "campusshort": {
            "type": "string",
            "title": "Campusshort"
          },
          "campusshort_en": {
            "type": "string",
            "title": "Campusshort En"
          }
        },
        "type": "object",
        "required": [
          "campus",
          "campus_en",
          "campusshort",
          "campusshort_en"
        ],
        "title": "CampusBase"
      },
      "CamundaWorkflow": {
        "properties": {
          "reference": {
            "type": "string",
            "title": "Reference to the workflow."
          },
          "camunda_id": {
            "type": "string",
            "format": "uuid",
            "title": "Camunda Id"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "created": {
            "type": "string",
            "format": "date-time",
            "title": "Created"
          }
        },
        "type": "object",
        "required": [
          "reference",
          "camunda_id",
          "username",
          "created"
        ],
        "title": "CamundaWorkflow"
      },
      "CamundaWorkflowCreate": {
        "properties": {
          "reference": {
            "type": "string",
            "title": "Reference"
          }
        },
        "type": "object",
        "required": [
          "reference"
        ],
        "title": "CamundaWorkflowCreate"
      },
      "Ceremony": {
        "properties": {
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "ceremony_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ceremony Id"
          },
          "ceremony_title": {
            "type": "string",
            "title": "Ceremony Title"
          },
          "ceremony_title_en": {
            "type": "string",
            "title": "Ceremony Title En"
          },
          "ceremony_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description"
          },
          "ceremony_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description En"
          },
          "ceremony_feedback": {
            "type": "string",
            "title": "Ceremony Feedback"
          },
          "ceremony_feedback_en": {
            "type": "string",
            "title": "Ceremony Feedback En"
          },
          "ceremony_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Date"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "feedback_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Start"
          },
          "feedback_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Deadline"
          },
          "attendees_max": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Attendees Max"
          },
          "check_address": {
            "type": "boolean",
            "title": "Check Address"
          },
          "keep_attendee_data": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Attendee Data"
          },
          "keep_username": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Username"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "feedback_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback End"
          },
          "attendees_max_graduate": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Max Graduate"
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Count"
          },
          "feedback_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Count"
          },
          "invitations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CeremonyInvitationPersonBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invitations"
          }
        },
        "type": "object",
        "required": [
          "modified",
          "ceremony_id",
          "ceremony_title",
          "ceremony_title_en",
          "ceremony_feedback",
          "ceremony_feedback_en",
          "attendees_max",
          "check_address",
          "org"
        ],
        "title": "Ceremony"
      },
      "CeremonyBase": {
        "properties": {
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "ceremony_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ceremony Id"
          },
          "ceremony_title": {
            "type": "string",
            "title": "Ceremony Title"
          },
          "ceremony_title_en": {
            "type": "string",
            "title": "Ceremony Title En"
          },
          "ceremony_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description"
          },
          "ceremony_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description En"
          },
          "ceremony_feedback": {
            "type": "string",
            "title": "Ceremony Feedback"
          },
          "ceremony_feedback_en": {
            "type": "string",
            "title": "Ceremony Feedback En"
          },
          "ceremony_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Date"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "feedback_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Start"
          },
          "feedback_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Deadline"
          },
          "attendees_max": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Attendees Max"
          },
          "check_address": {
            "type": "boolean",
            "title": "Check Address"
          },
          "keep_attendee_data": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Attendee Data"
          },
          "keep_username": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Username"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "feedback_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback End"
          },
          "attendees_max_graduate": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Max Graduate"
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Count"
          },
          "feedback_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Count"
          }
        },
        "type": "object",
        "required": [
          "modified",
          "ceremony_id",
          "ceremony_title",
          "ceremony_title_en",
          "ceremony_feedback",
          "ceremony_feedback_en",
          "attendees_max",
          "check_address",
          "org"
        ],
        "title": "CeremonyBase"
      },
      "CeremonyBaseBase": {
        "properties": {
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "ceremony_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ceremony Id"
          },
          "ceremony_title": {
            "type": "string",
            "title": "Ceremony Title"
          },
          "ceremony_title_en": {
            "type": "string",
            "title": "Ceremony Title En"
          },
          "ceremony_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description"
          },
          "ceremony_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description En"
          },
          "ceremony_feedback": {
            "type": "string",
            "title": "Ceremony Feedback"
          },
          "ceremony_feedback_en": {
            "type": "string",
            "title": "Ceremony Feedback En"
          },
          "ceremony_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Date"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "feedback_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Start"
          },
          "feedback_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Deadline"
          },
          "attendees_max": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Attendees Max"
          },
          "check_address": {
            "type": "boolean",
            "title": "Check Address"
          },
          "keep_attendee_data": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Attendee Data"
          },
          "keep_username": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Username"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          }
        },
        "type": "object",
        "required": [
          "modified",
          "ceremony_id",
          "ceremony_title",
          "ceremony_title_en",
          "ceremony_feedback",
          "ceremony_feedback_en",
          "attendees_max",
          "check_address",
          "org"
        ],
        "title": "CeremonyBaseBase"
      },
      "CeremonyBaseUpdate": {
        "properties": {
          "ceremony_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Title"
          },
          "ceremony_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Title En"
          },
          "ceremony_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description"
          },
          "ceremony_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description En"
          },
          "ceremony_feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Feedback"
          },
          "ceremony_feedback_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Feedback En"
          },
          "ceremony_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Date"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "feedback_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Start"
          },
          "feedback_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Deadline"
          },
          "feedback_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback End"
          }
        },
        "type": "object",
        "title": "CeremonyBaseUpdate"
      },
      "CeremonyCreate": {
        "properties": {
          "ceremony_title": {
            "type": "string",
            "title": "Ceremony Title"
          },
          "ceremony_title_en": {
            "type": "string",
            "title": "Ceremony Title En"
          },
          "ceremony_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description"
          },
          "ceremony_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description En"
          },
          "ceremony_feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Feedback"
          },
          "ceremony_feedback_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Feedback En"
          },
          "ceremony_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Date"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "feedback_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Start"
          },
          "feedback_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Deadline"
          },
          "feedback_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback End"
          },
          "attendees_max": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Attendees Max"
          },
          "attendees_max_graduate": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Max Graduate"
          },
          "check_address": {
            "type": "boolean",
            "title": "Check Address",
            "default": false
          },
          "keep_attendee_data": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Attendee Data"
          },
          "keep_username": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Username"
          },
          "agent_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Usernames"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "ceremony_title",
          "ceremony_title_en",
          "attendees_max",
          "org_id"
        ],
        "title": "CeremonyCreate"
      },
      "CeremonyInvitation": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender_id": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender Id"
          },
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "invitation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Zufällige UUID dieser Einladung.",
            "title_en": "Random UUID of this invitation."
          },
          "savethedate_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum \"save the date\"-Nachricht",
            "title_en": "Date of \"save the date\" message"
          },
          "invitationemail_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum Einladungs-E-Mail",
            "title_en": "Date of invitation email"
          },
          "invitationletter_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum Einladungsbrief",
            "title_en": "Date of invitation letter"
          },
          "feedback_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der Rückmeldung.",
            "title_en": "Date of feedback."
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rückmeldung: Anzahl der teilnehmenden Personen.",
            "title_en": "Feedback: number of attending persons."
          },
          "apvinvitation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVInvitation"
              },
              {
                "type": "null"
              }
            ],
            "title": "Informationen zum Abschluss bei Abschluss-Feiern.",
            "title_en": "Information on the degree program, if degree ceremony."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "ceremony": {
            "$ref": "#/components/schemas/CeremonyBase"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "invitation_id",
          "modified",
          "ceremony",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "CeremonyInvitation"
      },
      "CeremonyInvitationBase": {
        "properties": {
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          }
        },
        "type": "object",
        "title": "CeremonyInvitationBase"
      },
      "CeremonyInvitationCreate": {
        "properties": {
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "gender_id"
        ],
        "title": "CeremonyInvitationCreate"
      },
      "CeremonyInvitationFeedback": {
        "properties": {
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "dssnat_system": {
            "type": "string",
            "title": "Dssnat System",
            "description": "Name of the Digital School Services system",
            "default": "NAT Webservices"
          },
          "dssnat_frontend_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Dssnat Frontend Url",
            "description": "Base URL of the frontend application",
            "default": "https://app.srv.nat.tum.de/"
          },
          "dssnat_backend_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Dssnat Backend Url",
            "description": "Base URL of the backend application (Swagger-UI)",
            "default": "https://api-2022.srv.nat.tum.de/"
          },
          "dssnat_support": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dssnat Support",
            "description": "Title on support contact",
            "default": "Digital School Services NAT"
          },
          "dssnat_support_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dssnat Support Url",
            "description": "Homepage of support contact",
            "default": "https://wiki.tum.de/display/dssnat"
          },
          "dssnat_support_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dssnat Support Email",
            "description": "Email of support contact",
            "default": "digitalservices@nat.tum.de"
          },
          "now": {
            "type": "string",
            "format": "date-time",
            "title": "Now",
            "description": "Current datetime",
            "default": "2025-06-05T14:39:52.519731+02:00"
          },
          "invitation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Zufällige UUID dieser Einladung.",
            "title_en": "Random UUID of this invitation."
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nachname oder Name",
            "title_en": "Last name or only name"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vorame",
            "title_en": "First or given name"
          },
          "gender": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonGenderBaseID"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender-ID.",
            "title_en": "Gender identity."
          },
          "feedback_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der Rückmeldung.",
            "title_en": "Date of feedback."
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rückmeldung: Anzahl der teilnehmenden Personen.",
            "title_en": "Feedback: number of attending persons."
          },
          "ceremony": {
            "$ref": "#/components/schemas/CeremonyBaseBase"
          },
          "apvinvitation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVInvitation"
              },
              {
                "type": "null"
              }
            ],
            "title": "Informationen zum Abschluss bei Abschluss-Feiern.",
            "title_en": "Information on the degree program, if degree ceremony."
          },
          "scholarshipinvitation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScholarshipInvitationBase"
              },
              {
                "type": "null"
              }
            ],
            "title": "Informationen zum Förderprogramm bei Nominierungen.",
            "title_en": "Information on the scholarship program, if nomination."
          }
        },
        "type": "object",
        "required": [
          "invitation_id",
          "ceremony"
        ],
        "title": "CeremonyInvitationFeedback"
      },
      "CeremonyInvitationPersonBase": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender_id": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender Id"
          },
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "invitation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Zufällige UUID dieser Einladung.",
            "title_en": "Random UUID of this invitation."
          },
          "savethedate_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum \"save the date\"-Nachricht",
            "title_en": "Date of \"save the date\" message"
          },
          "invitationemail_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum Einladungs-E-Mail",
            "title_en": "Date of invitation email"
          },
          "invitationletter_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versanddatum Einladungsbrief",
            "title_en": "Date of invitation letter"
          },
          "feedback_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der Rückmeldung.",
            "title_en": "Date of feedback."
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rückmeldung: Anzahl der teilnehmenden Personen.",
            "title_en": "Feedback: number of attending persons."
          },
          "apvinvitation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVInvitation"
              },
              {
                "type": "null"
              }
            ],
            "title": "Informationen zum Abschluss bei Abschluss-Feiern.",
            "title_en": "Information on the degree program, if degree ceremony."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "invitation_id",
          "modified",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "CeremonyInvitationPersonBase"
      },
      "CeremonyInvitationUpdate": {
        "properties": {
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "gender_id": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 3.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Gender Id"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          }
        },
        "type": "object",
        "title": "CeremonyInvitationUpdate"
      },
      "CeremonyUpdate": {
        "properties": {
          "ceremony_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Title"
          },
          "ceremony_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Title En"
          },
          "ceremony_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description"
          },
          "ceremony_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Description En"
          },
          "ceremony_feedback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Feedback"
          },
          "ceremony_feedback_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Feedback En"
          },
          "ceremony_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ceremony Date"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "feedback_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Start"
          },
          "feedback_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Deadline"
          },
          "feedback_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback End"
          },
          "attendees_max": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Max"
          },
          "attendees_max_graduate": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Max Graduate"
          },
          "check_address": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Check Address"
          },
          "keep_attendee_data": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Attendee Data"
          },
          "keep_username": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Keep Username"
          },
          "agent_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Usernames"
          }
        },
        "type": "object",
        "title": "CeremonyUpdate"
      },
      "ComponentStatus": {
        "properties": {
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "ComponentStatus"
      },
      "Country": {
        "properties": {
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "country_en": {
            "type": "string",
            "title": "Country En"
          },
          "country_id_docgs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Id Docgs"
          }
        },
        "type": "object",
        "required": [
          "country_code",
          "country",
          "country_en"
        ],
        "title": "Country"
      },
      "CountryBase": {
        "properties": {
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "country": {
            "type": "string",
            "title": "Country"
          },
          "country_en": {
            "type": "string",
            "title": "Country En"
          }
        },
        "type": "object",
        "required": [
          "country_code",
          "country",
          "country_en"
        ],
        "title": "CountryBase"
      },
      "CourseActivity": {
        "properties": {
          "activity_id": {
            "type": "string",
            "title": "Activity Id"
          },
          "activity_name": {
            "type": "string",
            "title": "Activity Name"
          },
          "activity_name_en": {
            "type": "string",
            "title": "Activity Name En"
          }
        },
        "type": "object",
        "required": [
          "activity_id",
          "activity_name",
          "activity_name_en"
        ],
        "title": "CourseActivity"
      },
      "CourseBase": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "tumonline_url"
        ],
        "title": "CourseBase"
      },
      "CourseBaseLUFV": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "participants": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participants"
          },
          "lecturer_count": {
            "type": "integer",
            "title": "Lecturer Count"
          },
          "group_count": {
            "type": "integer",
            "title": "Group Count"
          },
          "coordinator_only": {
            "type": "boolean",
            "title": "Coordinator Only",
            "default": false
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "org",
          "lecturer_count",
          "group_count",
          "tumonline_url"
        ],
        "title": "CourseBaseLUFV"
      },
      "CourseBaseMoodle": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "elearning_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Elearning Link"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "tumonline_url"
        ],
        "title": "CourseBaseMoodle"
      },
      "CourseBaseOrg": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "org",
          "tumonline_url"
        ],
        "title": "CourseBaseOrg"
      },
      "CourseEventBase": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "eventseries_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eventseries Id"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End"
          },
          "topic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "eventtype": {
            "$ref": "#/components/schemas/EventType"
          },
          "eventstatus": {
            "$ref": "#/components/schemas/EventStatus"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomEssential"
              },
              {
                "type": "null"
              }
            ]
          },
          "lecturers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBasePersonID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturers"
          },
          "links": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/LinkBase"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "url_tumonline": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url Tumonline",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "start",
          "end",
          "eventtype",
          "eventstatus",
          "url_tumonline"
        ],
        "title": "CourseEventBase"
      },
      "CourseEventBaseHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/CourseEventCourseBase"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "CourseEventBaseHits"
      },
      "CourseEventCourseBase": {
        "properties": {
          "event_id": {
            "type": "integer",
            "title": "Event Id"
          },
          "eventseries_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eventseries Id"
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End"
          },
          "topic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Topic"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "eventtype": {
            "$ref": "#/components/schemas/EventType"
          },
          "eventstatus": {
            "$ref": "#/components/schemas/EventStatus"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomEssential"
              },
              {
                "type": "null"
              }
            ]
          },
          "lecturers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBasePersonID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturers"
          },
          "links": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/LinkBase"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "course": {
            "$ref": "#/components/schemas/CourseBaseOrg"
          },
          "url_tumonline": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url Tumonline",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "event_id",
          "start",
          "end",
          "eventtype",
          "eventstatus",
          "course",
          "url_tumonline"
        ],
        "title": "CourseEventCourseBase"
      },
      "CourseEventLSF": {
        "properties": {
          "lsf_event_id": {
            "type": "integer",
            "title": "Lsf Event Id"
          },
          "lsf_url": {
            "type": "string",
            "title": "Lsf Url"
          },
          "group_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Group Name"
          },
          "start_day": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Day"
          },
          "end_day": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Day"
          },
          "weekday": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Weekday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "room_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Identifier"
          },
          "canceled_days": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Canceled Days"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "rythm": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventRythmLSF"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "lsf_event_id",
          "lsf_url",
          "modified"
        ],
        "title": "CourseEventLSF"
      },
      "CourseFull": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "instruction_languages": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Instruction Languages"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "teachingmethod": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teachingmethod"
          },
          "teachingmethod_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teachingmethod En"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "note_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note En"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "groups": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseGroupEvents"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          },
          "exams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Exam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exams"
          },
          "modules": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modules"
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseRole"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "semester",
          "modified_tumonline",
          "activity",
          "org",
          "ghk",
          "instruction_languages",
          "tumonline_url"
        ],
        "title": "CourseFull"
      },
      "CourseGroupEvents": {
        "properties": {
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "group_name": {
            "type": "string",
            "title": "Group Name"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseEventBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          }
        },
        "type": "object",
        "required": [
          "group_id",
          "group_name"
        ],
        "title": "CourseGroupEvents"
      },
      "CourseHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/CourseReal"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "CourseHits"
      },
      "CourseLSF": {
        "properties": {
          "lsf_course_id": {
            "type": "integer",
            "title": "Lsf Course Id"
          },
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "ghk": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ghk"
          },
          "course_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name"
          },
          "activity_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Name"
          },
          "lsf_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lsf Url"
          },
          "hoursperweek": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek"
          },
          "instruction_languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instruction Languages"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "persons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonLSF"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Persons"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseEventLSF"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBaseLSF"
          }
        },
        "type": "object",
        "required": [
          "lsf_course_id",
          "course_code",
          "modified",
          "semester"
        ],
        "title": "CourseLSF"
      },
      "CourseLSFUpdate": {
        "properties": {
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          }
        },
        "type": "object",
        "required": [
          "ghk"
        ],
        "title": "CourseLSFUpdate"
      },
      "CourseLinkType": {
        "properties": {
          "course_link_title": {
            "type": "string",
            "title": "Course Link Title"
          },
          "course_link_title_en": {
            "type": "string",
            "title": "Course Link Title En"
          },
          "course_link_id": {
            "type": "integer",
            "title": "Course Link Id"
          }
        },
        "type": "object",
        "required": [
          "course_link_title",
          "course_link_title_en",
          "course_link_id"
        ],
        "title": "CourseLinkType"
      },
      "CourseReal": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "instruction_languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instruction Languages"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "teachingmethod": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teachingmethod"
          },
          "teachingmethod_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teachingmethod En"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "note_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note En"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "ghk",
          "tumonline_url"
        ],
        "title": "CourseReal"
      },
      "CourseRealGroupEvents": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "instruction_languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instruction Languages"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "teachingmethod": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teachingmethod"
          },
          "teachingmethod_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teachingmethod En"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "note_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note En"
          },
          "groups": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseGroupEvents"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Groups"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "ghk",
          "tumonline_url"
        ],
        "title": "CourseRealGroupEvents"
      },
      "CourseRole": {
        "properties": {
          "role_id": {
            "type": "string",
            "title": "Role Id"
          },
          "role_title": {
            "type": "string",
            "title": "Role Title"
          },
          "role_title_en": {
            "type": "string",
            "title": "Role Title En"
          },
          "persons": {
            "items": {
              "$ref": "#/components/schemas/PersonBasePersonID"
            },
            "type": "array",
            "title": "Persons"
          }
        },
        "type": "object",
        "required": [
          "role_id",
          "role_title",
          "role_title_en",
          "persons"
        ],
        "title": "CourseRole"
      },
      "CourseVcard": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterEssential"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "instruction_languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instruction Languages"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "semester",
          "modified_tumonline",
          "activity",
          "ghk",
          "tumonline_url"
        ],
        "title": "CourseVcard"
      },
      "CourseVirtual": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "exam_persons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBasePersonID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Persons"
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "semester",
          "modified_tumonline",
          "ghk",
          "org"
        ],
        "title": "CourseVirtual"
      },
      "CourseVirtualBase": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "semester",
          "modified_tumonline",
          "ghk"
        ],
        "title": "CourseVirtualBase"
      },
      "CourseVirtualCheck": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterIDs"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "ghk": {
            "type": "integer",
            "title": "Ghk"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "org": {
            "$ref": "#/components/schemas/OrgEssential"
          },
          "exam_persons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Persons"
          },
          "course_persons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Persons"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "semester",
          "modified_tumonline",
          "ghk",
          "org",
          "tumonline_url"
        ],
        "title": "CourseVirtualCheck"
      },
      "Credentials": {
        "properties": {
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "format": "password",
            "title": "Password",
            "writeOnly": true
          },
          "password2": {
            "type": "string",
            "format": "password",
            "title": "Password2",
            "writeOnly": true
          },
          "app": {
            "type": "string",
            "title": "App"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password",
          "password2",
          "app",
          "org_id"
        ],
        "title": "Credentials"
      },
      "CreditScoreOut": {
        "properties": {
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total"
          }
        },
        "type": "object",
        "title": "CreditScoreOut"
      },
      "DSBProcessing": {
        "properties": {
          "dsms_id": {
            "type": "integer",
            "title": "ID in DSMS system."
          },
          "processing": {
            "type": "string",
            "title": "Title of the processing in German."
          },
          "processing_en": {
            "type": "string",
            "title": "Title of the processing in English."
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Beginning of GDPR processing."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End of GDPR processing procedure."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in English."
          },
          "legalbase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in German."
          },
          "legalbase_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in English."
          },
          "deletion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in German."
          },
          "deletion_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in English."
          },
          "affected": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in German."
          },
          "affected_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in English."
          },
          "responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "app": {
            "$ref": "#/components/schemas/AppBase"
          }
        },
        "type": "object",
        "required": [
          "dsms_id",
          "processing",
          "processing_en",
          "app"
        ],
        "title": "DSBProcessing"
      },
      "DSBProcessingCreate": {
        "properties": {
          "dsms_id": {
            "type": "integer",
            "title": "ID in DSMS system."
          },
          "processing": {
            "type": "string",
            "title": "Title of the processing in German."
          },
          "processing_en": {
            "type": "string",
            "title": "Title of the processing in English."
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Beginning of GDPR processing."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End of GDPR processing procedure."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in English."
          },
          "legalbase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in German."
          },
          "legalbase_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in English."
          },
          "deletion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in German."
          },
          "deletion_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in English."
          },
          "affected": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in German."
          },
          "affected_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in English."
          },
          "responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Responsible Username"
          }
        },
        "type": "object",
        "required": [
          "dsms_id",
          "processing",
          "processing_en"
        ],
        "title": "DSBProcessingCreate"
      },
      "DSBProcessingQueryAnswer": {
        "properties": {
          "dsms_id": {
            "type": "integer",
            "title": "ID in DSMS system."
          },
          "processing": {
            "type": "string",
            "title": "Title of the processing in German."
          },
          "processing_en": {
            "type": "string",
            "title": "Title of the processing in English."
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Beginning of GDPR processing."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End of GDPR processing procedure."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in English."
          },
          "legalbase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in German."
          },
          "legalbase_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in English."
          },
          "deletion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in German."
          },
          "deletion_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in English."
          },
          "affected": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in German."
          },
          "affected_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in English."
          },
          "responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "app": {
            "$ref": "#/components/schemas/AppBase"
          },
          "entries": {
            "items": {},
            "type": "array",
            "title": "Entries",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "dsms_id",
          "processing",
          "processing_en",
          "app"
        ],
        "title": "DSBProcessingQueryAnswer"
      },
      "DSBProcessingUpdate": {
        "properties": {
          "dsms_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dsms Id"
          },
          "processing": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing"
          },
          "processing_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Beginning of GDPR processing."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End of GDPR processing procedure."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the processing in English."
          },
          "legalbase": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in German."
          },
          "legalbase_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the legal base for the processing in English."
          },
          "deletion": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in German."
          },
          "deletion_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the deletion rules in the processing in English."
          },
          "affected": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in German."
          },
          "affected_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the persons affected by the processing in English."
          },
          "responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "TUM username of the responsible person (kv99kvk)."
          }
        },
        "type": "object",
        "title": "DSBProcessingUpdate"
      },
      "DSBQueryAnswer": {
        "properties": {
          "processings": {
            "items": {
              "$ref": "#/components/schemas/DSBProcessingQueryAnswer"
            },
            "type": "array",
            "title": "List of processings with entries",
            "default": []
          }
        },
        "type": "object",
        "title": "DSBQueryAnswer"
      },
      "DSSStatus": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "backend": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "worker": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "queue": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "database": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "connectum": {
            "$ref": "#/components/schemas/ComponentStatus"
          },
          "selenium": {
            "$ref": "#/components/schemas/ComponentStatus"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "backend",
          "worker",
          "queue",
          "database",
          "connectum",
          "selenium"
        ],
        "title": "DSSStatus"
      },
      "DSSStatusBase": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "backend": {
            "$ref": "#/components/schemas/ComponentStatus"
          }
        },
        "type": "object",
        "required": [
          "timestamp",
          "backend"
        ],
        "title": "DSSStatusBase"
      },
      "DegreeBase": {
        "properties": {
          "degree_type_id": {
            "type": "integer",
            "title": "Degree Type Id"
          },
          "degree_type_name": {
            "type": "string",
            "title": "Degree Type Name"
          },
          "degree_type_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Degree Type Short"
          },
          "program_type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Type Name"
          },
          "program_type_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Type Name En"
          }
        },
        "type": "object",
        "required": [
          "degree_type_id",
          "degree_type_name"
        ],
        "title": "DegreeBase"
      },
      "Detail": {
        "properties": {
          "detail": {
            "type": "string",
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "detail"
        ],
        "title": "Detail"
      },
      "Email": {
        "properties": {
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "frommail": {
            "type": "string",
            "format": "email",
            "title": "Frommail"
          },
          "additional_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Headers"
          },
          "to": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              }
            ],
            "title": "To"
          },
          "cc": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cc"
          },
          "bcc": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bcc"
          },
          "disable_encryption": {
            "type": "boolean",
            "title": "Disable Encryption",
            "default": false
          },
          "local_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Reference"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "body",
          "frommail",
          "to"
        ],
        "title": "Email"
      },
      "EmailJSONForm": {
        "properties": {
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "frommail": {
            "type": "string",
            "format": "email",
            "title": "Frommail"
          },
          "additional_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Headers"
          },
          "to": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              }
            ],
            "title": "To"
          },
          "cc": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cc"
          },
          "bcc": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bcc"
          },
          "disable_encryption": {
            "type": "boolean",
            "title": "Disable Encryption",
            "default": false
          },
          "local_reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Reference"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "body",
          "frommail",
          "to"
        ],
        "title": "EmailJSONForm"
      },
      "EmailNoToOptFrom": {
        "properties": {
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "frommail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frommail"
          },
          "additional_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Headers"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "body"
        ],
        "title": "EmailNoToOptFrom"
      },
      "EvasysCourseBase": {
        "properties": {
          "expires": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date this entry expires. The associated CourseStudent elements will be deleted after this date."
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, this survey is assigned to."
          },
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "UUID of the task obtaining the registered students."
          },
          "course_id": {
            "type": "integer",
            "title": "ID of the course."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "course": {
            "$ref": "#/components/schemas/CourseBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "task_id",
          "course_id",
          "modified",
          "course",
          "org"
        ],
        "title": "EvasysCourseBase"
      },
      "EvasysCourseStudents": {
        "properties": {
          "expires": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date this entry expires. The associated CourseStudent elements will be deleted after this date."
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, this survey is assigned to."
          },
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "UUID of the task obtaining the registered students."
          },
          "course_id": {
            "type": "integer",
            "title": "ID of the course."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "course": {
            "$ref": "#/components/schemas/CourseBase",
            "title": "Course data."
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase",
            "title": "Org this survey is assigned to."
          },
          "student_emails": {
            "items": {
              "type": "string",
              "format": "email"
            },
            "type": "array",
            "title": "Student Emails"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "task_id",
          "course_id",
          "modified",
          "course",
          "org",
          "student_emails"
        ],
        "title": "EvasysCourseStudents"
      },
      "EvasysInvite": {
        "properties": {
          "survey_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "ID of the survey(s), the recipients should be invited to."
          },
          "deadline": {
            "type": "string",
            "format": "date-time",
            "title": "Deadline for the survey response."
          },
          "mailtemplate": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvasysInviteMailtemplate"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mail template to be used (defaults to mailtemplate ID invitation_default)."
          },
          "recipients": {
            "items": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "email"
                },
                {
                  "$ref": "#/components/schemas/PersonBase-Input"
                }
              ]
            },
            "type": "array",
            "title": "List of recipients."
          },
          "report_to": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Send report to."
          },
          "report_includes_addresses": {
            "type": "boolean",
            "title": "Include email addresses in the report.",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "survey_id",
          "deadline",
          "recipients"
        ],
        "title": "EvasysInvite"
      },
      "EvasysInviteMailtemplate": {
        "properties": {
          "frommail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frommail"
          },
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "body"
        ],
        "title": "EvasysInviteMailtemplate"
      },
      "EvasysSurveyBase": {
        "properties": {
          "survey": {
            "type": "string",
            "title": "Title of the survey in German."
          },
          "survey_en": {
            "type": "string",
            "title": "Title of the survey in English."
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, this survey is assigned to."
          },
          "survey_id": {
            "type": "string",
            "format": "uuid",
            "title": "Survey Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "tan_count": {
            "type": "integer",
            "title": "Tan Count"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          }
        },
        "type": "object",
        "required": [
          "survey",
          "survey_en",
          "org_id",
          "survey_id",
          "modified",
          "tan_count",
          "org"
        ],
        "title": "EvasysSurveyBase"
      },
      "EvasysSurveyCreate": {
        "properties": {
          "survey": {
            "type": "string",
            "title": "Survey"
          },
          "survey_en": {
            "type": "string",
            "title": "Survey En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "survey",
          "survey_en",
          "org_id"
        ],
        "title": "EvasysSurveyCreate"
      },
      "EvasysSurveyUpdate": {
        "properties": {
          "survey": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Survey"
          },
          "survey_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Survey En"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          }
        },
        "type": "object",
        "title": "EvasysSurveyUpdate"
      },
      "EvasysTAN": {
        "properties": {
          "survey_id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the survey this TAN was issued for."
          },
          "tan": {
            "type": "string",
            "title": "TAN for the survey."
          },
          "generated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of generation of this TAN."
          },
          "survey": {
            "$ref": "#/components/schemas/EvasysSurveyBase"
          }
        },
        "type": "object",
        "required": [
          "survey_id",
          "tan",
          "survey"
        ],
        "title": "EvasysTAN"
      },
      "EvasysTANCreate": {
        "properties": {
          "survey_id": {
            "type": "string",
            "format": "uuid",
            "title": "Survey Id"
          },
          "tan": {
            "type": "string",
            "title": "Tan"
          },
          "generated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated"
          }
        },
        "type": "object",
        "required": [
          "survey_id",
          "tan"
        ],
        "title": "EvasysTANCreate"
      },
      "EventRythmLSF": {
        "properties": {
          "rythm_id": {
            "type": "string",
            "title": "Rythm Id"
          },
          "rythm": {
            "type": "string",
            "title": "Rythm"
          },
          "rythm_en": {
            "type": "string",
            "title": "Rythm En"
          },
          "interval": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval"
          }
        },
        "type": "object",
        "required": [
          "rythm_id",
          "rythm",
          "rythm_en"
        ],
        "title": "EventRythmLSF"
      },
      "EventStatus": {
        "properties": {
          "eventstatus_id": {
            "type": "string",
            "title": "ID of event status."
          },
          "eventstatus": {
            "type": "string",
            "title": "Event status in German."
          },
          "eventstatus_en": {
            "type": "string",
            "title": "Event status in English."
          },
          "active": {
            "type": "boolean",
            "title": "Active"
          },
          "confirmed": {
            "type": "boolean",
            "title": "Confirmed"
          },
          "canceled": {
            "type": "boolean",
            "title": "Canceled"
          }
        },
        "type": "object",
        "required": [
          "eventstatus_id",
          "eventstatus",
          "eventstatus_en",
          "active",
          "confirmed",
          "canceled"
        ],
        "title": "EventStatus"
      },
      "EventType": {
        "properties": {
          "eventtype_id": {
            "type": "string",
            "title": "ID of event type."
          },
          "eventtype": {
            "type": "string",
            "title": "Event type in German."
          },
          "eventtype_en": {
            "type": "string",
            "title": "Event type in English."
          }
        },
        "type": "object",
        "required": [
          "eventtype_id",
          "eventtype",
          "eventtype_en"
        ],
        "title": "EventType"
      },
      "Exam": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "exam_id": {
            "type": "integer",
            "title": "Exam Id"
          },
          "register_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Start"
          },
          "register_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register End"
          },
          "deregister_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deregister End"
          },
          "exam_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Start"
          },
          "exam_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam End"
          },
          "exammode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExamModeBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "rooms": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RoomEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rooms"
          },
          "register_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Register Url",
            "readOnly": true
          },
          "register_url_en": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Register Url En",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "exam_id",
          "register_url",
          "register_url_en"
        ],
        "title": "Exam"
      },
      "ExamCounts": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "exam_id": {
            "type": "integer",
            "title": "Exam Id"
          },
          "register_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Start"
          },
          "register_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register End"
          },
          "deregister_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deregister End"
          },
          "exam_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Start"
          },
          "exam_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam End"
          },
          "exammode": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExamModeBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "rooms": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RoomEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rooms"
          },
          "available_examseats": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Available Examseats"
          },
          "all_seatings_available": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "All Seatings Available"
          },
          "smallest_examseat_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Smallest Examseat Count"
          },
          "is_visible": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Visible"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "graded_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Graded Count"
          },
          "examiners_not_lecturer": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiners Not Lecturer"
          },
          "examiners_not_professor": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiners Not Professor"
          },
          "modules": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modules"
          },
          "warning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning"
          },
          "register_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Register Url",
            "readOnly": true
          },
          "register_url_en": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Register Url En",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "exam_id",
          "register_url",
          "register_url_en"
        ],
        "title": "ExamCounts"
      },
      "ExamCreateBase": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "exam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Date"
          },
          "register_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Start"
          },
          "register_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register End"
          },
          "deregister_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deregister End"
          },
          "pvadmin_flag": {
            "type": "boolean",
            "title": "Pvadmin Flag",
            "default": true
          },
          "preliminary": {
            "type": "boolean",
            "title": "Preliminary",
            "default": false
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "org_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Org Id"
          },
          "examiner_internal_person_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner Internal Person Id"
          },
          "additional_internal_person_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Internal Person Ids"
          },
          "gradingscale_id": {
            "type": "integer",
            "title": "Gradingscale Id",
            "default": 30
          },
          "exammode_id": {
            "type": "integer",
            "title": "Exammode Id"
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "semester_key",
          "org_id",
          "exammode_id"
        ],
        "title": "ExamCreateBase"
      },
      "ExamCreateInfo": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "exam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Date"
          },
          "register_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Start"
          },
          "register_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register End"
          },
          "deregister_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deregister End"
          },
          "pvadmin_flag": {
            "type": "boolean",
            "title": "Pvadmin Flag",
            "default": true
          },
          "preliminary": {
            "type": "boolean",
            "title": "Preliminary",
            "default": false
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subtitle"
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "org_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Org Id"
          },
          "examiner_internal_person_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner Internal Person Id"
          },
          "additional_internal_person_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Internal Person Ids"
          },
          "gradingscale_id": {
            "type": "integer",
            "title": "Gradingscale Id",
            "default": 30
          },
          "exammode_id": {
            "type": "integer",
            "title": "Exammode Id"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "semester_key",
          "org_id",
          "exammode_id"
        ],
        "title": "ExamCreateInfo"
      },
      "ExamHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/Exam"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "ExamHits"
      },
      "ExamModeBase": {
        "properties": {
          "exammode_short": {
            "type": "string",
            "title": "Exammode Short"
          },
          "exammode": {
            "type": "string",
            "title": "Exammode"
          },
          "exammode_en": {
            "type": "string",
            "title": "Exammode En"
          }
        },
        "type": "object",
        "required": [
          "exammode_short",
          "exammode",
          "exammode_en"
        ],
        "title": "ExamModeBase"
      },
      "ExamRegisterStudent": {
        "properties": {
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "study_id": {
            "type": "string",
            "maxLength": 12,
            "minLength": 9,
            "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
            "title": "Study Id",
            "examples": [
              "163017051",
              "163016066",
              "163016067",
              "163016068",
              "163016069"
            ]
          },
          "exam_date": {
            "type": "string",
            "format": "date",
            "title": "Exam Date"
          },
          "grade": {
            "type": "string",
            "enum": [
              "1,0 sehr gut",
              "1,3 sehr gut",
              "1,7 gut",
              "2,0 gut",
              "2,3 gut",
              "2,7 befriedigend",
              "3,0 befriedigend",
              "3,3 befriedigend",
              "3,7 ausreichend",
              "4,0 ausreichend",
              "4,3 nicht ausreichend",
              "4,7 nicht ausreichend",
              "5,0 nicht ausreichend",
              "B bestanden",
              "N nicht bestanden",
              "U Ungültig/Täuschung",
              "X Nicht erschienen"
            ],
            "title": "Grade"
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "study_id",
          "exam_date",
          "grade"
        ],
        "title": "ExamRegisterStudent"
      },
      "ExamRegistered": {
        "properties": {
          "exam_id": {
            "type": "integer",
            "title": "Exam Id"
          },
          "exam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Date"
          },
          "course": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CourseVirtualBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "exam_id"
        ],
        "title": "ExamRegistered"
      },
      "FacultyData": {
        "properties": {
          "datasets": {
            "items": {
              "$ref": "#/components/schemas/FacultyDataset"
            },
            "type": "array",
            "title": "Datasets"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Labels"
          }
        },
        "type": "object",
        "required": [
          "datasets",
          "labels"
        ],
        "title": "FacultyData"
      },
      "FacultyDataset": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "order": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Order"
          },
          "backgroundColor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Backgroundcolor"
          },
          "data": {
            "items": {
              "type": "number"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "label",
          "data"
        ],
        "title": "FacultyDataset"
      },
      "FacultySimulation": {
        "properties": {
          "professors": {
            "$ref": "#/components/schemas/FacultyData"
          },
          "ressources": {
            "$ref": "#/components/schemas/FacultyData"
          }
        },
        "type": "object",
        "required": [
          "professors",
          "ressources"
        ],
        "title": "FacultySimulation"
      },
      "FacultySimulationConfig": {
        "properties": {
          "appointments_per_year": {
            "items": {
              "$ref": "#/components/schemas/FacultySimulationConfigAppointment"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 3,
            "title": "Appointments Per Year",
            "default": [
              {
                "count": 0.2,
                "years_until_retirement": 35
              },
              {
                "count": 0.2,
                "years_until_retirement": 30
              },
              {
                "count": 1.4,
                "years_until_retirement": 20
              }
            ]
          },
          "tt_years": {
            "type": "integer",
            "maximum": 60.0,
            "minimum": 0.0,
            "title": "Tt Years",
            "default": 5
          },
          "tt_tenure_probability": {
            "type": "number",
            "maximum": 1.0,
            "minimum": 0.0,
            "title": "Tt Tenure Probability",
            "default": 0.7
          },
          "associate_promotion_probabilites": {
            "additionalProperties": {
              "type": "number",
              "maximum": 1.0,
              "minimum": 0.0
            },
            "type": "object",
            "title": "Associate Promotion Probabilites",
            "default": {
              "5": 0.7,
              "10": 0.73,
              "20": 0.77,
              "25": 0.8
            }
          },
          "ressource_scaling": {
            "items": {
              "type": "number",
              "minimum": 0.0
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 3,
            "title": "Ressource Scaling",
            "default": [
              3,
              1.5,
              1
            ]
          }
        },
        "type": "object",
        "title": "FacultySimulationConfig"
      },
      "FacultySimulationConfigAppointment": {
        "properties": {
          "count": {
            "type": "number",
            "title": "Count"
          },
          "years_until_retirement": {
            "type": "integer",
            "title": "Years Until Retirement"
          }
        },
        "type": "object",
        "required": [
          "count",
          "years_until_retirement"
        ],
        "title": "FacultySimulationConfigAppointment"
      },
      "FobjectCreate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "title_en": {
            "type": "string",
            "title": "Title En"
          },
          "default_node_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Node Types"
          },
          "node_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Node Types",
            "default": []
          },
          "sets": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FobjectMengeDynamicTemplate"
                    },
                    {
                      "$ref": "#/components/schemas/FobjectMengeManualTemplate"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sets"
          },
          "fobjects": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FobjectGroupTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobjects"
          },
          "gather_sets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FobjectGatherSets"
              },
              {
                "type": "null"
              }
            ]
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "title",
          "title_en",
          "org_id"
        ],
        "title": "FobjectCreate"
      },
      "FobjectGatherSets": {
        "properties": {
          "org_code": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Code",
            "description": "Dictionary with org_code patterns as keys and the set_names as values that shall be gathered from child orgs to be available in fobject associations."
          },
          "org_type": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Type",
            "description": "Dictionary with org_types as keys and the set_names as values that shall be gathered from child orgs to be available in fobject associations."
          }
        },
        "type": "object",
        "title": "FobjectGatherSets"
      },
      "FobjectGroupTemplate": {
        "properties": {
          "fobject_short": {
            "type": "string",
            "maxLength": 9,
            "minLength": 3,
            "title": "Fobject Short"
          },
          "fobject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobject"
          },
          "fobject_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobject En"
          },
          "fobject_type": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "string"
              }
            ],
            "title": "Fobject Type",
            "default": "GV"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "fobject_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobject Description"
          },
          "fobject_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobject Description En"
          },
          "fobject_contact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobject Contact"
          },
          "associations": {
            "additionalProperties": {
              "additionalProperties": {
                "items": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              "propertyNames": {
                "enum": [
                  "plus",
                  "minus"
                ]
              },
              "type": "object"
            },
            "propertyNames": {
              "enum": [
                "MEM",
                "MOF",
                "DLV",
                "OWN",
                "SAS"
              ]
            },
            "type": "object",
            "title": "Associations"
          },
          "gather_sets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FobjectGatherSets"
              },
              {
                "type": "null"
              }
            ]
          },
          "gather_org_parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gather Org Parent"
          }
        },
        "type": "object",
        "required": [
          "fobject_short",
          "associations"
        ],
        "title": "FobjectGroupTemplate",
        "example": {
          "associations": {
            "MEM": {
              "minus": [
                "TEST_MINUS"
              ],
              "plus": [
                "MEMBERS"
              ]
            }
          },
          "fobject": "Test-Objekt",
          "fobject_contact": "contact",
          "fobject_description": "Beschreibung des Objekts",
          "fobject_description_en": "Description of the object",
          "fobject_en": "Test Object",
          "fobject_short": "TEST",
          "fobject_type": "GV",
          "gather_sets": {
            "org_code": {
              "TUS[0-9]RGE": [
                "ALLG_AMT"
              ]
            },
            "org_type": {
              "Prodekan": [
                "ALLG_AMT"
              ]
            }
          },
          "valid_from": "2022-10-28",
          "valid_through": "2022-10-28"
        }
      },
      "FobjectMengeDynamicTemplate": {
        "properties": {
          "title_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Short"
          },
          "query_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query Short"
          },
          "query": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Query"
          },
          "hierarchical": {
            "type": "boolean",
            "title": "Hierarchical",
            "default": false
          },
          "interval": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "Manuell",
                  "15 min - viertelstündlich",
                  "30 min - halbstündlich",
                  "1 h - stündlich",
                  "3 h - alle drei Stunden",
                  "6 h - alle sechs Stunden",
                  "12 h - alle zwölf Stunden",
                  "24 h - täglich"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval"
          },
          "next_run": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Run"
          }
        },
        "type": "object",
        "title": "FobjectMengeDynamicTemplate"
      },
      "FobjectMengeManualCreate": {
        "properties": {
          "title_short": {
            "type": "string",
            "title": "Title Short"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usernames"
          }
        },
        "type": "object",
        "required": [
          "title_short",
          "org_id"
        ],
        "title": "FobjectMengeManualCreate"
      },
      "FobjectMengeManualTemplate": {
        "properties": {
          "title_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Short"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          }
        },
        "type": "object",
        "title": "FobjectMengeManualTemplate"
      },
      "FobjectMengeManualUpdate": {
        "properties": {
          "usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usernames"
          },
          "remove_existing": {
            "type": "boolean",
            "title": "Remove Existing",
            "default": false
          }
        },
        "type": "object",
        "title": "FobjectMengeManualUpdate"
      },
      "FobjectMengeOperationalCreate": {
        "properties": {
          "title_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Short"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "gather_sets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FobjectGatherSets"
              },
              {
                "type": "null"
              }
            ]
          },
          "gather_org_parent": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gather Org Parent"
          },
          "sets": {
            "items": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "string"
                }
              ]
            },
            "type": "array",
            "title": "Sets"
          },
          "operator": {
            "type": "string",
            "enum": [
              "UNION",
              "INTERSECT",
              "MINUS"
            ],
            "title": "Operator",
            "default": "INTERSECT"
          },
          "sets2": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "type": "integer"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sets2"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "sets",
          "org_id"
        ],
        "title": "FobjectMengeOperationalCreate"
      },
      "FobjectTemplate": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "title_en": {
            "type": "string",
            "title": "Title En"
          },
          "default_node_types": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Node Types"
          },
          "node_types": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Node Types",
            "default": []
          },
          "sets": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/FobjectMengeDynamicTemplate"
                    },
                    {
                      "$ref": "#/components/schemas/FobjectMengeManualTemplate"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sets"
          },
          "fobjects": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FobjectGroupTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fobjects"
          },
          "gather_sets": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FobjectGatherSets"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "title",
          "title_en"
        ],
        "title": "FobjectTemplate"
      },
      "FobjectTemplateId": {
        "type": "string",
        "enum": [
          "ADVISOR",
          "AMT",
          "AMTSTV",
          "CHAIR",
          "DEPARTMENT",
          "DSBV",
          "EK",
          "EXECUTIVE_BOARD",
          "FS",
          "HANDICAP",
          "HEAD",
          "LUFV",
          "OFFICE",
          "PA",
          "PP",
          "REFERENT",
          "SAFETY",
          "SCHOOL_CONTACTS",
          "SCHOOL_COUNCIL",
          "STAFF",
          "STAFF_DETAIL",
          "STUDENTS",
          "STUDENTS_BUNDLE",
          "STUDENT_OFFICE"
        ],
        "title": "FobjectTemplateId"
      },
      "FullCalendarEvent": {
        "properties": {
          "id": {
            "type": "string",
            "title": "A unique identifier of an event. Useful for getEventById."
          },
          "groupId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events that share a groupId will be dragged and resized together automatically."
          },
          "allDay": {
            "type": "boolean",
            "title": "Determines if the event is shown in the \"all-day\" section of relevant views. In addition, if true the time text is not displayed with the event.",
            "default": false
          },
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Date object that obeys the current timeZone. When an event begins."
          },
          "end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date object that obeys the current timeZone. When an event ends. It could be null if no end was specified."
          },
          "title": {
            "type": "string",
            "title": "The text that will appear on an event."
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "A URL that will be visited when this event is clicked by the user. For more information on controlling this behavior, see the eventClick callback."
          },
          "classNames": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "An array of strings like [ 'myclass1', myclass2' ]. Determines which HTML classNames will be attached to the rendered event."
          },
          "display": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "The rendering type of this event. Can be 'auto', 'block', 'list-item', 'background', 'inverse-background', or 'none'. See eventDisplay."
          },
          "overlap": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "The value overriding the eventOverlap setting for this specific event. If false, prevents this event from being dragged/resized over other events. Also prevents other events from being dragged/resized over this event. Does not accept a function."
          },
          "extendedProps": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "A plain object holding miscellaneous other properties specified during parsing. Receives properties in the explicitly given extendedProps hash as well as other non-standard properties."
          }
        },
        "type": "object",
        "required": [
          "id",
          "start",
          "title"
        ],
        "title": "FullCalendarEvent"
      },
      "GradeCreate": {
        "properties": {
          "grade": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "title": "Numerical Grade (1.0, 1.3 to 5.0)."
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade (numerical 1.0, 1.3 to 5.0), may be None only if grade_remark is set to \"X\"."
          },
          "grade_remark": {
            "anyOf": [
              {
                "type": "string",
                "const": "X"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special grade \"X\" for \"did not show up\", if set no grade can be given"
          },
          "grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Date"
          },
          "grade_id": {
            "type": "integer",
            "minimum": 1.0,
            "title": "1 first exam, 2 for repeat exam.",
            "default": 1
          }
        },
        "type": "object",
        "title": "GradeCreate"
      },
      "GradingHistogram": {
        "properties": {
          "grade_cut": {
            "type": "string",
            "title": "Grade Cut"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          }
        },
        "type": "object",
        "required": [
          "grade_cut",
          "count"
        ],
        "title": "GradingHistogram"
      },
      "GradingTable": {
        "properties": {
          "grading_id": {
            "type": "string",
            "format": "uuid",
            "title": "Grading Id"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID"
          },
          "grading": {
            "type": "string",
            "title": "Grading"
          },
          "grading_en": {
            "type": "string",
            "title": "Grading En"
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "partner_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ProgramSPOBase"
            },
            "type": "array",
            "title": "Programs"
          },
          "first_degree_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Degree Date"
          },
          "last_degree_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Degree Date"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "count_en": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count En"
          },
          "autogenerate": {
            "type": "boolean",
            "title": "Autogenerate"
          },
          "generated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "description_en": {
            "type": "string",
            "title": "Description En"
          },
          "grade_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Median"
          },
          "histogram": {
            "items": {
              "$ref": "#/components/schemas/GradingHistogram"
            },
            "type": "array",
            "title": "Histogram",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "grading_id",
          "apvtype_id",
          "grading",
          "grading_en",
          "org",
          "school",
          "programs",
          "autogenerate",
          "modified",
          "description",
          "description_en"
        ],
        "title": "GradingTable"
      },
      "GradingTableBase": {
        "properties": {
          "grading_id": {
            "type": "string",
            "format": "uuid",
            "title": "Grading Id"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID"
          },
          "grading": {
            "type": "string",
            "title": "Grading"
          },
          "grading_en": {
            "type": "string",
            "title": "Grading En"
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "partner_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ProgramSPOBase"
            },
            "type": "array",
            "title": "Programs"
          },
          "first_degree_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Degree Date"
          },
          "last_degree_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Degree Date"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "count_en": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count En"
          },
          "autogenerate": {
            "type": "boolean",
            "title": "Autogenerate"
          },
          "generated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "grading_id",
          "apvtype_id",
          "grading",
          "grading_en",
          "org",
          "school",
          "programs",
          "autogenerate",
          "modified"
        ],
        "title": "GradingTableBase"
      },
      "GradingTableCreate": {
        "properties": {
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID",
            "default": "BAKN"
          },
          "grading": {
            "type": "string",
            "title": "Grading",
            "default": "Einstufungstabelle"
          },
          "grading_en": {
            "type": "string",
            "title": "Grading En",
            "default": "Grading Table"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": "Die Einstufungstabelle nach ECTS (\"Grading Table\") gibt einen statistischen Überblick über alle vergangenen Abschlüsse in {% for program in programs %}{% if loop.changed(program.degree_program_name) %}dem {{ program.degree_program_name }}{% if loop.revindex>2 %}, {% elif loop.revindex==2 %} und {% endif %}{% endif %}{% endfor %}. Die Tabelle umfasst alle {{ count }} Abschlüsse, die zwischen {{ first_degree_date|format_date('%B %Y') }} und {{ last_degree_date|format_date('%B %Y') }} verliehen wurden. Der Median der Abschlussnoten beträgt {{ grade_median|string|replace('.', ',') }}."
          },
          "description_en": {
            "type": "string",
            "title": "Description En",
            "default": "The grading table according to ECTS gives statistics over all past degrees awarded in {% for program in programs %}{% if loop.changed(program.degree_program_name_en) %}the {{ program.degree_program_name_en }}{% if not loop.last %}, {% if loop.revindex==2 %}and {% endif %}{% endif %}{% endif %}{% endfor %}. The table includes all {{ count }} degrees awarded between {{ first_degree_date|format_date('%B %Y') }} and {{ last_degree_date|format_date('%B %Y') }}. The median final grade is {{ grade_median|string|replace('.', ',') }}."
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "partner_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Org Id"
          },
          "autogenerate": {
            "type": "boolean",
            "title": "Autogenerate",
            "default": false
          },
          "programs": {
            "items": {
              "prefixItems": [
                {
                  "type": "string",
                  "maxLength": 12,
                  "minLength": 9,
                  "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                  "examples": [
                    "163017051",
                    "163016066",
                    "163016067",
                    "163016068",
                    "163016069"
                  ]
                },
                {
                  "anyOf": [
                    {
                      "type": "string"
                    },
                    {
                      "type": "null"
                    }
                  ]
                }
              ],
              "type": "array",
              "maxItems": 2,
              "minItems": 2
            },
            "type": "array",
            "minItems": 1,
            "title": "Programs"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "programs"
        ],
        "title": "GradingTableCreate"
      },
      "GradingTableExtended": {
        "properties": {
          "grading_id": {
            "type": "string",
            "format": "uuid",
            "title": "Grading Id"
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/APVTypeID"
          },
          "grading": {
            "type": "string",
            "title": "Grading"
          },
          "grading_en": {
            "type": "string",
            "title": "Grading En"
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "partner_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ProgramSPOBase"
            },
            "type": "array",
            "title": "Programs"
          },
          "first_degree_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First Degree Date"
          },
          "last_degree_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Degree Date"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "count_en": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count En"
          },
          "autogenerate": {
            "type": "boolean",
            "title": "Autogenerate"
          },
          "generated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Generated"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "description_en": {
            "type": "string",
            "title": "Description En"
          },
          "grade_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Median"
          },
          "histogram": {
            "items": {
              "$ref": "#/components/schemas/GradingHistogram"
            },
            "type": "array",
            "title": "Histogram",
            "default": []
          },
          "grade_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Avg"
          },
          "grade_stddev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Stddev"
          },
          "grade_min": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Min"
          },
          "grade_max": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Max"
          },
          "fachsemester_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Avg"
          },
          "fachsemester_stddev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Stddev"
          },
          "fachsemester_min": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Min"
          },
          "fachsemester_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Median"
          },
          "fachsemester_max": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Max"
          },
          "age_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Avg"
          },
          "age_stddev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Stddev"
          },
          "age_min": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Min"
          },
          "age_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Median"
          },
          "age_max": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Max"
          }
        },
        "type": "object",
        "required": [
          "grading_id",
          "apvtype_id",
          "grading",
          "grading_en",
          "org",
          "school",
          "programs",
          "autogenerate",
          "modified",
          "description",
          "description_en"
        ],
        "title": "GradingTableExtended"
      },
      "GradingTableUpdate": {
        "properties": {
          "apvtype_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/APVTypeID"
              },
              {
                "type": "null"
              }
            ]
          },
          "grading": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading"
          },
          "grading_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "partner_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Org Id"
          },
          "autogenerate": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Autogenerate"
          },
          "programs": {
            "anyOf": [
              {
                "items": {
                  "prefixItems": [
                    {
                      "type": "string",
                      "maxLength": 12,
                      "minLength": 9,
                      "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                      "examples": [
                        "163017051",
                        "163016066",
                        "163016067",
                        "163016068",
                        "163016069"
                      ]
                    },
                    {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    }
                  ],
                  "type": "array",
                  "maxItems": 2,
                  "minItems": 2
                },
                "type": "array",
                "minItems": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Programs"
          }
        },
        "type": "object",
        "title": "GradingTableUpdate"
      },
      "GraduateCenter-Input": {
        "properties": {
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "gc_docgs": {
            "type": "string",
            "title": "Gc Docgs"
          },
          "gc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gc"
          },
          "gc_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gc En"
          }
        },
        "type": "object",
        "required": [
          "gc_docgs"
        ],
        "title": "GraduateCenter"
      },
      "GraduateCenter-Output": {
        "properties": {
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "gc_docgs": {
            "type": "string",
            "title": "Gc Docgs"
          },
          "gc": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gc"
          },
          "gc_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Gc En"
          }
        },
        "type": "object",
        "required": [
          "gc_docgs"
        ],
        "title": "GraduateCenter"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IauthPersonBase": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "anrede": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anrede"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "matrikel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Matrikel"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "emails": {
            "items": {
              "type": "string",
              "format": "email"
            },
            "type": "array",
            "title": "Emails",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "username",
          "email"
        ],
        "title": "IauthPersonBase"
      },
      "IauthUser": {
        "properties": {
          "sn": {
            "type": "string",
            "title": "Sn"
          },
          "imVorname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imvorname"
          },
          "fullName": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fullname"
          },
          "cn": {
            "type": "string",
            "title": "Cn"
          },
          "imAkademischerGrad": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imakademischergrad"
          },
          "imTitelPre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imtitelpre"
          },
          "imTitelPost": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imtitelpost"
          },
          "imStaatsangehoerigkeit": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imstaatsangehoerigkeit"
          },
          "imGeburtsdatum": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imgeburtsdatum"
          },
          "imGeburtsort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imgeburtsort"
          },
          "imMWNID": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immwnid"
          },
          "imMatrikelNr": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Immatrikelnr"
          },
          "imEmailAdressen": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imemailadressen"
          },
          "imHauptEMail": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imhauptemail"
          },
          "imForwardAdresse": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imforwardadresse"
          },
          "imZustellMailbox": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imzustellmailbox"
          },
          "imAffiliation": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imaffiliation"
          },
          "imAffiliationPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imaffiliationprim"
          },
          "imEduPersonFeaturesOfStudy": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imedupersonfeaturesofstudy"
          },
          "imOrgZugMitarbeiterPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzugmitarbeiterprim"
          },
          "imOrgZugStudentPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzugstudentprim"
          },
          "imOrgZug": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzug"
          },
          "imOrgZugGast": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzuggast"
          },
          "imOrgZugMitarbeiter": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzugmitarbeiter"
          },
          "imOrgZugStudent": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzugstudent"
          },
          "imOrgZugGastPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzuggastprim"
          },
          "imOrgZugMitarbeiterALPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzugmitarbeiteralprim"
          },
          "imOrgZugStudentALPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzugstudentalprim"
          },
          "imOrgZugGastALPrim": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imorgzuggastalprim"
          },
          "imAdrDienstLand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrdienstland"
          },
          "imAdrDienstOrt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrdienstort"
          },
          "imAdrDienstPLZ": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrdienstplz"
          },
          "imAdrDienstStrasseHNr": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrdienststrassehnr"
          },
          "imAdrPrivatLand": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrprivatland"
          },
          "imAdrPrivatOrt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrprivatort"
          },
          "imAdrPrivatPLZ": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrprivatplz"
          },
          "imAdrPrivatStrasseHNr": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imadrprivatstrassehnr"
          },
          "imAnrede": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imanrede"
          },
          "imEduPersonOrcid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Imedupersonorcid"
          }
        },
        "type": "object",
        "required": [
          "sn",
          "cn"
        ],
        "title": "IauthUser"
      },
      "LSFPath": {
        "properties": {
          "path_name": {
            "type": "string",
            "title": "Path Name"
          },
          "path": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Path"
          },
          "semester_id_lmulsf": {
            "type": "integer",
            "title": "Semester Id Lmulsf"
          },
          "path_id": {
            "type": "integer",
            "title": "Path Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBaseLSF"
          }
        },
        "type": "object",
        "required": [
          "path_name",
          "path",
          "semester_id_lmulsf",
          "path_id",
          "semester"
        ],
        "title": "LSFPath"
      },
      "LSFPathCreate": {
        "properties": {
          "path_name": {
            "type": "string",
            "title": "Path Name"
          },
          "path": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Path"
          }
        },
        "type": "object",
        "required": [
          "path_name",
          "path"
        ],
        "title": "LSFPathCreate"
      },
      "LUFVAccount": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours [LVS] in this semester/account, including jobs non-accreditable on teaching duty."
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits",
            "description": "Duty credits in this semester/account"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits",
            "description": "Credits achieved in this semester/account"
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "staffcategory": {
            "$ref": "#/components/schemas/LUFVStaffCategoryBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "modified",
          "staffcategory",
          "org",
          "person"
        ],
        "title": "LUFVAccount"
      },
      "LUFVAccountBase": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours [LVS] in this semester/account, including jobs non-accreditable on teaching duty."
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits",
            "description": "Duty credits in this semester/account"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits",
            "description": "Credits achieved in this semester/account"
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "staffcategory": {
            "$ref": "#/components/schemas/LUFVStaffCategoryBase"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "modified",
          "staffcategory"
        ],
        "title": "LUFVAccountBase"
      },
      "LUFVAccountCreate": {
        "properties": {
          "contract_fraction": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "school_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "School Org Id",
            "description": "ID of the school to report to, defaults to the school parent to org_id."
          },
          "staffcategory_id": {
            "type": "integer",
            "title": "Staffcategory Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "org_id",
          "staffcategory_id"
        ],
        "title": "LUFVAccountCreate"
      },
      "LUFVAccountCreateAdmin": {
        "properties": {
          "to_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Semester Key"
          },
          "to_semester_key_if_tenure": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Semester Key If Tenure"
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "school_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "School Org Id",
            "description": "ID of the school to report to, defaults to the school parent to org_id."
          },
          "staffcategory_id": {
            "type": "integer",
            "title": "Staffcategory Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "org_id",
          "staffcategory_id"
        ],
        "title": "LUFVAccountCreateAdmin"
      },
      "LUFVAccountData": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours [LVS] in this semester/account, including jobs non-accreditable on teaching duty."
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits",
            "description": "Duty credits in this semester/account"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits",
            "description": "Credits achieved in this semester/account"
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          }
        },
        "type": "object",
        "title": "LUFVAccountData"
      },
      "LUFVAccountFull": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours [LVS] in this semester/account, including jobs non-accreditable on teaching duty."
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits",
            "description": "Duty credits in this semester/account"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits",
            "description": "Credits achieved in this semester/account"
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "staffcategory": {
            "$ref": "#/components/schemas/LUFVStaffCategoryBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          },
          "credits_total_regular": {
            "type": "integer",
            "title": "Credits Total Regular"
          },
          "duties_all": {
            "items": {
              "$ref": "#/components/schemas/LUFVDutyRecordSemester"
            },
            "type": "array",
            "title": "Duties All",
            "default": []
          },
          "jobs_all": {
            "items": {
              "$ref": "#/components/schemas/LUFVJobRecord"
            },
            "type": "array",
            "title": "Jobs All",
            "default": []
          },
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/LUFVAccount"
            },
            "type": "array",
            "title": "Accounts"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "modified",
          "staffcategory",
          "org",
          "person",
          "credits_total_regular",
          "accounts"
        ],
        "title": "LUFVAccountFull"
      },
      "LUFVAccountNoCategory": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours [LVS] in this semester/account, including jobs non-accreditable on teaching duty."
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits",
            "description": "Duty credits in this semester/account"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits",
            "description": "Credits achieved in this semester/account"
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "modified",
          "org",
          "person"
        ],
        "title": "LUFVAccountNoCategory"
      },
      "LUFVAccountPerson": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "type": "string",
            "title": "Lvs",
            "default": "0"
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "type": "integer",
            "title": "Duty Credits",
            "default": 0
          },
          "credits": {
            "type": "integer",
            "title": "Credits",
            "default": 0
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "modified",
          "person"
        ],
        "title": "LUFVAccountPerson"
      },
      "LUFVAccountPlus": {
        "properties": {
          "confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirm Date",
            "description": "Date of confirmation by org head (either digitally or by written form to School Office)"
          },
          "signed_confirmation_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signed Confirmation Date",
            "description": "Date the signed confirmation was received by school office"
          },
          "file_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Date",
            "description": "Date of finalization of the account by school office"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat",
            "description": "Formal teaching duty in this semester/account in teaching hours [LVS]"
          },
          "deputat_reduction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction",
            "description": "Reduction of teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Reduction Personal",
            "description": "Reduction of personal teaching duty in this semester/account in teaching hours [LVS] (values are negative in order to be summable with `deputat`)"
          },
          "deputat_semesterbalance": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Semesterbalance",
            "description": "Reduction/Increase of teaching duty due to balancing between winter and summer in this semester/account in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "deputat_carryover_past": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat Carryover Past",
            "description": "Carryover of teaching duties/activities from past semesters in teaching hours [LVS] (values are summable with `deputat`)"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours [LVS] in this semester/account, including jobs non-accreditable on teaching duty."
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited",
            "description": "Accreditable teaching hours [LVS] in this semester/account."
          },
          "duty_credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits",
            "description": "Duty credits in this semester/account"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits",
            "description": "Credits achieved in this semester/account"
          },
          "duty_credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Credits Total",
            "description": "Total duty credits of this user in all semesters"
          },
          "credits_total": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Total",
            "description": "Total credits achieved by this user in all semesters"
          },
          "is_hlehrer": {
            "type": "boolean",
            "title": "Is Hlehrer",
            "description": "This user is university teacher or TUM Junior Fellow.",
            "default": false
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "description": "For this the duty system is active.",
            "default": false
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "staffcategory": {
            "$ref": "#/components/schemas/LUFVStaffCategoryBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          },
          "credits_total_regular": {
            "type": "integer",
            "title": "Credits Total Regular"
          },
          "duties": {
            "items": {
              "$ref": "#/components/schemas/LUFVDutyRecord"
            },
            "type": "array",
            "title": "Duties",
            "default": []
          },
          "jobs": {
            "items": {
              "$ref": "#/components/schemas/LUFVJobRecord"
            },
            "type": "array",
            "title": "Jobs",
            "default": []
          },
          "possible_jobs": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/LUFVJobBase"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Possible Jobs"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "modified",
          "staffcategory",
          "org",
          "person",
          "credits_total_regular",
          "possible_jobs"
        ],
        "title": "LUFVAccountPlus"
      },
      "LUFVAccountSimple": {
        "properties": {
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsername"
          },
          "deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deputat"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "lvs_limited": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs Limited"
          }
        },
        "type": "object",
        "required": [
          "person"
        ],
        "title": "LUFVAccountSimple"
      },
      "LUFVAccountUpdate": {
        "properties": {
          "contract_fraction": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "staffcategory_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Id"
          }
        },
        "type": "object",
        "title": "LUFVAccountUpdate"
      },
      "LUFVAccountUpdateAdmin": {
        "properties": {
          "to_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Semester Key"
          },
          "to_semester_key_if_tenure": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "To Semester Key If Tenure"
          },
          "contract_fraction": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fraction of contract as decimal",
            "description": "Decimal number >0, <=1 describing the fraction of a salaried contract."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "start date of the contract, especially, if after semester start"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "end date of the contract, especially, if before semester end"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "two_days": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Two Days",
            "description": "whether teaching was done on more than two days of the week during the lecture period"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "staffcategory_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Id"
          }
        },
        "type": "object",
        "title": "LUFVAccountUpdateAdmin"
      },
      "LUFVCoordinatorCourse": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "participants": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participants"
          },
          "lecturer_count": {
            "type": "integer",
            "title": "Lecturer Count"
          },
          "group_count": {
            "type": "integer",
            "title": "Group Count"
          },
          "coordinator_only": {
            "type": "boolean",
            "title": "Coordinator Only",
            "default": false
          },
          "coordinator_jobs": {
            "items": {
              "$ref": "#/components/schemas/LUFVJobRecords"
            },
            "type": "array",
            "title": "Coordinator Jobs",
            "default": []
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "org",
          "lecturer_count",
          "group_count",
          "tumonline_url"
        ],
        "title": "LUFVCoordinatorCourse"
      },
      "LUFVCoordinatorCourseJob": {
        "properties": {
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "course_name": {
            "type": "string",
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "course_name_list": {
            "type": "string",
            "title": "Course Name List"
          },
          "course_name_list_en": {
            "type": "string",
            "title": "Course Name List En"
          },
          "hoursperweek": {
            "type": "string",
            "title": "Hoursperweek"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "activity": {
            "$ref": "#/components/schemas/CourseActivity"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "participants": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Participants"
          },
          "lecturer_count": {
            "type": "integer",
            "title": "Lecturer Count"
          },
          "group_count": {
            "type": "integer",
            "title": "Group Count"
          },
          "coordinator_only": {
            "type": "boolean",
            "title": "Coordinator Only",
            "default": false
          },
          "job": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVJobRecords"
              },
              {
                "type": "null"
              }
            ]
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "course_code",
          "course_name",
          "course_id",
          "course_name_list",
          "course_name_list_en",
          "hoursperweek",
          "semester",
          "modified_tumonline",
          "activity",
          "org",
          "lecturer_count",
          "group_count",
          "tumonline_url"
        ],
        "title": "LUFVCoordinatorCourseJob"
      },
      "LUFVCoordinatorRecordUser": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          }
        },
        "type": "object",
        "required": [
          "username",
          "count",
          "job_id"
        ],
        "title": "LUFVCoordinatorRecordUser"
      },
      "LUFVCoordinatorRecordsUpdate": {
        "properties": {
          "records": {
            "items": {
              "$ref": "#/components/schemas/LUFVCoordinatorRecordUser"
            },
            "type": "array",
            "title": "Records"
          }
        },
        "type": "object",
        "required": [
          "records"
        ],
        "title": "LUFVCoordinatorRecordsUpdate"
      },
      "LUFVCourseJobTotalHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/LUFVCourseJobTotalWithRecords"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "LUFVCourseJobTotalHits"
      },
      "LUFVCourseJobTotalWithRecords": {
        "properties": {
          "job": {
            "$ref": "#/components/schemas/LUFVJobEssential"
          },
          "course": {
            "$ref": "#/components/schemas/CourseBaseLUFV"
          },
          "record_count": {
            "type": "integer",
            "title": "Record Count"
          },
          "lvs": {
            "type": "string",
            "title": "Lvs"
          },
          "lvs_interdisciplinary": {
            "type": "string",
            "title": "Lvs Interdisciplinary"
          },
          "lvs_announced": {
            "type": "string",
            "title": "Lvs Announced"
          },
          "student_count_average": {
            "type": "string",
            "title": "Student Count Average"
          },
          "records": {
            "$ref": "#/components/schemas/LUFVJobRecordBaseWithAccount"
          }
        },
        "type": "object",
        "required": [
          "job",
          "course",
          "record_count",
          "lvs",
          "lvs_interdisciplinary",
          "lvs_announced",
          "student_count_average",
          "records"
        ],
        "title": "LUFVCourseJobTotalWithRecords"
      },
      "LUFVDuty": {
        "properties": {
          "dutycategory_id": {
            "type": "string",
            "title": "Dutycategory Id"
          },
          "duty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty"
          },
          "duty_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty En"
          },
          "duty_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Description"
          },
          "duty_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Description En"
          },
          "from_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Semester Key"
          },
          "through_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Through Semester Key"
          },
          "duty_id": {
            "type": "string",
            "title": "Duty Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "dutycategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVDutyCategoryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "dutycategory_id",
          "duty_id",
          "modified"
        ],
        "title": "LUFVDuty"
      },
      "LUFVDutyBase": {
        "properties": {
          "dutycategory_id": {
            "type": "string",
            "title": "Dutycategory Id"
          },
          "duty": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty"
          },
          "duty_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty En"
          },
          "duty_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Description"
          },
          "duty_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Description En"
          },
          "from_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Semester Key"
          },
          "through_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Through Semester Key"
          },
          "duty_id": {
            "type": "string",
            "title": "Duty Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "dutycategory_id",
          "duty_id",
          "modified"
        ],
        "title": "LUFVDutyBase"
      },
      "LUFVDutyCategory": {
        "properties": {
          "dutycategory": {
            "type": "string",
            "title": "Dutycategory"
          },
          "dutycategory_en": {
            "type": "string",
            "title": "Dutycategory En"
          },
          "dutycategory_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dutycategory Description"
          },
          "dutycategory_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dutycategory Description En"
          },
          "dutycategory_id": {
            "type": "string",
            "title": "Dutycategory Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "duties": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVDutyBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duties"
          }
        },
        "type": "object",
        "required": [
          "dutycategory",
          "dutycategory_en",
          "dutycategory_id",
          "modified"
        ],
        "title": "LUFVDutyCategory"
      },
      "LUFVDutyCategoryBase": {
        "properties": {
          "dutycategory": {
            "type": "string",
            "title": "Dutycategory"
          },
          "dutycategory_en": {
            "type": "string",
            "title": "Dutycategory En"
          },
          "dutycategory_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dutycategory Description"
          },
          "dutycategory_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dutycategory Description En"
          },
          "dutycategory_id": {
            "type": "string",
            "title": "Dutycategory Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "dutycategory",
          "dutycategory_en",
          "dutycategory_id",
          "modified"
        ],
        "title": "LUFVDutyCategoryBase"
      },
      "LUFVDutyCategoryCreate": {
        "properties": {
          "dutycategory": {
            "type": "string",
            "title": "Dutycategory"
          },
          "dutycategory_en": {
            "type": "string",
            "title": "Dutycategory En"
          },
          "dutycategory_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dutycategory Description"
          },
          "dutycategory_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dutycategory Description En"
          },
          "dutycategory_id": {
            "type": "string",
            "title": "Dutycategory Id"
          }
        },
        "type": "object",
        "required": [
          "dutycategory",
          "dutycategory_en",
          "dutycategory_id"
        ],
        "title": "LUFVDutyCategoryCreate"
      },
      "LUFVDutyCreate": {
        "properties": {
          "duty_id": {
            "type": "string",
            "title": "Duty Id"
          },
          "duty": {
            "type": "string",
            "title": "Duty"
          },
          "duty_en": {
            "type": "string",
            "title": "Duty En"
          },
          "from_semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "From Semester Key"
          }
        },
        "type": "object",
        "required": [
          "duty_id",
          "duty",
          "duty_en",
          "from_semester_key"
        ],
        "title": "LUFVDutyCreate"
      },
      "LUFVDutyGroupReduction": {
        "properties": {
          "duty_id": {
            "type": "string",
            "title": "Duty Id"
          },
          "duty": {
            "type": "string",
            "title": "Duty"
          },
          "duty_en": {
            "type": "string",
            "title": "Duty En"
          },
          "duty_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Description"
          },
          "duty_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Description En"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "staffcategory_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Ids"
          },
          "max_reduction": {
            "type": "integer",
            "title": "Max Reduction",
            "default": 0
          },
          "current_reduction": {
            "type": "integer",
            "title": "Current Reduction",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "duty_id",
          "duty",
          "duty_en"
        ],
        "title": "LUFVDutyGroupReduction"
      },
      "LUFVDutyLeaveType": {
        "type": "string",
        "enum": [
          "duty_leave_sick",
          "duty_leave_parent"
        ],
        "title": "LUFVDutyLeaveType"
      },
      "LUFVDutyRecord": {
        "properties": {
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "duty": {
            "$ref": "#/components/schemas/LUFVDuty"
          }
        },
        "type": "object",
        "required": [
          "record_id",
          "duty"
        ],
        "title": "LUFVDutyRecord"
      },
      "LUFVDutyRecordAccount": {
        "properties": {
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "duty": {
            "$ref": "#/components/schemas/LUFVDuty"
          },
          "account": {
            "$ref": "#/components/schemas/LUFVAccountSimple"
          }
        },
        "type": "object",
        "required": [
          "record_id",
          "duty",
          "account"
        ],
        "title": "LUFVDutyRecordAccount"
      },
      "LUFVDutyRecordEdit-Input": {
        "properties": {
          "record_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Id"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "reference_record_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Record Id"
          },
          "duty_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Id"
          },
          "agent_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Username"
          }
        },
        "type": "object",
        "title": "LUFVDutyRecordEdit"
      },
      "LUFVDutyRecordEdit-Output": {
        "properties": {
          "record_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Record Id"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "reference_record_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Record Id"
          },
          "duty_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duty Id"
          },
          "agent_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Agent Username"
          }
        },
        "type": "object",
        "title": "LUFVDutyRecordEdit"
      },
      "LUFVDutyRecordSemester": {
        "properties": {
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "duty": {
            "$ref": "#/components/schemas/LUFVDuty"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          }
        },
        "type": "object",
        "required": [
          "record_id",
          "duty",
          "semester"
        ],
        "title": "LUFVDutyRecordSemester"
      },
      "LUFVDutyReductionType": {
        "type": "string",
        "enum": [
          "duty_reduction_admin",
          "duty_reduction_wzw",
          "duty_reduction_group"
        ],
        "title": "LUFVDutyReductionType"
      },
      "LUFVJob": {
        "properties": {
          "jobcategory_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Id"
          },
          "job": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job"
          },
          "job_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job En"
          },
          "job_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description"
          },
          "job_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description En"
          },
          "from_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Semester Key"
          },
          "through_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Through Semester Key"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count"
          },
          "base_student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Student Count"
          },
          "staffcategory_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Ids"
          },
          "activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Ids"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          },
          "not_catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Not Catalog Tags"
          },
          "ghks": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ghks"
          },
          "coordinator_activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coordinator Activity Ids"
          },
          "lecturer_is_coordinator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturer Is Coordinator"
          },
          "course_name_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name Pattern"
          },
          "requires_remark": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Remark"
          },
          "requires_lecturer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Lecturer"
          },
          "requires_hlehrer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Hlehrer"
          },
          "requires_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Admin"
          },
          "default_blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Blocked"
          },
          "special_quanta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobQuantaBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Quanta"
          },
          "hoursperweek_to_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek To Lvs"
          },
          "requires_students": {
            "type": "boolean",
            "title": "Requires Students"
          },
          "may_interdisciplinary": {
            "type": "boolean",
            "title": "May Interdisciplinary"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "jobcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVJobCategoryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "requires_students",
          "may_interdisciplinary",
          "job_id",
          "modified"
        ],
        "title": "LUFVJob"
      },
      "LUFVJobBase": {
        "properties": {
          "jobcategory_id": {
            "type": "string",
            "title": "Jobcategory Id"
          },
          "job": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job"
          },
          "job_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job En"
          },
          "job_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description"
          },
          "job_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description En"
          },
          "from_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Semester Key"
          },
          "through_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Through Semester Key"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count"
          },
          "base_student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Student Count"
          },
          "staffcategory_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Ids"
          },
          "activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Ids"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          },
          "not_catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Not Catalog Tags"
          },
          "ghks": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ghks"
          },
          "coordinator_activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coordinator Activity Ids"
          },
          "lecturer_is_coordinator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturer Is Coordinator"
          },
          "course_name_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name Pattern"
          },
          "requires_remark": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Remark"
          },
          "requires_lecturer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Lecturer"
          },
          "requires_hlehrer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Hlehrer"
          },
          "requires_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Admin"
          },
          "default_blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Blocked"
          },
          "special_quanta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobQuantaBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Quanta"
          },
          "hoursperweek_to_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek To Lvs"
          },
          "requires_students": {
            "type": "boolean",
            "title": "Requires Students"
          },
          "may_interdisciplinary": {
            "type": "boolean",
            "title": "May Interdisciplinary"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "jobcategory_id",
          "requires_students",
          "may_interdisciplinary",
          "job_id",
          "modified"
        ],
        "title": "LUFVJobBase"
      },
      "LUFVJobCategory": {
        "properties": {
          "jobcategory": {
            "type": "string",
            "title": "Jobcategory"
          },
          "jobcategory_en": {
            "type": "string",
            "title": "Jobcategory En"
          },
          "jobcategory_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Description"
          },
          "jobcategory_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Description En"
          },
          "max_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs"
          },
          "max_lvs_relative": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs Relative"
          },
          "may_interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "May Interdisciplinary"
          },
          "jobcategory_id": {
            "type": "string",
            "title": "Jobcategory Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "jobs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobs"
          },
          "max_lvs_relative_percentage": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs Relative Percentage",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "jobcategory",
          "jobcategory_en",
          "jobcategory_id",
          "modified",
          "max_lvs_relative_percentage"
        ],
        "title": "LUFVJobCategory"
      },
      "LUFVJobCategoryBase": {
        "properties": {
          "jobcategory": {
            "type": "string",
            "title": "Jobcategory"
          },
          "jobcategory_en": {
            "type": "string",
            "title": "Jobcategory En"
          },
          "jobcategory_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Description"
          },
          "jobcategory_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Description En"
          },
          "max_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs"
          },
          "max_lvs_relative": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs Relative"
          },
          "may_interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "May Interdisciplinary"
          },
          "jobcategory_id": {
            "type": "string",
            "title": "Jobcategory Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "jobcategory",
          "jobcategory_en",
          "jobcategory_id",
          "modified"
        ],
        "title": "LUFVJobCategoryBase"
      },
      "LUFVJobCategoryCreate": {
        "properties": {
          "jobcategory": {
            "type": "string",
            "title": "Jobcategory"
          },
          "jobcategory_en": {
            "type": "string",
            "title": "Jobcategory En"
          },
          "jobcategory_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Description"
          },
          "jobcategory_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Description En"
          },
          "max_lvs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs"
          },
          "max_lvs_relative": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Lvs Relative"
          },
          "may_interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "May Interdisciplinary"
          },
          "jobcategory_id": {
            "type": "string",
            "title": "Jobcategory Id"
          }
        },
        "type": "object",
        "required": [
          "jobcategory",
          "jobcategory_en",
          "jobcategory_id"
        ],
        "title": "LUFVJobCategoryCreate"
      },
      "LUFVJobCourses": {
        "properties": {
          "jobcategory_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Id"
          },
          "job": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job"
          },
          "job_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job En"
          },
          "job_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description"
          },
          "job_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description En"
          },
          "from_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Semester Key"
          },
          "through_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Through Semester Key"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count"
          },
          "base_student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Student Count"
          },
          "staffcategory_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Ids"
          },
          "activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Ids"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          },
          "not_catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Not Catalog Tags"
          },
          "ghks": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ghks"
          },
          "coordinator_activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coordinator Activity Ids"
          },
          "lecturer_is_coordinator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturer Is Coordinator"
          },
          "course_name_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name Pattern"
          },
          "requires_remark": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Remark"
          },
          "requires_lecturer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Lecturer"
          },
          "requires_hlehrer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Hlehrer"
          },
          "requires_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Admin"
          },
          "default_blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Blocked"
          },
          "special_quanta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobQuantaBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Quanta"
          },
          "hoursperweek_to_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek To Lvs"
          },
          "requires_students": {
            "type": "boolean",
            "title": "Requires Students"
          },
          "may_interdisciplinary": {
            "type": "boolean",
            "title": "May Interdisciplinary"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "jobcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVJobCategoryBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "courses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseBaseLUFV"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses"
          }
        },
        "type": "object",
        "required": [
          "requires_students",
          "may_interdisciplinary",
          "job_id",
          "modified"
        ],
        "title": "LUFVJobCourses"
      },
      "LUFVJobCreate": {
        "properties": {
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "job": {
            "type": "string",
            "title": "Job"
          },
          "job_en": {
            "type": "string",
            "title": "Job En"
          },
          "job_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description"
          },
          "job_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description En"
          },
          "from_semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "From Semester Key"
          },
          "credits": {
            "type": "integer",
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Lvs"
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count"
          },
          "base_student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Student Count"
          },
          "staffcategory_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Ids"
          },
          "activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Ids"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          },
          "not_catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Not Catalog Tags"
          },
          "ghks": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ghks"
          },
          "course_name_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name Pattern"
          },
          "requires_remark": {
            "type": "boolean",
            "title": "Requires Remark",
            "default": false
          },
          "requires_lecturer": {
            "type": "boolean",
            "title": "Requires Lecturer",
            "default": true
          },
          "requires_hlehrer": {
            "type": "boolean",
            "title": "Requires Hlehrer",
            "default": false
          },
          "requires_admin": {
            "type": "boolean",
            "title": "Requires Admin",
            "default": false
          },
          "special_quanta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobQuantaBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Quanta"
          },
          "hoursperweek_to_lvs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek To Lvs"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "job",
          "job_en",
          "from_semester_key",
          "credits",
          "lvs"
        ],
        "title": "LUFVJobCreate"
      },
      "LUFVJobEssential": {
        "properties": {
          "jobcategory_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Id"
          },
          "job": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job"
          },
          "job_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job En"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count"
          },
          "base_student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Student Count"
          },
          "hoursperweek_to_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek To Lvs"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "modified"
        ],
        "title": "LUFVJobEssential"
      },
      "LUFVJobQuantaBase": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "description_en": {
            "type": "string",
            "title": "Description En"
          }
        },
        "type": "object",
        "required": [
          "count",
          "description",
          "description_en"
        ],
        "title": "LUFVJobQuantaBase"
      },
      "LUFVJobRecord": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Lecturer Count",
            "default": 1
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "record_locked": {
            "type": "boolean",
            "title": "Record Locked"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "course": {
            "$ref": "#/components/schemas/CourseBaseLUFV"
          },
          "job": {
            "$ref": "#/components/schemas/LUFVJobBase"
          },
          "course_lvs_announced": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Lvs Announced"
          },
          "course_lvs_total": {
            "type": "string",
            "title": "Course Lvs Total"
          },
          "other_course_records": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobRecordPerson"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Course Records"
          }
        },
        "type": "object",
        "required": [
          "count",
          "record_id",
          "record_locked",
          "modified",
          "course",
          "job",
          "course_lvs_total"
        ],
        "title": "LUFVJobRecord"
      },
      "LUFVJobRecordBaseWithAccount": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Lecturer Count",
            "default": 1
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "record_locked": {
            "type": "boolean",
            "title": "Record Locked"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "account": {
            "$ref": "#/components/schemas/LUFVAccountNoCategory"
          }
        },
        "type": "object",
        "required": [
          "count",
          "record_id",
          "record_locked",
          "modified",
          "account"
        ],
        "title": "LUFVJobRecordBaseWithAccount"
      },
      "LUFVJobRecordCreate": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count",
            "default": 1
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Lecturer Count",
            "default": 1
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "reference_record_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference Record Id"
          },
          "thesis_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Id"
          }
        },
        "type": "object",
        "required": [
          "job_id",
          "course_id"
        ],
        "title": "LUFVJobRecordCreate"
      },
      "LUFVJobRecordPerson": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Lecturer Count",
            "default": 1
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "record_locked": {
            "type": "boolean",
            "title": "Record Locked"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          }
        },
        "type": "object",
        "required": [
          "count",
          "record_id",
          "record_locked",
          "modified",
          "org",
          "person"
        ],
        "title": "LUFVJobRecordPerson"
      },
      "LUFVJobRecordUpdate": {
        "properties": {
          "count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturer Count"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          }
        },
        "type": "object",
        "title": "LUFVJobRecordUpdate"
      },
      "LUFVJobRecordUsername": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Lecturer Count",
            "default": 1
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "record_locked": {
            "type": "boolean",
            "title": "Record Locked"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          }
        },
        "type": "object",
        "required": [
          "count",
          "record_id",
          "record_locked",
          "modified",
          "username"
        ],
        "title": "LUFVJobRecordUsername"
      },
      "LUFVJobRecordWithAccount": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Count"
          },
          "blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blocked"
          },
          "interdisciplinary": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interdisciplinary"
          },
          "lecturer_count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Lecturer Count",
            "default": 1
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          },
          "record_locked": {
            "type": "boolean",
            "title": "Record Locked"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "course": {
            "$ref": "#/components/schemas/CourseBaseLUFV"
          },
          "job": {
            "$ref": "#/components/schemas/LUFVJobBase"
          },
          "course_lvs_announced": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Lvs Announced"
          },
          "course_lvs_total": {
            "type": "string",
            "title": "Course Lvs Total"
          },
          "other_course_records": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobRecordPerson"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Other Course Records"
          },
          "account": {
            "$ref": "#/components/schemas/LUFVAccountData"
          }
        },
        "type": "object",
        "required": [
          "count",
          "record_id",
          "record_locked",
          "modified",
          "course",
          "job",
          "course_lvs_total",
          "account"
        ],
        "title": "LUFVJobRecordWithAccount"
      },
      "LUFVJobRecords": {
        "properties": {
          "jobcategory_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobcategory Id"
          },
          "job": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job"
          },
          "job_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job En"
          },
          "job_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description"
          },
          "job_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Description En"
          },
          "from_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "From Semester Key"
          },
          "through_semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Through Semester Key"
          },
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lvs"
          },
          "max_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Count"
          },
          "base_student_count": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 1.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Student Count"
          },
          "staffcategory_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Staffcategory Ids"
          },
          "activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Activity Ids"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          },
          "not_catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Not Catalog Tags"
          },
          "ghks": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ghks"
          },
          "coordinator_activity_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coordinator Activity Ids"
          },
          "lecturer_is_coordinator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecturer Is Coordinator"
          },
          "course_name_pattern": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name Pattern"
          },
          "requires_remark": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Remark"
          },
          "requires_lecturer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Lecturer"
          },
          "requires_hlehrer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Hlehrer"
          },
          "requires_admin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Admin"
          },
          "default_blocked": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Blocked"
          },
          "special_quanta": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVJobQuantaBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Quanta"
          },
          "hoursperweek_to_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek To Lvs"
          },
          "requires_students": {
            "type": "boolean",
            "title": "Requires Students"
          },
          "may_interdisciplinary": {
            "type": "boolean",
            "title": "May Interdisciplinary"
          },
          "job_id": {
            "type": "string",
            "title": "Job Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "jobcategory": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVJobCategoryBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "records": {
            "items": {
              "$ref": "#/components/schemas/LUFVJobRecordUsername"
            },
            "type": "array",
            "title": "Records",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "requires_students",
          "may_interdisciplinary",
          "job_id",
          "modified"
        ],
        "title": "LUFVJobRecords"
      },
      "LUFVLeaveRecordCreate": {
        "properties": {
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          }
        },
        "type": "object",
        "required": [
          "start_date",
          "end_date"
        ],
        "title": "LUFVLeaveRecordCreate"
      },
      "LUFVLogAccount": {
        "properties": {
          "log_id": {
            "type": "string",
            "format": "uuid",
            "title": "Log Id"
          },
          "log_date": {
            "type": "string",
            "format": "date-time",
            "title": "Log Date"
          },
          "log_tag": {
            "type": "string",
            "title": "Log Tag"
          },
          "log_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Log Text"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "account": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVAccount"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "log_id",
          "log_date",
          "log_tag"
        ],
        "title": "LUFVLogAccount"
      },
      "LUFVLogBase": {
        "properties": {
          "log_id": {
            "type": "string",
            "format": "uuid",
            "title": "Log Id"
          },
          "log_date": {
            "type": "string",
            "format": "date-time",
            "title": "Log Date"
          },
          "log_tag": {
            "type": "string",
            "title": "Log Tag"
          },
          "log_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Log Text"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "log_id",
          "log_date",
          "log_tag"
        ],
        "title": "LUFVLogBase"
      },
      "LUFVLogSemester": {
        "properties": {
          "log_id": {
            "type": "string",
            "format": "uuid",
            "title": "Log Id"
          },
          "log_date": {
            "type": "string",
            "format": "date-time",
            "title": "Log Date"
          },
          "log_tag": {
            "type": "string",
            "title": "Log Tag"
          },
          "log_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Log Text"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          }
        },
        "type": "object",
        "required": [
          "log_id",
          "log_date",
          "log_tag",
          "semester"
        ],
        "title": "LUFVLogSemester"
      },
      "LUFVOrgConfirmResult": {
        "properties": {
          "confirmed_count": {
            "type": "integer",
            "title": "Confirmed Count"
          },
          "staffgroups": {
            "items": {
              "$ref": "#/components/schemas/LUFVStaffGroup"
            },
            "type": "array",
            "title": "Staffgroups"
          }
        },
        "type": "object",
        "required": [
          "confirmed_count",
          "staffgroups"
        ],
        "title": "LUFVOrgConfirmResult"
      },
      "LUFVOrgIntegral": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "agent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterLUFV"
          },
          "staffgroups": {
            "items": {
              "$ref": "#/components/schemas/LUFVOrgStaffgroupIntegral"
            },
            "type": "array",
            "title": "Staffgroups"
          },
          "group_reduction_duty": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LUFVDutyGroupReduction"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "count",
          "org",
          "semester",
          "staffgroups"
        ],
        "title": "LUFVOrgIntegral"
      },
      "LUFVOrgIntegralReport": {
        "properties": {
          "deputat": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Deputat",
            "description": "Total deputat of scientific staff in the org."
          },
          "deputat_count": {
            "type": "integer",
            "minimum": 0.0,
            "title": "Deputat Count",
            "description": "Number of scientific staff with deputat in the org."
          },
          "lvs": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Lvs",
            "description": "Total teaching hours of scientific staff in the org."
          },
          "lvs_self": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Lvs Self",
            "description": "Teaching hours of scientific staff with deputat, to fulfill this deputat, in the org."
          },
          "lvs_over": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Lvs Over",
            "description": "Teaching hours of scientific staff with deputat, in excess of this deputat, in the org."
          }
        },
        "type": "object",
        "required": [
          "deputat",
          "deputat_count",
          "lvs",
          "lvs_self",
          "lvs_over"
        ],
        "title": "LUFVOrgIntegralReport"
      },
      "LUFVOrgStaffgroupIntegral": {
        "properties": {
          "staffgroup_id": {
            "type": "integer",
            "title": "Staffgroup Id"
          },
          "staffcategory_ids": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Staffcategory Ids"
          },
          "staffgroup": {
            "type": "string",
            "title": "Staffgroup"
          },
          "staffgroup_en": {
            "type": "string",
            "title": "Staffgroup En"
          },
          "contracted": {
            "type": "boolean",
            "title": "Contracted"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "count_confirmed": {
            "type": "integer",
            "title": "Count Confirmed"
          },
          "unreported_accounts": {
            "type": "boolean",
            "title": "Unreported Accounts"
          },
          "deputat": {
            "type": "string",
            "title": "Deputat"
          },
          "lvs": {
            "type": "string",
            "title": "Lvs"
          },
          "lvs_self": {
            "type": "string",
            "title": "Lvs Self"
          },
          "lvs_over": {
            "type": "string",
            "title": "Lvs Over"
          },
          "lvs_confirmed": {
            "type": "string",
            "title": "Lvs Confirmed"
          },
          "lvs_self_confirmed": {
            "type": "string",
            "title": "Lvs Self Confirmed"
          },
          "lvs_over_confirmed": {
            "type": "string",
            "title": "Lvs Over Confirmed"
          },
          "deputat_reduction_dean": {
            "type": "string",
            "title": "Deputat Reduction Dean"
          },
          "deputat_reduction_budget": {
            "type": "string",
            "title": "Deputat Reduction Budget"
          },
          "deputat_reduction_studydean": {
            "type": "string",
            "title": "Deputat Reduction Studydean"
          },
          "deputat_reduction_academicadvisor": {
            "type": "string",
            "title": "Deputat Reduction Academicadvisor"
          },
          "deputat_reduction_sabbatical": {
            "type": "string",
            "title": "Deputat Reduction Sabbatical"
          },
          "deputat_reduction_personal": {
            "type": "string",
            "title": "Deputat Reduction Personal"
          },
          "deputat_carryover_past_over": {
            "type": "string",
            "title": "Deputat Carryover Past Over"
          },
          "deputat_carryover_past_under": {
            "type": "string",
            "title": "Deputat Carryover Past Under"
          },
          "deputat_semesterbalance_over": {
            "type": "string",
            "title": "Deputat Semesterbalance Over"
          },
          "deputat_semesterbalance_under": {
            "type": "string",
            "title": "Deputat Semesterbalance Under"
          },
          "credits": {
            "type": "integer",
            "title": "Credits",
            "default": 0
          },
          "duty_credits": {
            "type": "integer",
            "title": "Duty Credits",
            "default": 0
          },
          "duty_credits_before_group_reduction": {
            "type": "integer",
            "title": "Duty Credits Before Group Reduction",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "staffgroup_id",
          "staffcategory_ids",
          "staffgroup",
          "staffgroup_en",
          "contracted",
          "count",
          "count_confirmed",
          "unreported_accounts",
          "deputat",
          "lvs",
          "lvs_self",
          "lvs_over",
          "lvs_confirmed",
          "lvs_self_confirmed",
          "lvs_over_confirmed",
          "deputat_reduction_dean",
          "deputat_reduction_budget",
          "deputat_reduction_studydean",
          "deputat_reduction_academicadvisor",
          "deputat_reduction_sabbatical",
          "deputat_reduction_personal",
          "deputat_carryover_past_over",
          "deputat_carryover_past_under",
          "deputat_semesterbalance_over",
          "deputat_semesterbalance_under"
        ],
        "title": "LUFVOrgStaffgroupIntegral"
      },
      "LUFVPerson": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "semester_keys": {
            "items": {
              "type": "string",
              "maxLength": 5,
              "minLength": 5,
              "pattern": "^[0-9]{4}[sSwW]$"
            },
            "type": "array",
            "title": "Semester Keys",
            "default": []
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "LUFVPerson"
      },
      "LUFVPersonHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/LUFVPerson"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "LUFVPersonHits"
      },
      "LUFVReductionRecord": {
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Count"
          },
          "remark": {
            "type": "string",
            "title": "Remark"
          }
        },
        "type": "object",
        "required": [
          "count",
          "remark"
        ],
        "title": "LUFVReductionRecord"
      },
      "LUFVSAPImportResult": {
        "properties": {
          "accounts_inserted": {
            "type": "integer",
            "title": "Accounts Inserted",
            "default": 0
          },
          "accounts_updated": {
            "type": "integer",
            "title": "Accounts Updated",
            "default": 0
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          }
        },
        "type": "object",
        "title": "LUFVSAPImportResult"
      },
      "LUFVStaffCategory": {
        "properties": {
          "staffcategory_id": {
            "type": "integer",
            "title": "Staffcategory Id"
          },
          "staffcategory": {
            "type": "string",
            "title": "Staffcategory"
          },
          "staffcategory_en": {
            "type": "string",
            "title": "Staffcategory En"
          },
          "report_required": {
            "type": "boolean",
            "title": "Report Required"
          },
          "default_deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Deputat"
          },
          "default_deputat_reduction_personal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Deputat Reduction Personal"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "deputat": {
            "type": "string",
            "title": "Deputat",
            "default": "0"
          },
          "deputat_reduction": {
            "type": "string",
            "title": "Deputat Reduction",
            "default": "0"
          },
          "deputat_reduction_personal": {
            "type": "string",
            "title": "Deputat Reduction Personal",
            "default": "0"
          },
          "lvs": {
            "type": "string",
            "title": "Lvs",
            "default": "0"
          },
          "duty_credits": {
            "type": "integer",
            "title": "Duty Credits",
            "default": 0
          },
          "credits": {
            "type": "integer",
            "title": "Credits",
            "default": 0
          },
          "accounts": {
            "items": {
              "$ref": "#/components/schemas/LUFVAccountPerson"
            },
            "type": "array",
            "title": "Accounts",
            "default": []
          },
          "duties_active": {
            "type": "boolean",
            "title": "Duties Active",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "staffcategory_id",
          "staffcategory",
          "staffcategory_en",
          "report_required",
          "modified"
        ],
        "title": "LUFVStaffCategory"
      },
      "LUFVStaffCategoryBase": {
        "properties": {
          "staffcategory": {
            "type": "string",
            "title": "Staffcategory"
          },
          "staffcategory_en": {
            "type": "string",
            "title": "Staffcategory En"
          },
          "report_required": {
            "type": "boolean",
            "title": "Report Required"
          },
          "staffcategory_id": {
            "type": "integer",
            "title": "Staffcategory Id"
          },
          "staffgroup": {
            "$ref": "#/components/schemas/LUFVStaffGroupID"
          }
        },
        "type": "object",
        "required": [
          "staffcategory",
          "staffcategory_en",
          "report_required",
          "staffcategory_id",
          "staffgroup"
        ],
        "title": "LUFVStaffCategoryBase"
      },
      "LUFVStaffCategoryNew": {
        "properties": {
          "staffcategory": {
            "type": "string",
            "title": "Staffcategory"
          },
          "staffcategory_en": {
            "type": "string",
            "title": "Staffcategory En"
          },
          "report_required": {
            "type": "boolean",
            "title": "Report Required"
          },
          "staffcategory_id": {
            "type": "integer",
            "title": "Staffcategory Id"
          },
          "default_deputat": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Deputat"
          }
        },
        "type": "object",
        "required": [
          "staffcategory",
          "staffcategory_en",
          "report_required",
          "staffcategory_id"
        ],
        "title": "LUFVStaffCategoryNew"
      },
      "LUFVStaffGroup": {
        "properties": {
          "staffgroup": {
            "type": "string",
            "title": "Staffgroup"
          },
          "staffgroup_en": {
            "type": "string",
            "title": "Staffgroup En"
          },
          "contracted": {
            "type": "boolean",
            "title": "Contracted"
          },
          "staffgroup_id": {
            "type": "integer",
            "title": "Staffgroup Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "deputat": {
            "type": "string",
            "title": "Deputat",
            "default": "0"
          },
          "deputat_reduction": {
            "type": "string",
            "title": "Deputat Reduction",
            "default": "0"
          },
          "deputat_reduction_personal": {
            "type": "string",
            "title": "Deputat Reduction Personal",
            "default": "0"
          },
          "lvs": {
            "type": "string",
            "title": "Lvs",
            "default": "0"
          },
          "duty_credits": {
            "type": "integer",
            "title": "Duty Credits",
            "default": 0
          },
          "credits": {
            "type": "integer",
            "title": "Credits",
            "default": 0
          },
          "staffcategories": {
            "items": {
              "$ref": "#/components/schemas/LUFVStaffCategory"
            },
            "type": "array",
            "title": "Staffcategories"
          }
        },
        "type": "object",
        "required": [
          "staffgroup",
          "staffgroup_en",
          "contracted",
          "staffgroup_id",
          "modified",
          "staffcategories"
        ],
        "title": "LUFVStaffGroup"
      },
      "LUFVStaffGroupID": {
        "properties": {
          "staffgroup": {
            "type": "string",
            "title": "Staffgroup"
          },
          "staffgroup_en": {
            "type": "string",
            "title": "Staffgroup En"
          },
          "contracted": {
            "type": "boolean",
            "title": "Contracted"
          },
          "staffgroup_id": {
            "type": "integer",
            "title": "Staffgroup Id"
          }
        },
        "type": "object",
        "required": [
          "staffgroup",
          "staffgroup_en",
          "contracted",
          "staffgroup_id"
        ],
        "title": "LUFVStaffGroupID"
      },
      "LUFVStaffGroupNew": {
        "properties": {
          "staffgroup": {
            "type": "string",
            "title": "Staffgroup"
          },
          "staffgroup_en": {
            "type": "string",
            "title": "Staffgroup En"
          },
          "contracted": {
            "type": "boolean",
            "title": "Contracted"
          },
          "staffgroup_id": {
            "type": "integer",
            "title": "Staffgroup Id"
          },
          "staffcategories": {
            "items": {
              "$ref": "#/components/schemas/LUFVStaffCategoryNew"
            },
            "type": "array",
            "title": "Staffcategories"
          }
        },
        "type": "object",
        "required": [
          "staffgroup",
          "staffgroup_en",
          "contracted",
          "staffgroup_id",
          "staffcategories"
        ],
        "title": "LUFVStaffGroupNew"
      },
      "LUFVThesisCosupervision": {
        "properties": {
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesis Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin Date"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "cancel_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cancel Date"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "student": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
          },
          "reviewer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "assistants": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseUsername"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assistants"
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "job_records": {
            "items": {
              "$ref": "#/components/schemas/LUFVJobRecordUsername"
            },
            "type": "array",
            "title": "Job Records",
            "default": []
          },
          "cosupervision_job": {
            "$ref": "#/components/schemas/LUFVJobBase"
          },
          "cosupervision_course": {
            "$ref": "#/components/schemas/CourseBase"
          }
        },
        "type": "object",
        "required": [
          "thesis_id",
          "begin_date",
          "modified",
          "org",
          "supervisor",
          "program",
          "cosupervision_job",
          "cosupervision_course"
        ],
        "title": "LUFVThesisCosupervision"
      },
      "LanguageSelection": {
        "type": "string",
        "enum": [
          "de",
          "en"
        ],
        "title": "LanguageSelection"
      },
      "LetterContentTemplate": {
        "properties": {
          "recipient_address": {
            "type": "string",
            "title": "Recipient Address",
            "default": "{{ recipient_address }}"
          },
          "body": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/QRCode"
                },
                {
                  "type": "string"
                },
                {
                  "items": {
                    "items": {
                      "anyOf": [
                        {
                          "type": "string"
                        },
                        {
                          "type": "null"
                        }
                      ]
                    },
                    "type": "array"
                  },
                  "type": "array"
                }
              ]
            },
            "type": "array",
            "title": "Body"
          },
          "subject": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Subject"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageSelection",
            "default": "de"
          }
        },
        "type": "object",
        "required": [
          "body"
        ],
        "title": "LetterContentTemplate"
      },
      "LettersTemplate": {
        "properties": {
          "sender_school": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender School"
          },
          "sender_department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Department"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "title": "Date"
          },
          "place": {
            "type": "string",
            "title": "Place",
            "default": "Garching"
          },
          "backaddress": {
            "type": "string",
            "title": "Backaddress",
            "default": "Technische Universität München, 80333 München"
          },
          "sender_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Title"
          },
          "sender_fullname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Fullname"
          },
          "sender_address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Address"
          },
          "sender_phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Phone"
          },
          "sender_fax": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Fax"
          },
          "sender_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Email"
          },
          "sender_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Url"
          },
          "sender_additional_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sender Additional Info"
          },
          "content_template": {
            "$ref": "#/components/schemas/LetterContentTemplate"
          }
        },
        "type": "object",
        "required": [
          "content_template"
        ],
        "title": "LettersTemplate",
        "example": {
          "backaddress": "Technische Universität München, 80333 München",
          "content_template": {
            "body": [
              "{{ gender.greeting }},\nzur {{ ceremony.ceremony_title }} am {{ ceremony.ceremony_date|format_date('%d.%m.%Y um %H:%M') }} Uhr möchten wir Sie herzlich einladen. Das detaillierte Programm finden Sie anbei sowie unter {{ ceremony.url }}.",
              "Falls noch nicht erfolgt, bitten wir Sie baldmöglichst noch um Rückmeldung über unser Online-Formular unter {{ dssnat_frontend_url }}feedback/feedback?token={{ invitation_id }}.",
              "Über Ihre Teilnahme würden wir uns sehr freuen!",
              "Der Link zum Rückmeldeformular ist über den QR-Code erreichbar:",
              {
                "qrcode": "{{ dssnat_frontend_url }}feedback/feedback?token={{ invitation_id }}",
                "size": 100
              },
              "Der QR-Code enthält Ihre persönliche Einladungs-UUID {{ invitation_id }}.",
              "Mit freundlichen Grüßen\n\ni.A. Prof. Johannes Barth\nDekan der TUM School of Natural Sciences"
            ],
            "subject": "Einladung zur {{ ceremony.ceremony_title }}"
          },
          "place": "Garching",
          "sender_address": "Physik-Department\nJames-Franck-Str. 1\n85748 Garching",
          "sender_department": "School Office",
          "sender_email": "phvl@tum.de",
          "sender_fax": "+49 89 289-14474",
          "sender_fullname": "Philipp Höffer v. Loewenfeld",
          "sender_phone": "+49 89 289-12344",
          "sender_school": "TUM School of Natural Sciences",
          "sender_title": "Dr.rer.nat.",
          "sender_url": "www.nat.tum.de"
        }
      },
      "LinkBase": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "link_type": {
            "$ref": "#/components/schemas/CourseLinkType"
          }
        },
        "type": "object",
        "required": [
          "url",
          "link_type"
        ],
        "title": "LinkBase"
      },
      "MHBBase": {
        "properties": {
          "description_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Id Tumonline"
          },
          "description_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Version"
          },
          "description_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Status"
          },
          "description_workload_praesenz": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Workload Praesenz"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content"
          },
          "module_content_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content En"
          },
          "module_outcome": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome"
          },
          "module_outcome_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome En"
          },
          "module_precondition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition"
          },
          "module_precondition_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition En"
          },
          "module_media": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media"
          },
          "module_media_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media En"
          },
          "module_literature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature"
          },
          "module_literature_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature En"
          },
          "module_methods": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods"
          },
          "module_methods_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods En"
          },
          "module_exam": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam"
          },
          "module_exam_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam En"
          },
          "modified_tumonline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Tumonline"
          },
          "module_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Responsible Username"
          },
          "module_editors_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors Usernames"
          },
          "module_followup_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Followup Id"
          },
          "level_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level Tags"
          },
          "language_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Tags"
          },
          "examrepeat_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examrepeat Tags"
          },
          "duration_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Tag"
          },
          "cycle_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Tag"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Author"
          },
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "description_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "templates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates"
          },
          "module_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Levels"
          },
          "module_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Languages"
          },
          "module_examrepeat": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Examrepeat"
          },
          "module_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_cycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "examples": [
                  "PH0001",
                  "NAT3001",
                  "NAT5013b"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_editors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors"
          },
          "in_review": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/MHBDescriptionReviewBase"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Review"
          },
          "catalog_nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogEntryBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Nodes"
          },
          "module_related_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Related Ids"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          },
          "modified_local": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "module_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid From"
          },
          "module_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid Through"
          },
          "module_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Version"
          },
          "module_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Type"
          },
          "module_subtype": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtype"
          },
          "module_weight": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Weight"
          },
          "module_sws": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Sws"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "module_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Status"
          },
          "module_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Remark"
          },
          "module_remark_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Remark En"
          },
          "module_remark_internal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Remark Internal"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          },
          "modified_tumonline_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Tumonline Author"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBaseModule"
          },
          "modified_description": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Description"
          },
          "modified_description_tumonline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Description Tumonline"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "modified",
          "version",
          "org"
        ],
        "title": "MHBBase"
      },
      "MHBCatalogBase": {
        "properties": {
          "catalog_id": {
            "type": "integer",
            "title": "Catalog Id"
          },
          "catalog_tag": {
            "type": "string",
            "title": "Catalog Tag"
          },
          "catalog_title": {
            "type": "string",
            "title": "Catalog Title"
          },
          "catalog_title_en": {
            "type": "string",
            "title": "Catalog Title En"
          },
          "catalog_short": {
            "type": "string",
            "title": "Catalog Short"
          },
          "catalog_short_en": {
            "type": "string",
            "title": "Catalog Short En"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "catalog_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Code"
          },
          "catalog_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Credits"
          },
          "catalog_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Remark"
          },
          "catalog_remark_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Remark En"
          }
        },
        "type": "object",
        "required": [
          "catalog_id",
          "catalog_tag",
          "catalog_title",
          "catalog_title_en",
          "catalog_short",
          "catalog_short_en",
          "modified"
        ],
        "title": "MHBCatalogBase"
      },
      "MHBCatalogBaseAdmin": {
        "properties": {
          "catalog_id": {
            "type": "integer",
            "title": "Catalog Id"
          },
          "catalog_tag": {
            "type": "string",
            "title": "Catalog Tag"
          },
          "catalog_title": {
            "type": "string",
            "title": "Catalog Title"
          },
          "catalog_title_en": {
            "type": "string",
            "title": "Catalog Title En"
          },
          "catalog_short": {
            "type": "string",
            "title": "Catalog Short"
          },
          "catalog_short_en": {
            "type": "string",
            "title": "Catalog Short En"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "catalog_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Code"
          },
          "catalog_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Credits"
          },
          "catalog_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Remark"
          },
          "catalog_remark_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Remark En"
          },
          "current": {
            "type": "boolean",
            "title": "Current"
          },
          "inactive": {
            "type": "boolean",
            "title": "Inactive"
          },
          "sync": {
            "type": "boolean",
            "title": "Sync"
          }
        },
        "type": "object",
        "required": [
          "catalog_id",
          "catalog_tag",
          "catalog_title",
          "catalog_title_en",
          "catalog_short",
          "catalog_short_en",
          "modified",
          "current",
          "inactive",
          "sync"
        ],
        "title": "MHBCatalogBaseAdmin"
      },
      "MHBCatalogEntryBase": {
        "properties": {
          "node_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Valid From"
          },
          "node_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Valid Through"
          },
          "catalog": {
            "$ref": "#/components/schemas/MHBCatalogBase"
          }
        },
        "type": "object",
        "required": [
          "catalog"
        ],
        "title": "MHBCatalogEntryBase"
      },
      "MHBCatalogInfo": {
        "properties": {
          "catalog_infoshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Infoshort"
          },
          "catalog_infoshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Infoshort En"
          },
          "catalog_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info"
          },
          "catalog_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info En"
          },
          "catalog_info_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info Url"
          },
          "catalog_info_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info Url En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          },
          "catalog_tag": {
            "type": "string",
            "title": "Catalog Tag"
          },
          "field": {
            "type": "string",
            "title": "Field"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "sorting",
          "catalog_tag",
          "field",
          "modified"
        ],
        "title": "MHBCatalogInfo"
      },
      "MHBCatalogInfoCreate": {
        "properties": {
          "catalog_infoshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Infoshort"
          },
          "catalog_infoshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Infoshort En"
          },
          "catalog_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info"
          },
          "catalog_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info En"
          },
          "catalog_info_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info Url"
          },
          "catalog_info_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info Url En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          },
          "catalog_tag": {
            "type": "string",
            "title": "Catalog Tag"
          },
          "field": {
            "type": "string",
            "title": "Field"
          }
        },
        "type": "object",
        "required": [
          "sorting",
          "catalog_tag",
          "field"
        ],
        "title": "MHBCatalogInfoCreate"
      },
      "MHBCatalogInfoUpdate": {
        "properties": {
          "catalog_infoshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Infoshort"
          },
          "catalog_infoshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Infoshort En"
          },
          "catalog_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info"
          },
          "catalog_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info En"
          },
          "catalog_info_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info Url"
          },
          "catalog_info_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Info Url En"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          }
        },
        "type": "object",
        "title": "MHBCatalogInfoUpdate"
      },
      "MHBCatalogLocal": {
        "properties": {
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "catalog_tag": {
            "type": "string",
            "title": "Catalog Tag"
          },
          "catalog_title": {
            "type": "string",
            "title": "Catalog Title"
          },
          "catalog_title_en": {
            "type": "string",
            "title": "Catalog Title En"
          },
          "catalog_short": {
            "type": "string",
            "title": "Catalog Short"
          },
          "catalog_short_en": {
            "type": "string",
            "title": "Catalog Short En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "sync": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync"
          },
          "current": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current"
          },
          "inactive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inactive"
          },
          "sync_courseevents": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Courseevents"
          },
          "fpso": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fpso"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          },
          "catalog_id": {
            "type": "integer",
            "title": "Catalog Id"
          },
          "modified_local": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Local"
          }
        },
        "type": "object",
        "required": [
          "catalog_tag",
          "catalog_title",
          "catalog_title_en",
          "catalog_short",
          "catalog_short_en",
          "sorting",
          "catalog_id",
          "modified_local"
        ],
        "title": "MHBCatalogLocal"
      },
      "MHBCatalogLocalCreate": {
        "properties": {
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "catalog_tag": {
            "type": "string",
            "title": "Catalog Tag"
          },
          "catalog_title": {
            "type": "string",
            "title": "Catalog Title"
          },
          "catalog_title_en": {
            "type": "string",
            "title": "Catalog Title En"
          },
          "catalog_short": {
            "type": "string",
            "title": "Catalog Short"
          },
          "catalog_short_en": {
            "type": "string",
            "title": "Catalog Short En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "sync": {
            "type": "boolean",
            "title": "Sync",
            "default": true
          },
          "current": {
            "type": "boolean",
            "title": "Current",
            "default": true
          },
          "inactive": {
            "type": "boolean",
            "title": "Inactive",
            "default": false
          },
          "sync_courseevents": {
            "type": "boolean",
            "title": "Sync Courseevents",
            "default": false
          },
          "fpso": {
            "type": "boolean",
            "title": "Fpso",
            "default": true
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          },
          "catalog_id": {
            "type": "integer",
            "title": "Catalog Id"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "catalog_tag",
          "catalog_title",
          "catalog_title_en",
          "catalog_short",
          "catalog_short_en",
          "sorting",
          "catalog_id"
        ],
        "title": "MHBCatalogLocalCreate"
      },
      "MHBCatalogLocalUpdate": {
        "properties": {
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "catalog_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tag"
          },
          "catalog_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Title"
          },
          "catalog_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Title En"
          },
          "catalog_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Short"
          },
          "catalog_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Short En"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "sync": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync"
          },
          "current": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current"
          },
          "inactive": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inactive"
          },
          "sync_courseevents": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sync Courseevents"
          },
          "fpso": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fpso"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_local_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local Author"
          }
        },
        "type": "object",
        "title": "MHBCatalogLocalUpdate"
      },
      "MHBCatalogSuggestionCatalog": {
        "properties": {
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "suggestedby": {
            "$ref": "#/components/schemas/UserBase"
          },
          "catalog": {
            "$ref": "#/components/schemas/MHBCatalogBase"
          }
        },
        "type": "object",
        "required": [
          "suggestedby",
          "catalog"
        ],
        "title": "MHBCatalogSuggestionCatalog"
      },
      "MHBCatalogSuggestionCreate": {
        "properties": {
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          }
        },
        "type": "object",
        "title": "MHBCatalogSuggestionCreate"
      },
      "MHBCatalogSuggestionModule": {
        "properties": {
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "suggestedby": {
            "$ref": "#/components/schemas/UserBase"
          },
          "module": {
            "items": {
              "$ref": "#/components/schemas/MHBEssential"
            },
            "type": "array",
            "title": "Module"
          }
        },
        "type": "object",
        "required": [
          "suggestedby",
          "module"
        ],
        "title": "MHBCatalogSuggestionModule"
      },
      "MHBCourses": {
        "properties": {
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "module_code": {
            "type": "string",
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid From"
          },
          "module_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid Through"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Version"
          },
          "description_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Id"
          },
          "description_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Version"
          },
          "description_in_progress": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description In Progress"
          },
          "module_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Levels"
          },
          "module_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Languages"
          },
          "module_examrepeat": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Examrepeat"
          },
          "module_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_cycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_versions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Versions"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          },
          "description_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Id Tumonline"
          },
          "description_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Status"
          },
          "description_workload_praesenz": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Workload Praesenz"
          },
          "module_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content"
          },
          "module_content_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content En"
          },
          "module_outcome": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome"
          },
          "module_outcome_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome En"
          },
          "module_precondition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition"
          },
          "module_precondition_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition En"
          },
          "module_media": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media"
          },
          "module_media_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media En"
          },
          "module_literature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature"
          },
          "module_literature_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature En"
          },
          "module_methods": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods"
          },
          "module_methods_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods En"
          },
          "module_exam": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam"
          },
          "module_exam_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam En"
          },
          "modified_tumonline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Tumonline"
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "modified_description": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Description"
          },
          "modified_description_tumonline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Description Tumonline"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "courses": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/CourseRealGroupEvents"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses"
          },
          "exams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Exam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exams"
          },
          "catalog_nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogEntryBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Nodes"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "module_code",
          "version",
          "org"
        ],
        "title": "MHBCourses"
      },
      "MHBCreateFromCourse": {
        "properties": {
          "course_id": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "minItems": 1,
            "title": "Course Id",
            "description": "List of courses, to be included in the module"
          },
          "org_id": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Org Id",
            "description": "Organisation the module will be created in"
          },
          "template": {
            "$ref": "#/components/schemas/MhbTemplateID",
            "description": "Template to use"
          },
          "module_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "examples": [
                  "PH0001",
                  "NAT3001",
                  "NAT5013b"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code",
            "description": "Module code (set automatically, if None)"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 30.0,
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits",
            "description": "Workload of module in credits (estimated by teaching hours, if None)"
          },
          "level_tags": {
            "items": {
              "type": "string",
              "enum": [
                "level_bachelor",
                "level_master",
                "level_gs",
                "level_propaed",
                "level_info"
              ]
            },
            "type": "array",
            "title": "Level Tags",
            "description": "Set level in module description, if more levels are given, depending on template, a module for each level may be created",
            "default": [
              "level_master"
            ]
          },
          "language_tags": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LanguageSelection"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Tags",
            "description": "Set language of module, read from first course, if None"
          },
          "examrepeat_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "enum": [
                    "examrepeat_end",
                    "examrepeat_next"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examrepeat Tags",
            "description": "Set exam repetition, default is set by template"
          },
          "duration_tag": {
            "type": "string",
            "enum": [
              "duration_semester",
              "duration_year",
              "duration_three",
              "duration_more"
            ],
            "title": "Duration Tag",
            "description": "Set module duration",
            "default": "duration_semester"
          },
          "cycle_tag": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "cycle_ws",
                  "cycle_ss",
                  "cycle_both",
                  "cycle_once",
                  "cycle_irregular"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Tag",
            "description": "Set module cycle, default is cycle_ws/cycle_ss according to semester of the first course"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title",
            "description": "Module title in German, if different from title of first course."
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En",
            "description": "Module title in English, if different from title of first course."
          },
          "no_exam": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Exam",
            "description": "Do not create an exam, defaults to False except for levels gs and info"
          },
          "catalog_ids": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Ids",
            "description": "Insert new module in catalogs (dict of level_tags)."
          },
          "suggested_catalog_ids": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Catalog Ids",
            "description": "Insert new module in catalogs (dict of level_tags)."
          },
          "ticket_number": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 12,
                "pattern": "^TUM#[0-9]+$",
                "examples": [
                  "TUM#2023020900000000"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Ticket Number",
            "description": "Ticket number in TUM support ticket system, to send a notification with newly created module data."
          }
        },
        "type": "object",
        "required": [
          "course_id",
          "org_id",
          "template"
        ],
        "title": "MHBCreateFromCourse"
      },
      "MHBDescription": {
        "properties": {
          "description_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Id Tumonline"
          },
          "description_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Version"
          },
          "description_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Status"
          },
          "description_workload_praesenz": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Workload Praesenz"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content"
          },
          "module_content_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content En"
          },
          "module_outcome": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome"
          },
          "module_outcome_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome En"
          },
          "module_precondition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition"
          },
          "module_precondition_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition En"
          },
          "module_media": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media"
          },
          "module_media_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media En"
          },
          "module_literature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature"
          },
          "module_literature_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature En"
          },
          "module_methods": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods"
          },
          "module_methods_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods En"
          },
          "module_exam": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam"
          },
          "module_exam_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam En"
          },
          "modified_tumonline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Tumonline"
          },
          "module_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Responsible Username"
          },
          "module_editors_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors Usernames"
          },
          "module_followup_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Followup Id"
          },
          "level_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level Tags"
          },
          "language_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Tags"
          },
          "examrepeat_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examrepeat Tags"
          },
          "duration_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Tag"
          },
          "cycle_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Tag"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Author"
          },
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "0.0"
          },
          "templates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates"
          },
          "module_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Levels"
          },
          "module_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Languages"
          },
          "module_examrepeat": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Examrepeat"
          },
          "module_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_cycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "examples": [
                  "PH0001",
                  "NAT3001",
                  "NAT5013b"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_editors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors"
          },
          "in_review": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/MHBDescriptionReviewBase"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Review"
          },
          "catalog_nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogEntryBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Nodes"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "description_id",
          "modified"
        ],
        "title": "MHBDescription"
      },
      "MHBDescriptionEdit": {
        "properties": {
          "description_workload_praesenz": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Workload Praesenz"
          },
          "module_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Responsible Username"
          },
          "module_editors_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors Usernames"
          },
          "short": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "subtitle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "precondition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "media": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "literature": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "methods": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "exam": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldEdit"
              },
              {
                "type": "null"
              }
            ]
          },
          "level_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level Tags"
          },
          "language_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Tags"
          },
          "examrepeat_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examrepeat Tags"
          },
          "duration_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Tag"
          },
          "cycle_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Tag"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Author"
          },
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "module_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "examples": [
                  "PH0001",
                  "NAT3001",
                  "NAT5013b"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code"
          },
          "module_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid From"
          },
          "module_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid Through"
          },
          "module_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Version"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "fields_readonly": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Readonly"
          },
          "fields_review": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Review"
          },
          "isadmin": {
            "type": "boolean",
            "title": "Isadmin",
            "default": false
          },
          "versioning": {
            "type": "boolean",
            "title": "Versioning",
            "default": false
          },
          "may_enonly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "May Enonly"
          },
          "courses_hoursperweek_total": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses Hoursperweek Total"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_editors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors"
          },
          "courses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseReal"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses"
          },
          "module_versions": {
            "items": {
              "$ref": "#/components/schemas/MHBDescriptionEssential"
            },
            "type": "array",
            "title": "Module Versions"
          },
          "suggested_catalogs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogSuggestionCatalog"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Catalogs"
          },
          "catalog_nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogEntryBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Nodes"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "0.0"
          },
          "tumonline_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Url",
            "readOnly": true
          },
          "tumonline_spo_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Tumonline Spo Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "description_id",
          "org_id",
          "module_versions",
          "modified",
          "tumonline_url",
          "tumonline_spo_url"
        ],
        "title": "MHBDescriptionEdit"
      },
      "MHBDescriptionEssential": {
        "properties": {
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "module_code": {
            "type": "string",
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid From"
          },
          "module_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid Through"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Version"
          },
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "description_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Version"
          },
          "description_in_progress": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description In Progress"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "module_code",
          "description_id"
        ],
        "title": "MHBDescriptionEssential"
      },
      "MHBDescriptionFieldEdit": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "value_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value En"
          },
          "templates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionFieldTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates"
          },
          "template_groups": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTemplateGroup"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Groups"
          },
          "for_review": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "For Review",
            "default": false
          }
        },
        "type": "object",
        "title": "MHBDescriptionFieldEdit"
      },
      "MHBDescriptionFieldResult": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "value_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value En"
          },
          "templates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionFieldTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates"
          },
          "field": {
            "type": "string",
            "title": "Field"
          },
          "errors": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors"
          },
          "errors_en": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Errors En"
          },
          "warnings": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings"
          },
          "warnings_en": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warnings En"
          }
        },
        "type": "object",
        "required": [
          "field"
        ],
        "title": "MHBDescriptionFieldResult"
      },
      "MHBDescriptionFieldTemplate": {
        "properties": {
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "blobs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionFieldTemplateBlob"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blobs"
          }
        },
        "type": "object",
        "required": [
          "template_key"
        ],
        "title": "MHBDescriptionFieldTemplate"
      },
      "MHBDescriptionFieldTemplateBlob": {
        "properties": {
          "templateblob_key": {
            "type": "string",
            "title": "Templateblob Key"
          },
          "templateblob_value": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Templateblob Value"
          }
        },
        "type": "object",
        "required": [
          "templateblob_key",
          "templateblob_value"
        ],
        "title": "MHBDescriptionFieldTemplateBlob"
      },
      "MHBDescriptionFieldUpdate": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "value_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value En"
          },
          "templates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionFieldTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates"
          }
        },
        "type": "object",
        "title": "MHBDescriptionFieldUpdate"
      },
      "MHBDescriptionHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/MHBDescription"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "MHBDescriptionHits"
      },
      "MHBDescriptionReviewBase": {
        "properties": {
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "value_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value En"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Author"
          }
        },
        "type": "object",
        "title": "MHBDescriptionReviewBase"
      },
      "MHBDescriptionTemplate": {
        "properties": {
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "template": {
            "$ref": "#/components/schemas/MHBTemplateBase"
          },
          "blobs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionTemplateBlob"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Blobs"
          }
        },
        "type": "object",
        "required": [
          "description_id",
          "template_key",
          "template"
        ],
        "title": "MHBDescriptionTemplate"
      },
      "MHBDescriptionTemplateBlob": {
        "properties": {
          "templateblob_value": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Templateblob Value"
          },
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "templateblob_key": {
            "type": "string",
            "title": "Templateblob Key"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "blob": {
            "$ref": "#/components/schemas/MHBTemplateBlobBase"
          }
        },
        "type": "object",
        "required": [
          "templateblob_value",
          "description_id",
          "template_key",
          "templateblob_key",
          "modified",
          "blob"
        ],
        "title": "MHBDescriptionTemplateBlob"
      },
      "MHBDescriptionUpdate": {
        "properties": {
          "description_workload_praesenz": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Workload Praesenz"
          },
          "module_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Responsible Username"
          },
          "module_editors_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors Usernames"
          },
          "short": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "subtitle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "content": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "outcome": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "precondition": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "media": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "literature": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "methods": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "exam": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBDescriptionFieldUpdate"
              },
              {
                "type": "null"
              }
            ]
          },
          "level_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level Tags"
          },
          "language_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Tags"
          },
          "examrepeat_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examrepeat Tags"
          },
          "duration_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Tag"
          },
          "cycle_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Tag"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Author"
          }
        },
        "type": "object",
        "title": "MHBDescriptionUpdate"
      },
      "MHBDescriptionWithSuggestions": {
        "properties": {
          "description_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Id Tumonline"
          },
          "description_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Version"
          },
          "description_status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Status"
          },
          "description_workload_praesenz": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Workload Praesenz"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content"
          },
          "module_content_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Content En"
          },
          "module_outcome": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome"
          },
          "module_outcome_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Outcome En"
          },
          "module_precondition": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition"
          },
          "module_precondition_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Precondition En"
          },
          "module_media": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media"
          },
          "module_media_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Media En"
          },
          "module_literature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature"
          },
          "module_literature_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Literature En"
          },
          "module_methods": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods"
          },
          "module_methods_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Methods En"
          },
          "module_exam": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam"
          },
          "module_exam_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Exam En"
          },
          "modified_tumonline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Tumonline"
          },
          "module_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Responsible Username"
          },
          "module_editors_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors Usernames"
          },
          "module_followup_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Followup Id"
          },
          "level_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Level Tags"
          },
          "language_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Language Tags"
          },
          "examrepeat_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examrepeat Tags"
          },
          "duration_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Tag"
          },
          "cycle_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cycle Tag"
          },
          "modified_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Remark"
          },
          "modified_author": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Author"
          },
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version",
            "default": "0.0"
          },
          "templates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templates"
          },
          "module_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Levels"
          },
          "module_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Languages"
          },
          "module_examrepeat": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Examrepeat"
          },
          "module_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_cycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 12,
                "minLength": 1,
                "examples": [
                  "PH0001",
                  "NAT3001",
                  "NAT5013b"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsernamePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_editors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Editors"
          },
          "in_review": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/MHBDescriptionReviewBase"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "In Review"
          },
          "catalog_nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogEntryBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Nodes"
          },
          "suggested_catalogs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBCatalogSuggestionCatalog"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Catalogs"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "description_id",
          "modified"
        ],
        "title": "MHBDescriptionWithSuggestions"
      },
      "MHBEditControl": {
        "properties": {
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "user_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Group"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "module_code_regex": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code Regex"
          },
          "catalog_tag_regex": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tag Regex"
          },
          "fields_readonly": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Readonly",
            "default": []
          },
          "fields_review": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Review",
            "default": []
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "isadmin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isadmin"
          },
          "versioning": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versioning"
          },
          "may_enonly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "May Enonly"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgBaseModule"
              },
              {
                "type": "null"
              }
            ]
          },
          "templategroups": {
            "additionalProperties": {
              "items": {
                "$ref": "#/components/schemas/MHBTemplateGroup"
              },
              "type": "array"
            },
            "type": "object",
            "title": "Templategroups",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "id",
          "modified"
        ],
        "title": "MHBEditControl"
      },
      "MHBEditControlUpdate": {
        "properties": {
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "user_group": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Group"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "module_code_regex": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Code Regex"
          },
          "catalog_tag_regex": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tag Regex"
          },
          "fields_readonly": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Readonly",
            "default": []
          },
          "fields_review": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fields Review",
            "default": []
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "isadmin": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Isadmin"
          },
          "versioning": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Versioning"
          },
          "may_enonly": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "May Enonly"
          },
          "templategroup_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templategroup Keys"
          }
        },
        "type": "object",
        "title": "MHBEditControlUpdate"
      },
      "MHBEssential": {
        "properties": {
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "module_code": {
            "type": "string",
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid From"
          },
          "module_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid Through"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Version"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "module_code"
        ],
        "title": "MHBEssential"
      },
      "MHBHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/MHBList"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "MHBHits"
      },
      "MHBList": {
        "properties": {
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "module_code": {
            "type": "string",
            "title": "Module Code"
          },
          "module_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title"
          },
          "module_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Title En"
          },
          "module_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Credits"
          },
          "module_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short"
          },
          "module_short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Short En"
          },
          "module_subtitle": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle"
          },
          "module_subtitle_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Subtitle En"
          },
          "module_valid_from": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid From"
          },
          "module_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Valid Through"
          },
          "module_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Version"
          },
          "description_id": {
            "type": "integer",
            "title": "Description Id"
          },
          "description_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description Version"
          },
          "description_in_progress": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description In Progress"
          },
          "module_levels": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Levels"
          },
          "module_languages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Languages"
          },
          "module_examrepeat": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBTagBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Examrepeat"
          },
          "module_duration": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_cycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBTagBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "module_versions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MHBDescriptionEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Versions"
          },
          "catalog_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Catalog Tags"
          }
        },
        "type": "object",
        "required": [
          "module_id",
          "module_code",
          "description_id"
        ],
        "title": "MHBList"
      },
      "MHBOrderby": {
        "type": "string",
        "enum": [
          "code",
          "code:desc",
          "title",
          "title:desc"
        ],
        "title": "MHBOrderby"
      },
      "MHBReview": {
        "properties": {
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "reason_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason En"
          }
        },
        "type": "object",
        "title": "MHBReview"
      },
      "MHBTagBase": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short"
          },
          "short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short En"
          }
        },
        "type": "object",
        "title": "MHBTagBase"
      },
      "MHBTagList": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short"
          },
          "short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short En"
          },
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "tag": {
            "type": "string",
            "title": "Tag"
          }
        },
        "type": "object",
        "required": [
          "sorting",
          "tag"
        ],
        "title": "MHBTagList"
      },
      "MHBTemplate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template En"
          },
          "newversion_template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newversion Template Key"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "templategroup_key": {
            "type": "string",
            "title": "Templategroup Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "blobs": {
            "items": {
              "$ref": "#/components/schemas/MHBTemplateBlobBase"
            },
            "type": "array",
            "title": "Blobs"
          },
          "template_group": {
            "$ref": "#/components/schemas/MHBTemplateGroup"
          }
        },
        "type": "object",
        "required": [
          "template_key",
          "templategroup_key",
          "blobs",
          "template_group"
        ],
        "title": "MHBTemplate"
      },
      "MHBTemplateBase": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template En"
          },
          "newversion_template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newversion Template Key"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "templategroup_key": {
            "type": "string",
            "title": "Templategroup Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "template_key",
          "templategroup_key"
        ],
        "title": "MHBTemplateBase"
      },
      "MHBTemplateBlob": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "default": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "templateblob_key": {
            "type": "string",
            "title": "Templateblob Key"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "template": {
            "$ref": "#/components/schemas/MHBTemplateBase"
          }
        },
        "type": "object",
        "required": [
          "templateblob_key",
          "template_key",
          "template"
        ],
        "title": "MHBTemplateBlob"
      },
      "MHBTemplateBlobBase": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "default": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "templateblob_key": {
            "type": "string",
            "title": "Templateblob Key"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "templateblob_key",
          "template_key"
        ],
        "title": "MHBTemplateBlobBase"
      },
      "MHBTemplateBlobCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "default": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "templateblob_key": {
            "type": "string",
            "title": "Templateblob Key"
          },
          "template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Key"
          }
        },
        "type": "object",
        "required": [
          "templateblob_key"
        ],
        "title": "MHBTemplateBlobCreate"
      },
      "MHBTemplateBlobUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "default": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default"
          },
          "languages": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Languages"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          }
        },
        "type": "object",
        "title": "MHBTemplateBlobUpdate"
      },
      "MHBTemplateCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template En"
          },
          "newversion_template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newversion Template Key"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "templategroup_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Templategroup Key"
          }
        },
        "type": "object",
        "required": [
          "template_key"
        ],
        "title": "MHBTemplateCreate"
      },
      "MHBTemplateDown": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template En"
          },
          "newversion_template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newversion Template Key"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "template_key": {
            "type": "string",
            "title": "Template Key"
          },
          "templategroup_key": {
            "type": "string",
            "title": "Templategroup Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "blobs": {
            "items": {
              "$ref": "#/components/schemas/MHBTemplateBlobBase"
            },
            "type": "array",
            "title": "Blobs"
          }
        },
        "type": "object",
        "required": [
          "template_key",
          "templategroup_key",
          "blobs"
        ],
        "title": "MHBTemplateDown"
      },
      "MHBTemplateGroup": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "template_field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Field"
          },
          "templategroup_key": {
            "type": "string",
            "title": "Templategroup Key"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "required": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Required"
          },
          "templates": {
            "items": {
              "$ref": "#/components/schemas/MHBTemplateDown"
            },
            "type": "array",
            "title": "Templates",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "templategroup_key"
        ],
        "title": "MHBTemplateGroup"
      },
      "MHBTemplateGroupCreate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          },
          "template_field": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Field"
          },
          "templategroup_key": {
            "type": "string",
            "title": "Templategroup Key"
          }
        },
        "type": "object",
        "required": [
          "templategroup_key"
        ],
        "title": "MHBTemplateGroupCreate"
      },
      "MHBTemplateGroupUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          }
        },
        "type": "object",
        "title": "MHBTemplateGroupUpdate"
      },
      "MHBTemplateUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "template": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template"
          },
          "template_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template En"
          },
          "newversion_template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newversion Template Key"
          },
          "sorting": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sorting"
          }
        },
        "type": "object",
        "title": "MHBTemplateUpdate"
      },
      "MailTemplate": {
        "properties": {
          "mailtemplate_subject": {
            "type": "string",
            "title": "Mailtemplate Subject"
          },
          "mailtemplate_body": {
            "type": "string",
            "title": "Mailtemplate Body"
          },
          "mailtemplate_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate From"
          },
          "mailtemplate_name": {
            "type": "string",
            "title": "Mailtemplate Name"
          },
          "mailtemplate_name_en": {
            "type": "string",
            "title": "Mailtemplate Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "mailtemplate_id": {
            "type": "string",
            "title": "Mailtemplate Id"
          },
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "is_editable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Editable"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate_subject",
          "mailtemplate_body",
          "mailtemplate_name",
          "mailtemplate_name_en",
          "org_id",
          "mailtemplate_id",
          "app_id",
          "modified",
          "org"
        ],
        "title": "MailTemplate",
        "example": {
          "mailtemplate_body": "See English version below.\n-------------------------------\n{{ gender.greeting }},\n\n\nMit freundlichen Grüßen\n{{ sender_fullname }}\n\nTechnische Universität München\n{{ sender_school }}\n\n{{ sender_email }}\n{{ sender_www }}\n----------------------------------------\n{{ gender.greeting_en }}.\n\n\n-- \nYours sincerely\n{{ sender_fullname }}\n\nTechnical University of Munich\n{{ sender_school_en }}\n\n{{ sender_email }}\n{{ sender_www }}",
          "mailtemplate_from": "example@tum.de",
          "mailtemplate_id": "mailtype_templatename",
          "mailtemplate_name": "Bezeichnung des Mailtemplates (in Deutsch)",
          "mailtemplate_name_en": "Name of the Mail-Template (in English)",
          "mailtemplate_subject": "Betreff der Nachricht an {{ fullname }}",
          "org_id": 54071
        }
      },
      "MailTemplateCreate": {
        "properties": {
          "mailtemplate_subject": {
            "type": "string",
            "title": "Mailtemplate Subject"
          },
          "mailtemplate_body": {
            "type": "string",
            "title": "Mailtemplate Body"
          },
          "mailtemplate_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate From"
          },
          "mailtemplate_name": {
            "type": "string",
            "title": "Mailtemplate Name"
          },
          "mailtemplate_name_en": {
            "type": "string",
            "title": "Mailtemplate Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "mailtemplate_id": {
            "type": "string",
            "pattern": "^([a-z]+)_[-_a-z0-9A-Z]+$",
            "title": "Mailtemplate Id"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate_subject",
          "mailtemplate_body",
          "mailtemplate_name",
          "mailtemplate_name_en",
          "org_id",
          "mailtemplate_id"
        ],
        "title": "MailTemplateCreate",
        "example": {
          "mailtemplate_body": "See English version below.\n-------------------------------\n{{ gender.greeting }},\n\n\nMit freundlichen Grüßen\n{{ sender_fullname }}\n\nTechnische Universität München\n{{ sender_school }}\n\n{{ sender_email }}\n{{ sender_www }}\n----------------------------------------\n{{ gender.greeting_en }}.\n\n\n-- \nYours sincerely\n{{ sender_fullname }}\n\nTechnical University of Munich\n{{ sender_school_en }}\n\n{{ sender_email }}\n{{ sender_www }}",
          "mailtemplate_from": "example@tum.de",
          "mailtemplate_id": "mailtype_templatename",
          "mailtemplate_name": "Bezeichnung des Mailtemplates (in Deutsch)",
          "mailtemplate_name_en": "Name of the Mail-Template (in English)",
          "mailtemplate_subject": "Betreff der Nachricht an {{ fullname }}",
          "org_id": 54071
        }
      },
      "MailTemplateParticipants": {
        "properties": {
          "participants": {
            "$ref": "#/components/schemas/MailTemplateUser"
          },
          "no_participants": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MailTemplateUser"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "participants"
        ],
        "title": "MailTemplateParticipants"
      },
      "MailTemplateUpdate": {
        "properties": {
          "mailtemplate_subject": {
            "type": "string",
            "title": "Mailtemplate Subject"
          },
          "mailtemplate_body": {
            "type": "string",
            "title": "Mailtemplate Body"
          },
          "mailtemplate_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate From"
          },
          "mailtemplate_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate Name"
          },
          "mailtemplate_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate Name En"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate_subject",
          "mailtemplate_body"
        ],
        "title": "MailTemplateUpdate",
        "example": {
          "mailtemplate_body": "See English version below.\n-------------------------------\n{{ gender.greeting }},\n\n\nMit freundlichen Grüßen\n{{ sender_fullname }}\n\nTechnische Universität München\n{{ sender_school }}\n\n{{ sender_email }}\n{{ sender_www }}\n----------------------------------------\n{{ gender.greeting_en }}.\n\n\n-- \nYours sincerely\n{{ sender_fullname }}\n\nTechnical University of Munich\n{{ sender_school_en }}\n\n{{ sender_email }}\n{{ sender_www }}",
          "mailtemplate_from": "example@tum.de",
          "mailtemplate_name": "Bezeichnung des Mailtemplates (in Deutsch)",
          "mailtemplate_name_en": "Name of the Mail-Template (in English)",
          "mailtemplate_subject": "Betreff der Nachricht an {{ fullname }}"
        }
      },
      "MailTemplateUser": {
        "properties": {
          "subject": {
            "type": "string",
            "title": "Subject"
          },
          "body": {
            "type": "string",
            "title": "Body"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": true,
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "frommail": {
            "type": "string",
            "format": "email",
            "title": "Frommail"
          },
          "additional_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Headers"
          },
          "bcc": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bcc"
          }
        },
        "type": "object",
        "required": [
          "subject",
          "body",
          "frommail"
        ],
        "title": "MailTemplateUser",
        "example": {
          "bcc": "example@tum.de",
          "body": "See English version below.\n-------------------------------\n{{ gender.greeting }},\n\n\nMit freundlichen Grüßen\n{{ sender_fullname }}\n\nTechnische Universität München\n{{ sender_school }}\n\n{{ sender_email }}\n{{ sender_www }}\n----------------------------------------\n{{ gender.greeting_en }}.\n\n\n-- \nYours sincerely\n{{ sender_fullname }}\n\nTechnical University of Munich\n{{ sender_school_en }}\n\n{{ sender_email }}\n{{ sender_www }}",
          "frommail": "example@tum.de",
          "subject": "Betreff der Nachricht an {{ fullname }}"
        }
      },
      "MailType": {
        "properties": {
          "mailtype_id": {
            "type": "string",
            "title": "Mailtype Id"
          },
          "mailtype": {
            "type": "string",
            "title": "Mailtype"
          },
          "mailtype_en": {
            "type": "string",
            "title": "Mailtype En"
          },
          "default_mailtemplate_id": {
            "type": "string",
            "title": "Default Mailtemplate Id"
          },
          "template_schema": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Schema"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "possible_mailtemplates": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MailTemplate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Possible Mailtemplates"
          }
        },
        "type": "object",
        "required": [
          "mailtype_id",
          "mailtype",
          "mailtype_en",
          "default_mailtemplate_id",
          "modified"
        ],
        "title": "MailType"
      },
      "MailTypeBase": {
        "properties": {
          "mailtype_id": {
            "type": "string",
            "title": "Mailtype Id"
          },
          "mailtype": {
            "type": "string",
            "title": "Mailtype"
          },
          "mailtype_en": {
            "type": "string",
            "title": "Mailtype En"
          },
          "default_mailtemplate_id": {
            "type": "string",
            "title": "Default Mailtemplate Id"
          }
        },
        "type": "object",
        "required": [
          "mailtype_id",
          "mailtype",
          "mailtype_en",
          "default_mailtemplate_id"
        ],
        "title": "MailTypeBase"
      },
      "MapType": {
        "properties": {
          "maptype_id": {
            "type": "integer",
            "title": "Maptype Id"
          },
          "maptype": {
            "type": "string",
            "title": "Maptype"
          },
          "maptype_en": {
            "type": "string",
            "title": "Maptype En"
          }
        },
        "type": "object",
        "required": [
          "maptype_id",
          "maptype",
          "maptype_en"
        ],
        "title": "MapType"
      },
      "MapURL": {
        "properties": {
          "map_id": {
            "type": "integer",
            "title": "Map Id"
          },
          "maptype": {
            "$ref": "#/components/schemas/MapType"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url En"
          }
        },
        "type": "object",
        "required": [
          "map_id",
          "maptype"
        ],
        "title": "MapURL"
      },
      "MassMail": {
        "properties": {
          "recipients": {
            "items": {
              "$ref": "#/components/schemas/Recipient"
            },
            "type": "array",
            "title": "Recipients",
            "default": []
          },
          "mailtemplate": {
            "$ref": "#/components/schemas/MailTemplateUser"
          },
          "example": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Email"
              },
              {
                "type": "null"
              }
            ]
          },
          "error": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error"
          },
          "error_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error En"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate"
        ],
        "title": "MassMail"
      },
      "MhbTemplateID": {
        "type": "string",
        "enum": [
          "ph_lmu",
          "ph_other",
          "ph_seminar",
          "ph_special",
          "qst_lmu"
        ],
        "title": "MhbTemplateID"
      },
      "MoodleCourse": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emails"
          },
          "exam_course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Course Code"
          },
          "course": {
            "$ref": "#/components/schemas/CourseBaseMoodle"
          },
          "quizzes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MoodleQuizBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Quizzes"
          }
        },
        "type": "object",
        "required": [
          "course"
        ],
        "title": "MoodleCourse"
      },
      "MoodleCourseCreate": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emails"
          },
          "exam_course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Course Code"
          },
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          },
          "summary_mailtemplate_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary Mailtemplate Id"
          }
        },
        "type": "object",
        "required": [
          "course_id"
        ],
        "title": "MoodleCourseCreate",
        "example": {
          "course_id": 123456789,
          "emails": [
            "test@example.com"
          ],
          "end_date": "2023-02-11",
          "start_date": "2022-10-17"
        }
      },
      "MoodleCourseUpdate": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Emails"
          },
          "exam_course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Course Code"
          },
          "summary_mailtemplate_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Summary Mailtemplate Id"
          }
        },
        "type": "object",
        "title": "MoodleCourseUpdate",
        "example": {
          "emails": [
            "test@example.com"
          ],
          "end_date": "2023-02-11",
          "start_date": "2022-10-17"
        }
      },
      "MoodleQuizBase": {
        "properties": {
          "quiz_id": {
            "type": "integer",
            "title": "Quiz Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "quiz_id",
          "modified"
        ],
        "title": "MoodleQuizBase"
      },
      "Msg": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Message text in German."
          },
          "msg_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message text in English."
          }
        },
        "type": "object",
        "required": [
          "msg"
        ],
        "title": "Msg"
      },
      "MsgTask": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Message text in German."
          },
          "msg_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message text in English."
          },
          "uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "UUID or list of UUIDS of the newly created task(s)."
          },
          "ready": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ready"
          },
          "failed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Failed"
          },
          "successful": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Successful"
          }
        },
        "type": "object",
        "required": [
          "msg",
          "uuid"
        ],
        "title": "MsgTask"
      },
      "MsgTaskNew": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Message text in German."
          },
          "msg_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message text in English."
          },
          "uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "UUID or list of UUIDS of the newly created task(s)."
          }
        },
        "type": "object",
        "required": [
          "msg",
          "uuid"
        ],
        "title": "MsgTaskNew"
      },
      "MsgThesisChanged": {
        "properties": {
          "msg": {
            "type": "string",
            "title": "Message text in German."
          },
          "msg_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message text in English."
          },
          "uuid": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              }
            ],
            "title": "UUID or list of UUIDS of the newly created task(s)."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesis Id"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "begin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Begin Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "preparation_due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation Due Date"
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Start Date"
          },
          "attest": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest"
          },
          "extension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension"
          },
          "extension_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension De"
          },
          "extension_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension En"
          },
          "attest_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest De"
          },
          "attest_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest En"
          }
        },
        "type": "object",
        "required": [
          "msg",
          "uuid",
          "thesis_id"
        ],
        "title": "MsgThesisChanged"
      },
      "NodeType": {
        "type": "string",
        "enum": [
          "Beauftragter",
          "Dekan",
          "Department",
          "Fachschaftsvertretung",
          "Fakultät",
          "Lehrstuhl",
          "Prodekan",
          "Professional Profile",
          "Professur",
          "Studiengang",
          "Studiengangsbündel",
          "Studienorganisation",
          "TUM School",
          "Verwaltung der School"
        ],
        "title": "NodeType"
      },
      "OnboardGroup": {
        "properties": {
          "professor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Professor Username"
          },
          "office_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Office Username"
          }
        },
        "type": "object",
        "title": "OnboardGroup"
      },
      "OnboardSchoolConfig": {
        "properties": {
          "professor_roles": {
            "items": {
              "$ref": "#/components/schemas/TUMonlineRole"
            },
            "type": "array",
            "title": "Professor Roles",
            "default": []
          },
          "office_roles": {
            "items": {
              "$ref": "#/components/schemas/TUMonlineRole"
            },
            "type": "array",
            "title": "Office Roles",
            "default": []
          },
          "proxies": {
            "items": {
              "$ref": "#/components/schemas/ProxyDefinition"
            },
            "type": "array",
            "title": "Proxies",
            "default": []
          },
          "fob_templates": {
            "items": {
              "$ref": "#/components/schemas/FobjectTemplate"
            },
            "type": "array",
            "title": "Fob Templates",
            "default": []
          }
        },
        "type": "object",
        "title": "OnboardSchoolConfig"
      },
      "Org": {
        "properties": {
          "org_id_override": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id Override"
          },
          "org_shorts": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Shorts"
          },
          "org_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Tags"
          },
          "org_name_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Name Override"
          },
          "org_name_en_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Name En Override"
          },
          "org_description_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Description Override"
          },
          "org_description_en_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Description En Override"
          },
          "org_longdescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Longdescription"
          },
          "org_longdescription_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Longdescription En"
          },
          "org_nameshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort"
          },
          "org_nameshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort En"
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgResearchfield"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields",
            "default": []
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^TU[0-9A-Z]{5}$",
                "examples": [
                  "TUS3000",
                  "TUPHE11"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Code"
          },
          "org_type_id": {
            "type": "integer",
            "title": "Org Type Id"
          },
          "org_title": {
            "type": "string",
            "title": "Org Title"
          },
          "org_title_en": {
            "type": "string",
            "title": "Org Title En"
          },
          "org_name": {
            "type": "string",
            "title": "Org Name"
          },
          "org_name_en": {
            "type": "string",
            "title": "Org Name En"
          },
          "org_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Description"
          },
          "org_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Description En"
          },
          "org_teaser": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Teaser"
          },
          "org_teaser_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Teaser En"
          },
          "org_parents": {
            "items": {
              "type": "integer"
            },
            "type": "array",
            "title": "Org Parents"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          },
          "modified_local": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local"
          },
          "modified_tumonline": {
            "type": "string",
            "format": "date-time",
            "title": "Modified Tumonline"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "addresses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgAddress"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Addresses",
            "default": []
          },
          "head": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseInfo"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Head",
            "default": []
          },
          "office": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseInfo"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Office",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "org_type_id",
          "org_title",
          "org_title_en",
          "org_name",
          "org_name_en",
          "org_parents",
          "modified_tumonline",
          "modified"
        ],
        "title": "Org"
      },
      "OrgAddress": {
        "properties": {
          "address_id": {
            "type": "integer",
            "title": "Address Id"
          },
          "address_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address Title"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Street"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Locality"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pcode"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "fax": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fax"
          },
          "office_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Office Info"
          },
          "library_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Library Info"
          },
          "additional_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Title"
          },
          "additional_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "address_id",
          "modified"
        ],
        "title": "OrgAddress"
      },
      "OrgBase": {
        "properties": {
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^TU[0-9A-Z]{5}$",
                "examples": [
                  "TUS3000",
                  "TUPHE11"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Code"
          },
          "org_name": {
            "type": "string",
            "title": "Org Name"
          },
          "org_name_en": {
            "type": "string",
            "title": "Org Name En"
          },
          "org_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Url"
          },
          "org_type": {
            "type": "string",
            "title": "Org Type"
          },
          "org_nameshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort"
          },
          "org_nameshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort En"
          },
          "org_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Email"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgEssential"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "org_name",
          "org_name_en",
          "org_type"
        ],
        "title": "OrgBase",
        "example": {
          "org_code": "TUS3000",
          "org_id": 54439,
          "org_name": "Lehrstuhl für Angewandte Quantentheorie",
          "org_name_en": "Chair of Applied Quantum Theory",
          "org_type": "Lehrstuhl",
          "org_url": "https://www.wmi.badw.de/home",
          "school": {
            "org_code": "TUS3000",
            "org_id": 51898,
            "org_name": "TUM School of Natural Sciences",
            "org_name_en": "TUM School of Natural Sciences",
            "org_url": "https://www.nat.tum.de"
          }
        }
      },
      "OrgBaseModule": {
        "properties": {
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^TU[0-9A-Z]{5}$",
                "examples": [
                  "TUS3000",
                  "TUPHE11"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Code"
          },
          "org_name": {
            "type": "string",
            "title": "Org Name"
          },
          "org_name_en": {
            "type": "string",
            "title": "Org Name En"
          },
          "org_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Url"
          },
          "org_type": {
            "type": "string",
            "title": "Org Type"
          },
          "org_nameshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort"
          },
          "org_nameshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort En"
          },
          "org_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Email"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OrgEssential"
              },
              {
                "type": "null"
              }
            ]
          },
          "mhb_authoritative": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mhb Authoritative"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "org_name",
          "org_name_en",
          "org_type"
        ],
        "title": "OrgBaseModule",
        "example": {
          "org_code": "TUS3000",
          "org_id": 54439,
          "org_name": "Lehrstuhl für Angewandte Quantentheorie",
          "org_name_en": "Chair of Applied Quantum Theory",
          "org_type": "Lehrstuhl",
          "org_url": "https://www.wmi.badw.de/home",
          "school": {
            "org_code": "TUS3000",
            "org_id": 51898,
            "org_name": "TUM School of Natural Sciences",
            "org_name_en": "TUM School of Natural Sciences",
            "org_url": "https://www.nat.tum.de"
          }
        }
      },
      "OrgEssential": {
        "properties": {
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^TU[0-9A-Z]{5}$",
                "examples": [
                  "TUS3000",
                  "TUPHE11"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Code"
          },
          "org_name": {
            "type": "string",
            "title": "Org Name"
          },
          "org_name_en": {
            "type": "string",
            "title": "Org Name En"
          },
          "org_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Url"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "org_name",
          "org_name_en"
        ],
        "title": "OrgEssential"
      },
      "OrgPersonCategory": {
        "properties": {
          "person_category_id": {
            "type": "string",
            "title": "Person Category Id"
          },
          "person_category": {
            "type": "string",
            "title": "Person Category"
          },
          "person_category_en": {
            "type": "string",
            "title": "Person Category En"
          },
          "role_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Role Ids",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "person_category_id",
          "person_category",
          "person_category_en"
        ],
        "title": "OrgPersonCategory"
      },
      "OrgPersonCategoryBase": {
        "properties": {
          "person_category_id": {
            "type": "string",
            "title": "Person Category Id"
          },
          "person_category": {
            "type": "string",
            "title": "Person Category"
          },
          "person_category_en": {
            "type": "string",
            "title": "Person Category En"
          }
        },
        "type": "object",
        "required": [
          "person_category_id",
          "person_category",
          "person_category_en"
        ],
        "title": "OrgPersonCategoryBase"
      },
      "OrgPersonCategoryPersons": {
        "properties": {
          "person_category_id": {
            "type": "string",
            "title": "Person Category Id"
          },
          "person_category": {
            "type": "string",
            "title": "Person Category"
          },
          "person_category_en": {
            "type": "string",
            "title": "Person Category En"
          },
          "persons": {
            "items": {
              "$ref": "#/components/schemas/PersonBaseInfo"
            },
            "type": "array",
            "title": "Persons",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "person_category_id",
          "person_category",
          "person_category_en"
        ],
        "title": "OrgPersonCategoryPersons"
      },
      "OrgPersonCategoryUpdate": {
        "properties": {
          "person_category": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Category"
          },
          "person_category_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Category En"
          }
        },
        "type": "object",
        "title": "OrgPersonCategoryUpdate"
      },
      "OrgResearchfield": {
        "properties": {
          "weight": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Weight"
          },
          "researchfield_0": {
            "type": "string",
            "title": "Researchfield 0"
          },
          "researchfield_1": {
            "type": "string",
            "title": "Researchfield 1"
          },
          "researchfield_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 2",
            "default": ""
          },
          "researchfield_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 3",
            "default": ""
          },
          "total_weight": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Total Weight"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "researchfield": {
            "$ref": "#/components/schemas/Researchfield"
          }
        },
        "type": "object",
        "required": [
          "weight",
          "researchfield_0",
          "researchfield_1",
          "total_weight",
          "org_id",
          "researchfield"
        ],
        "title": "OrgResearchfield"
      },
      "OrgResearchfieldUpdate": {
        "properties": {
          "weight": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Weight"
          },
          "researchfield_0": {
            "type": "string",
            "title": "Researchfield 0"
          },
          "researchfield_1": {
            "type": "string",
            "title": "Researchfield 1"
          },
          "researchfield_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 2",
            "default": ""
          },
          "researchfield_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 3",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "weight",
          "researchfield_0",
          "researchfield_1"
        ],
        "title": "OrgResearchfieldUpdate"
      },
      "OrgRoomBase": {
        "properties": {
          "weight": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Weight"
          },
          "total_weight": {
            "type": "integer",
            "exclusiveMinimum": 0.0,
            "title": "Total Weight"
          },
          "room_code": {
            "type": "string",
            "title": "Room Code"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          }
        },
        "type": "object",
        "required": [
          "weight",
          "total_weight",
          "room_code",
          "org_id",
          "org"
        ],
        "title": "OrgRoomBase"
      },
      "OrgUpdate": {
        "properties": {
          "org_id_override": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id Override"
          },
          "org_shorts": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Shorts"
          },
          "org_tags": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Tags"
          },
          "org_name_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Name Override"
          },
          "org_name_en_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Name En Override"
          },
          "org_description_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Description Override"
          },
          "org_description_en_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Description En Override"
          },
          "org_longdescription": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Longdescription"
          },
          "org_longdescription_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Longdescription En"
          },
          "org_nameshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort"
          },
          "org_nameshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort En"
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgResearchfieldUpdate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          }
        },
        "type": "object",
        "title": "OrgUpdate"
      },
      "Person": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "phones": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phones"
          },
          "homepage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage"
          },
          "visithour": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour"
          },
          "visithour_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour En"
          },
          "vcard_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info"
          },
          "vcard_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info En"
          },
          "picture_tumonline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture Tumonline"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomEssentialBuilding"
              },
              {
                "type": "null"
              }
            ]
          },
          "functions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonFunctionDSB"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zugewiesene Funktionen",
            "default": [],
            "title_en": "Assigned functions"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonLinkBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgs"
          },
          "courses": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/CourseVcard"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses"
          },
          "thesisoffers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisOffer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisoffers"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "Person"
      },
      "PersonBase-Input": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email"
        ],
        "title": "PersonBase"
      },
      "PersonBase-Output": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBase"
      },
      "PersonBaseInfo": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "phones": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phones"
          },
          "homepage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage"
          },
          "visithour": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour"
          },
          "visithour_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour En"
          },
          "vcard_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info"
          },
          "vcard_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info En"
          },
          "picture_tumonline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture Tumonline"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBaseInfo"
      },
      "PersonBaseInternal": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGender",
            "readOnly": true
          },
          "shortfullname": {
            "type": "string",
            "title": "Shortfullname",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "shortfullname"
        ],
        "title": "PersonBaseInternal"
      },
      "PersonBaseOrg": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgs"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBaseOrg"
      },
      "PersonBasePersonID": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBasePersonID"
      },
      "PersonBaseUsername": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBaseUsername"
      },
      "PersonBaseUsernameOrgID": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBaseUsernameOrgID"
      },
      "PersonBaseUsernamePersonID": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonBaseUsernamePersonID"
      },
      "PersonEssential": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          }
        },
        "type": "object",
        "required": [
          "lastname"
        ],
        "title": "PersonEssential"
      },
      "PersonFunction": {
        "properties": {
          "adgroup_pattern": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adgroup Pattern"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id"
          },
          "function_titles": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PersonFunctionTitle"
            },
            "type": "object",
            "title": "Function Titles"
          },
          "persons": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseOrg"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Persons"
          }
        },
        "type": "object",
        "required": [
          "function_id",
          "function_titles"
        ],
        "title": "PersonFunction"
      },
      "PersonFunctionAssignmentUpdate": {
        "properties": {
          "vcard": {
            "type": "boolean",
            "title": "Vcard"
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "vcard"
        ],
        "title": "PersonFunctionAssignmentUpdate"
      },
      "PersonFunctionBase": {
        "properties": {
          "adgroup_pattern": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adgroup Pattern"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id"
          },
          "function_titles": {
            "additionalProperties": {
              "$ref": "#/components/schemas/PersonFunctionTitle"
            },
            "type": "object",
            "title": "Function Titles"
          }
        },
        "type": "object",
        "required": [
          "function_id",
          "function_titles"
        ],
        "title": "PersonFunctionBase"
      },
      "PersonFunctionDSB": {
        "properties": {
          "function": {
            "type": "string",
            "title": "Funktionsbezeichnung in Deutsch",
            "title_en": "Function title in German"
          },
          "function_en": {
            "type": "string",
            "title": "Funktionsbezeichnung in Englisch",
            "title_en": "Function title in English"
          },
          "valid_from": {
            "type": "string",
            "format": "date-time",
            "title": "Beginn der Funktionsperiode",
            "title_en": "Begin of function period"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ende der Funktionsperiode",
            "title_en": "End of function period"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Funktions-E-Mail",
            "title_en": "Functional Email"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage für die Funktion",
            "title_en": "Homepage of the Function"
          },
          "assignment_org": {
            "$ref": "#/components/schemas/OrgBase",
            "title": "Organisation der Funktionszuweisung",
            "title_en": "Organisation the function was assigned at"
          }
        },
        "type": "object",
        "required": [
          "function",
          "function_en",
          "valid_from",
          "assignment_org"
        ],
        "title": "PersonFunctionDSB"
      },
      "PersonFunctionTitle": {
        "properties": {
          "function_title": {
            "type": "string",
            "title": "Function Title"
          },
          "function_title_en": {
            "type": "string",
            "title": "Function Title En"
          }
        },
        "type": "object",
        "required": [
          "function_title",
          "function_title_en"
        ],
        "title": "PersonFunctionTitle"
      },
      "PersonFunctionUpdate": {
        "properties": {
          "adgroup_pattern": {
            "anyOf": [
              {
                "type": "string",
                "format": "regex"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adgroup Pattern"
          }
        },
        "type": "object",
        "title": "PersonFunctionUpdate"
      },
      "PersonGender": {
        "properties": {
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "gender_en": {
            "type": "string",
            "title": "Gender En"
          },
          "gendershort": {
            "type": "string",
            "title": "Gendershort"
          },
          "gendershort_en": {
            "type": "string",
            "title": "Gendershort En"
          },
          "greeting": {
            "type": "string",
            "title": "Greeting"
          },
          "greeting_en": {
            "type": "string",
            "title": "Greeting En"
          },
          "studierender": {
            "type": "string",
            "title": "Studierender"
          },
          "sternin": {
            "type": "string",
            "title": "Sternin"
          },
          "dieder": {
            "type": "string",
            "title": "Dieder"
          },
          "dieden": {
            "type": "string",
            "title": "Dieden"
          },
          "derdem": {
            "type": "string",
            "title": "Derdem"
          },
          "sieer": {
            "type": "string",
            "title": "Sieer"
          },
          "shehe": {
            "type": "string",
            "title": "Shehe"
          },
          "ihrsein": {
            "type": "string",
            "title": "Ihrsein"
          },
          "herhis": {
            "type": "string",
            "title": "Herhis"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id"
          }
        },
        "type": "object",
        "required": [
          "gender",
          "gender_en",
          "gendershort",
          "gendershort_en",
          "greeting",
          "greeting_en",
          "studierender",
          "sternin",
          "dieder",
          "dieden",
          "derdem",
          "sieer",
          "shehe",
          "ihrsein",
          "herhis",
          "gender_id"
        ],
        "title": "PersonGender"
      },
      "PersonGenderBase": {
        "properties": {
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "gender_en": {
            "type": "string",
            "title": "Gender En"
          },
          "gendershort": {
            "type": "string",
            "title": "Gendershort"
          },
          "gendershort_en": {
            "type": "string",
            "title": "Gendershort En"
          }
        },
        "type": "object",
        "required": [
          "gender",
          "gender_en",
          "gendershort",
          "gendershort_en"
        ],
        "title": "PersonGenderBase"
      },
      "PersonGenderBaseID": {
        "properties": {
          "gender": {
            "type": "string",
            "title": "Gender"
          },
          "gender_en": {
            "type": "string",
            "title": "Gender En"
          },
          "gendershort": {
            "type": "string",
            "title": "Gendershort"
          },
          "gendershort_en": {
            "type": "string",
            "title": "Gendershort En"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id"
          }
        },
        "type": "object",
        "required": [
          "gender",
          "gender_en",
          "gendershort",
          "gendershort_en",
          "gender_id"
        ],
        "title": "PersonGenderBaseID"
      },
      "PersonLSF": {
        "properties": {
          "lsf_person_id": {
            "type": "integer",
            "title": "Lsf Person Id"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "lsf_url": {
            "type": "string",
            "title": "Lsf Url"
          },
          "is_public": {
            "type": "boolean",
            "title": "Is Public"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "homepage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Pre"
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Post"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase"
          }
        },
        "type": "object",
        "required": [
          "lsf_person_id",
          "lsf_url",
          "is_public",
          "modified",
          "gender"
        ],
        "title": "PersonLSF"
      },
      "PersonLSFCreate": {
        "properties": {
          "lsf_person_id": {
            "type": "integer",
            "title": "Lsf Person Id"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          }
        },
        "type": "object",
        "required": [
          "lsf_person_id",
          "username"
        ],
        "title": "PersonLSFCreate"
      },
      "PersonLink": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url En"
          },
          "short": {
            "type": "string",
            "title": "Short"
          },
          "short_en": {
            "type": "string",
            "title": "Short En"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "link_id": {
            "type": "integer",
            "title": "Link Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "url",
          "short",
          "short_en",
          "link_id",
          "modified"
        ],
        "title": "PersonLink"
      },
      "PersonLinkBase": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url En"
          },
          "short": {
            "type": "string",
            "title": "Short"
          },
          "short_en": {
            "type": "string",
            "title": "Short En"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          }
        },
        "type": "object",
        "required": [
          "url",
          "short",
          "short_en"
        ],
        "title": "PersonLinkBase"
      },
      "PersonLinkCreate": {
        "properties": {
          "url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url En"
          },
          "short": {
            "type": "string",
            "title": "Short"
          },
          "short_en": {
            "type": "string",
            "title": "Short En"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          }
        },
        "type": "object",
        "required": [
          "url",
          "short",
          "short_en"
        ],
        "title": "PersonLinkCreate"
      },
      "PersonLinkUpdate": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url En"
          },
          "short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short"
          },
          "short_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short En"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          }
        },
        "type": "object",
        "title": "PersonLinkUpdate"
      },
      "PersonList": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "phones": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phones"
          },
          "homepage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage"
          },
          "visithour": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour"
          },
          "visithour_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour En"
          },
          "vcard_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info"
          },
          "vcard_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info En"
          },
          "picture_tumonline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture Tumonline"
          },
          "orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgs"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomEssentialBuilding"
              },
              {
                "type": "null"
              }
            ]
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonList"
      },
      "PersonSimple": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vorame",
            "title_en": "First or given name"
          },
          "lastname": {
            "type": "string",
            "title": "Nachname oder Name",
            "title_en": "Last name or only name"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Akademischer Grad/Titel vor dem Namen",
            "title_en": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Akademischer Grad/Titel nach dem Namen",
            "title_en": "Academic degree or title after the name."
          }
        },
        "type": "object",
        "required": [
          "lastname"
        ],
        "title": "PersonSimple"
      },
      "PersonWithCourses": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "phones": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phones"
          },
          "homepage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage"
          },
          "visithour": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour"
          },
          "visithour_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour En"
          },
          "vcard_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info"
          },
          "vcard_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info En"
          },
          "picture_tumonline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture Tumonline"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomEssentialBuilding"
              },
              {
                "type": "null"
              }
            ]
          },
          "functions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonFunctionDSB"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zugewiesene Funktionen",
            "default": [],
            "title_en": "Assigned functions"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonLinkBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgs"
          },
          "courses": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/CourseVcard"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonWithCourses"
      },
      "PersonWithFunctions": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "phones": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phones"
          },
          "homepage": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Homepage"
          },
          "visithour": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour"
          },
          "visithour_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Visithour En"
          },
          "vcard_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info"
          },
          "vcard_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vcard Info En"
          },
          "picture_tumonline": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Picture Tumonline"
          },
          "room": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RoomEssentialBuilding"
              },
              {
                "type": "null"
              }
            ]
          },
          "functions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonFunctionDSB"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Zugewiesene Funktionen",
            "default": [],
            "title_en": "Assigned functions"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonLinkBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgs"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "PersonWithFunctions"
      },
      "PhdExamListEntry": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "person": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "phd_thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Thesis Title"
          },
          "phd_institution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Institution"
          },
          "active_phd_regulations": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Active Phd Regulations"
          },
          "committee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhdQPAcceptanceCommitteeOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "rundlauf": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhdRundlaufSuggestionsBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "docgs_id"
        ],
        "title": "PhdExamListEntry"
      },
      "PhdExamListResponse": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/PhdExamListEntry"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "PhdExamListResponse"
      },
      "PhdFeedbackSessionIn": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "feedbacksession_date": {
            "type": "string",
            "format": "date",
            "title": "Feedbacksession Date"
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "feedbacksession_date"
        ],
        "title": "PhdFeedbackSessionIn"
      },
      "PhdFeedbackSessionOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "docgs_id": {
            "type": "integer",
            "title": "ID of the associated PhD student project."
          },
          "feedbacksession_date": {
            "type": "string",
            "format": "date",
            "title": "Date of the feedback session."
          },
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes or details of the feedback session."
          },
          "feedbacksession_id": {
            "type": "string",
            "format": "uuid",
            "title": "Feedbacksession Id"
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username"
          },
          "phd_thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Thesis Title"
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "feedbacksession_date",
          "feedbacksession_id"
        ],
        "title": "PhdFeedbackSessionOut"
      },
      "PhdProject": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "qprogram_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qprogram Id"
          },
          "person": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phd_institution": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Institution"
          },
          "gc": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GraduateCenter-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor_department": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Department"
          },
          "date_pl": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Pl"
          },
          "begin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Begin Date"
          },
          "docgs_account_status": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Docgs Account Status"
          },
          "phd_thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Thesis Title"
          },
          "organisation": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organisation"
          },
          "kickoff": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kickoff"
          },
          "committee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhdQPAcceptanceCommitteeOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "internal_external": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal External"
          },
          "feedback_intern": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Intern"
          },
          "feedback_docgs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Docgs"
          },
          "min_membership": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Min Membership"
          },
          "publications_main": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publications Main"
          },
          "qualification_program": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qualification Program"
          },
          "qualification_program_submitted": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Qualification Program Submitted"
          },
          "pause": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pause"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "modified_local": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified Local"
          },
          "version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "version_local": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version Local"
          },
          "nationality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nationality"
          },
          "intended_degree": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Intended Degree"
          },
          "qp_count": {
            "type": "integer",
            "title": "Qp Count"
          },
          "qp_count_exported_docgs": {
            "type": "integer",
            "title": "Qp Count Exported Docgs"
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "qp_count",
          "qp_count_exported_docgs"
        ],
        "title": "PhdProject"
      },
      "PhdProjectDocGsTitle": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "phd_thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Thesis Title"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "username"
        ],
        "title": "PhdProjectDocGsTitle"
      },
      "PhdProjectInfo": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "person": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "kickoff": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kickoff"
          },
          "internal_external": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Internal External",
            "default": "N/A"
          },
          "gc": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GraduateCenter-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "feedback_sessions": {
            "items": {
              "$ref": "#/components/schemas/PhdFeedbackSessionIn"
            },
            "type": "array",
            "title": "Feedback Sessions"
          },
          "committee": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhdQPAcceptanceCommitteeOut"
              },
              {
                "type": "null"
              }
            ]
          },
          "date_pl": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Pl"
          },
          "supervisor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "pause": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pause"
          },
          "docgs_account_status": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Docgs Account Status"
          },
          "total_hours_subjectrelated": {
            "type": "string",
            "title": "Total Hours Subjectrelated"
          },
          "publications_count_mainauthor": {
            "type": "integer",
            "title": "Publications Count Mainauthor"
          },
          "publications_count_coauthor": {
            "type": "integer",
            "title": "Publications Count Coauthor"
          },
          "qp_count": {
            "type": "integer",
            "title": "Qp Count"
          },
          "qp_count_exported_docgs": {
            "type": "integer",
            "title": "Qp Count Exported Docgs"
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "feedback_sessions",
          "total_hours_subjectrelated",
          "publications_count_mainauthor",
          "publications_count_coauthor",
          "qp_count",
          "qp_count_exported_docgs"
        ],
        "title": "PhdProjectInfo"
      },
      "PhdProjectInfoHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/PhdProjectInfo"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "PhdProjectInfoHits"
      },
      "PhdProjectLocalUpdateable": {
        "properties": {
          "committee_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committee Id"
          },
          "username_override": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username Override"
          },
          "supervisor_username_override": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username Override"
          },
          "phd_thesis_title_override": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phd Thesis Title Override"
          },
          "pause": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pause"
          }
        },
        "type": "object",
        "title": "PhdProjectLocalUpdateable"
      },
      "PhdQPAcceptanceCommitteeOut": {
        "properties": {
          "committee_id": {
            "type": "string",
            "title": "Committee Id"
          },
          "committee": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committee"
          },
          "committee_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committee En"
          },
          "voting_duration": {
            "type": "string",
            "format": "duration",
            "title": "Voting Duration"
          },
          "quorum": {
            "type": "integer",
            "title": "Quorum"
          },
          "members_count": {
            "type": "integer",
            "title": "Members Count"
          }
        },
        "type": "object",
        "required": [
          "committee_id",
          "voting_duration",
          "quorum",
          "members_count"
        ],
        "title": "PhdQPAcceptanceCommitteeOut"
      },
      "PhdQPCourseIn": {
        "properties": {
          "course_id": {
            "type": "integer",
            "title": "Course Id"
          }
        },
        "type": "object",
        "required": [
          "course_id"
        ],
        "title": "PhdQPCourseIn"
      },
      "PhdQPElement": {
        "properties": {
          "element_type": {
            "type": "string",
            "title": "Element Type"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "title_en": {
            "type": "string",
            "title": "Title En"
          }
        },
        "type": "object",
        "required": [
          "element_type",
          "title",
          "title_en"
        ],
        "title": "PhdQPElement"
      },
      "PhdQPInternationalIn": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "stay_type": {
            "$ref": "#/components/schemas/QPInternationalENUM"
          },
          "stay_type_other": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stay Type Other"
          },
          "organizer": {
            "type": "string",
            "title": "Organizer"
          },
          "place": {
            "type": "string",
            "title": "Place"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "duration_days": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Days"
          }
        },
        "type": "object",
        "required": [
          "title",
          "stay_type",
          "organizer",
          "place",
          "country_code",
          "start_date",
          "end_date"
        ],
        "title": "PhdQPInternationalIn"
      },
      "PhdQPInternationalOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "stay_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QPInternationalENUM"
              },
              {
                "type": "null"
              }
            ]
          },
          "stay_type_other": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stay Type Other"
          },
          "organizer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizer"
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "duration_days": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Days"
          },
          "stay_id": {
            "type": "string",
            "format": "uuid",
            "title": "Stay Id"
          },
          "country": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "stay_id"
        ],
        "title": "PhdQPInternationalOut"
      },
      "PhdQPPresentationIn": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "event": {
            "type": "string",
            "title": "Event"
          },
          "organizer": {
            "type": "string",
            "title": "Organizer"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date"
          },
          "place": {
            "type": "string",
            "title": "Place"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code"
          }
        },
        "type": "object",
        "required": [
          "title",
          "event",
          "organizer",
          "date",
          "place",
          "country_code"
        ],
        "title": "PhdQPPresentationIn"
      },
      "PhdQPPresentationOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "event": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event"
          },
          "organizer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizer"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "presentation_id": {
            "type": "string",
            "format": "uuid",
            "title": "Presentation Id"
          },
          "country": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "presentation_id"
        ],
        "title": "PhdQPPresentationOut"
      },
      "PhdQPPublicationIn": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "publication_type": {
            "$ref": "#/components/schemas/QPPublicationENUM"
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "submit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submit Date"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "event": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "journal": {
            "type": "string",
            "title": "Journal"
          },
          "volume": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume"
          },
          "issue": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issue"
          },
          "page": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "authors": {
            "type": "string",
            "title": "Authors"
          },
          "is_mainauthor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Mainauthor"
          },
          "is_peerreview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Peerreview"
          },
          "coop_org": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coop Org"
          },
          "coop_supervisor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coop Supervisor"
          }
        },
        "type": "object",
        "required": [
          "title",
          "publication_type",
          "journal",
          "authors"
        ],
        "title": "PhdQPPublicationIn"
      },
      "PhdQPPublicationOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "publication_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QPPublicationENUM"
              },
              {
                "type": "null"
              }
            ]
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "submit_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Submit Date"
          },
          "publication_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Publication Date"
          },
          "event": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Event"
          },
          "reference": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reference"
          },
          "journal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Journal"
          },
          "volume": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Volume"
          },
          "issue": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Issue"
          },
          "page": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page"
          },
          "authors": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Authors"
          },
          "is_mainauthor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Mainauthor"
          },
          "is_peerreview": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Peerreview"
          },
          "coop_org": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coop Org"
          },
          "coop_supervisor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Coop Supervisor"
          },
          "publication_id": {
            "type": "string",
            "format": "uuid",
            "title": "Publication Id"
          },
          "country": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "publication_id"
        ],
        "title": "PhdQPPublicationOut"
      },
      "PhdQPSoftSkillIn": {
        "properties": {
          "softskill_type": {
            "$ref": "#/components/schemas/QPSoftskillsENUM"
          },
          "softskill_type_other": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Softskill Type Other"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Duration Hours"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "organizer": {
            "type": "string",
            "title": "Organizer"
          },
          "place": {
            "type": "string",
            "title": "Place"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          }
        },
        "type": "object",
        "required": [
          "softskill_type",
          "duration_hours",
          "title",
          "country_code",
          "organizer",
          "place",
          "start_date",
          "end_date"
        ],
        "title": "PhdQPSoftSkillIn"
      },
      "PhdQPSoftSkillOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "softskill_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QPSoftskillsENUM"
              },
              {
                "type": "null"
              }
            ]
          },
          "softskill_type_other": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Softskill Type Other"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "organizer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizer"
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "soft_skill_id": {
            "type": "string",
            "format": "uuid",
            "title": "Soft Skill Id"
          },
          "country": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "soft_skill_id"
        ],
        "title": "PhdQPSoftSkillOut"
      },
      "PhdQPSubjectrelatedIn": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "course_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          },
          "course_type": {
            "$ref": "#/components/schemas/QPSubjectrelatedENUM"
          },
          "course_type_other": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Type Other"
          },
          "organizer": {
            "type": "string",
            "title": "Organizer"
          },
          "place": {
            "type": "string",
            "title": "Place"
          },
          "country_code": {
            "type": "string",
            "title": "Country Code"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              }
            ],
            "title": "Duration Hours"
          }
        },
        "type": "object",
        "required": [
          "title",
          "course_type",
          "organizer",
          "place",
          "country_code",
          "start_date",
          "end_date",
          "duration_hours"
        ],
        "title": "PhdQPSubjectrelatedIn"
      },
      "PhdQPSubjectrelatedOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "course_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Id"
          },
          "course_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/QPSubjectrelatedENUM"
              },
              {
                "type": "null"
              }
            ]
          },
          "course_type_other": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Type Other"
          },
          "organizer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizer"
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "country_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Country Code"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "duration_hours": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Hours"
          },
          "training_id": {
            "type": "string",
            "format": "uuid",
            "title": "Training Id"
          },
          "country": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountryBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "training_id"
        ],
        "title": "PhdQPSubjectrelatedOut"
      },
      "PhdQPTeachingIn": {
        "properties": {
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "Record Id"
          }
        },
        "type": "object",
        "required": [
          "record_id"
        ],
        "title": "PhdQPTeachingIn"
      },
      "PhdQPTeachingOut": {
        "properties": {
          "exported_to_docgs": {
            "type": "boolean",
            "title": "Exported To Docgs",
            "default": false
          },
          "record_id": {
            "type": "string",
            "format": "uuid",
            "title": "id of duty"
          },
          "teaching_id": {
            "type": "string",
            "format": "uuid",
            "title": "Teaching Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "org": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org"
          },
          "country": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CountryBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "place": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Place"
          },
          "duration_lvs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration Lvs"
          },
          "semester_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Key"
          }
        },
        "type": "object",
        "required": [
          "record_id",
          "teaching_id"
        ],
        "title": "PhdQPTeachingOut"
      },
      "PhdRundlauf": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "rundlauf_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rundlauf Id"
          },
          "rundlauf_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf Start Date"
          },
          "rundlauf_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf End Date"
          },
          "examiner1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner3": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "chairman": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "node_id": {
            "type": "integer",
            "title": "Node Id"
          },
          "voting_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voting Deadline"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "completed_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Timestamp"
          },
          "count_votes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count Votes",
            "default": 0
          },
          "phd_project": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhdProject"
              },
              {
                "type": "null"
              }
            ]
          },
          "allowed_to_vote": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed To Vote",
            "default": false
          },
          "positiv_votes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Positiv Votes"
          },
          "negativ_votes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negativ Votes"
          },
          "rundlaufvotes": {
            "items": {
              "$ref": "#/components/schemas/PhdRundlaufVote"
            },
            "type": "array",
            "title": "Rundlaufvotes"
          },
          "acceptance_status": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Acceptance Status"
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "rundlauf_id",
          "node_id"
        ],
        "title": "PhdRundlauf"
      },
      "PhdRundlaufCandidateView": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "rundlauf_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rundlauf Id"
          },
          "rundlauf_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf Start Date"
          },
          "rundlauf_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf End Date"
          },
          "examiner1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner3": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "chairman": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "node_id": {
            "type": "integer",
            "title": "Node Id"
          },
          "voting_deadline": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Voting Deadline"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "completed_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Completed Timestamp"
          },
          "count_votes": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count Votes",
            "default": 0
          },
          "phd_project": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PhdProject"
              },
              {
                "type": "null"
              }
            ]
          },
          "allowed_to_vote": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed To Vote",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "rundlauf_id",
          "node_id"
        ],
        "title": "PhdRundlaufCandidateView"
      },
      "PhdRundlaufCommitteeSuggestion": {
        "properties": {
          "examiner1_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner1 Username"
          },
          "examiner2_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner2 Username"
          },
          "examiner3_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner3 Username"
          },
          "chairman_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Chairman Username"
          },
          "good_scientific_practice": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Good Scientific Practice"
          },
          "no_conflicts_of_interest": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "No Conflicts Of Interest"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          }
        },
        "type": "object",
        "title": "PhdRundlaufCommitteeSuggestion"
      },
      "PhdRundlaufEndIn": {
        "properties": {
          "acceptance_comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kommentar zu Entscheidung",
            "title_en": "Comment on acceptance decision"
          },
          "acceptance_status": {
            "type": "boolean",
            "title": "Entscheidung des umlaufs",
            "title_en": "Decision for acceptance procedure"
          },
          "rundlauf_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datum der Entscheidung",
            "title_en": "Date of decision"
          }
        },
        "type": "object",
        "required": [
          "acceptance_status"
        ],
        "title": "PhdRundlaufEndIn"
      },
      "PhdRundlaufFiles": {
        "type": "string",
        "enum": [
          "phd_thesis",
          "expert_opinion_one",
          "expert_opinion_two",
          "expert_opinion_three",
          "resume"
        ],
        "title": "PhdRundlaufFiles"
      },
      "PhdRundlaufStartedFull": {
        "properties": {
          "rundlauf_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf Start Date"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "rundlauf_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rundlauf Id"
          }
        },
        "type": "object",
        "required": [
          "rundlauf_id"
        ],
        "title": "PhdRundlaufStartedFull"
      },
      "PhdRundlaufSuggestionsBase": {
        "properties": {
          "docgs_id": {
            "type": "integer",
            "title": "Docgs Id"
          },
          "rundlauf_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rundlauf Id"
          },
          "rundlauf_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf Start Date"
          },
          "rundlauf_end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rundlauf End Date"
          },
          "examiner1": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner2": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "examiner3": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "chairman": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseInternal"
              },
              {
                "type": "null"
              }
            ]
          },
          "remarks": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remarks"
          },
          "committee_accepted_dean": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committee Accepted Dean"
          },
          "committee_accepted_clerk": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Committee Accepted Clerk"
          }
        },
        "type": "object",
        "required": [
          "docgs_id",
          "rundlauf_id"
        ],
        "title": "PhdRundlaufSuggestionsBase"
      },
      "PhdRundlaufUpdate": {
        "properties": {
          "examiner1_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner1 Username"
          },
          "examiner2_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner2 Username"
          },
          "examiner3_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner3 Username"
          }
        },
        "type": "object",
        "title": "PhdRundlaufUpdate"
      },
      "PhdRundlaufUpdateFull": {
        "properties": {
          "examiner1_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner1 Username"
          },
          "examiner2_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner2 Username"
          },
          "examiner3_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner3 Username"
          },
          "rundlauf_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rundlauf Id"
          }
        },
        "type": "object",
        "required": [
          "rundlauf_id"
        ],
        "title": "PhdRundlaufUpdateFull"
      },
      "PhdRundlaufVote": {
        "properties": {
          "vote_id": {
            "type": "string",
            "format": "uuid",
            "title": "Vote Id"
          },
          "rundlauf_id": {
            "type": "string",
            "format": "uuid",
            "title": "Rundlauf Id"
          },
          "voter": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "accept": {
            "type": "boolean",
            "title": "Accept"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "vote_id",
          "rundlauf_id",
          "accept"
        ],
        "title": "PhdRundlaufVote"
      },
      "PhdRundlaufVoteCreate": {
        "properties": {
          "voter_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Voter Username",
            "examples": [
              "go42tum"
            ]
          },
          "accept": {
            "type": "boolean",
            "title": "Accept"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "required": [
          "voter_username",
          "accept"
        ],
        "title": "PhdRundlaufVoteCreate"
      },
      "PhdRundlaufVoteUpdate": {
        "properties": {
          "accept": {
            "type": "boolean",
            "title": "Accept"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "voter_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Voter Username"
          }
        },
        "type": "object",
        "required": [
          "accept"
        ],
        "title": "PhdRundlaufVoteUpdate"
      },
      "Program": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "stpstudnr": {
            "type": "integer",
            "title": "Stpstudnr"
          },
          "stpstpnr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stpstpnr"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "spo_versions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Spo Versions"
          },
          "valid_from_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "valid_through_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "inactive_after_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "application": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProgramApplicationBase"
            },
            "type": "object",
            "title": "Application"
          },
          "progresschecks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProgramProgressCheckCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progresschecks"
          },
          "mailtemplates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AppProgramMailTemplate"
            },
            "type": "object",
            "title": "Mailtemplates"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "stpstudnr",
          "org",
          "spo_versions",
          "application",
          "mailtemplates",
          "modified"
        ],
        "title": "Program"
      },
      "ProgramApplicationBase": {
        "properties": {
          "application_type": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Type"
          },
          "fachsemester": {
            "anyOf": [
              {
                "items": {
                  "type": "integer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          },
          "application_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Start"
          },
          "application_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application End"
          },
          "application_highersem_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Application Highersem End"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          }
        },
        "type": "object",
        "required": [
          "modified",
          "semester"
        ],
        "title": "ProgramApplicationBase"
      },
      "ProgramBase": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Url"
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Url En"
          },
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree"
        ],
        "title": "ProgramBase"
      },
      "ProgramBaseUpdate": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Url"
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Url En"
          }
        },
        "type": "object",
        "title": "ProgramBaseUpdate"
      },
      "ProgramCombinedBase": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_versions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Spo Versions"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_versions"
        ],
        "title": "ProgramCombinedBase"
      },
      "ProgramHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/ProgramCombinedBase"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "ProgramHits"
      },
      "ProgramMailTemplate": {
        "properties": {
          "mailtemplate_subject": {
            "type": "string",
            "title": "Mailtemplate Subject"
          },
          "mailtemplate_body": {
            "type": "string",
            "title": "Mailtemplate Body"
          },
          "mailtemplate_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mailtemplate From"
          },
          "mailtemplate_name": {
            "type": "string",
            "title": "Mailtemplate Name"
          },
          "mailtemplate_name_en": {
            "type": "string",
            "title": "Mailtemplate Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "mailtemplate_id": {
            "type": "string",
            "title": "Mailtemplate Id"
          },
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "is_editable": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Editable"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "mailtype_id": {
            "type": "string",
            "title": "Mailtype Id"
          },
          "mailtype": {
            "type": "string",
            "title": "Mailtype"
          },
          "mailtype_en": {
            "type": "string",
            "title": "Mailtype En"
          },
          "default_mailtemplate_id": {
            "type": "string",
            "title": "Default Mailtemplate Id"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate_subject",
          "mailtemplate_body",
          "mailtemplate_name",
          "mailtemplate_name_en",
          "org_id",
          "mailtemplate_id",
          "app_id",
          "modified",
          "org",
          "mailtype_id",
          "mailtype",
          "mailtype_en",
          "default_mailtemplate_id"
        ],
        "title": "ProgramMailTemplate",
        "example": {
          "mailtemplate_body": "See English version below.\n-------------------------------\n{{ gender.greeting }},\n\n\nMit freundlichen Grüßen\n{{ sender_fullname }}\n\nTechnische Universität München\n{{ sender_school }}\n\n{{ sender_email }}\n{{ sender_www }}\n----------------------------------------\n{{ gender.greeting_en }}.\n\n\n-- \nYours sincerely\n{{ sender_fullname }}\n\nTechnical University of Munich\n{{ sender_school_en }}\n\n{{ sender_email }}\n{{ sender_www }}",
          "mailtemplate_from": "example@tum.de",
          "mailtemplate_id": "mailtype_templatename",
          "mailtemplate_name": "Bezeichnung des Mailtemplates (in Deutsch)",
          "mailtemplate_name_en": "Name of the Mail-Template (in English)",
          "mailtemplate_subject": "Betreff der Nachricht an {{ fullname }}",
          "org_id": 54071
        }
      },
      "ProgramMailTemplateBase": {
        "properties": {
          "mailtemplate_id": {
            "type": "string",
            "title": "Mailtemplate Id"
          },
          "mailtemplate_name": {
            "type": "string",
            "title": "Mailtemplate Name"
          },
          "mailtemplate_name_en": {
            "type": "string",
            "title": "Mailtemplate Name En"
          }
        },
        "type": "object",
        "required": [
          "mailtemplate_id",
          "mailtemplate_name",
          "mailtemplate_name_en"
        ],
        "title": "ProgramMailTemplateBase"
      },
      "ProgramProgressCheckCreate": {
        "properties": {
          "credits": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credit sum that needs to be reached"
          },
          "special_check": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of a special progress check in German"
          },
          "special_check_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of a special progress check in English"
          },
          "fachsemester": {
            "type": "integer",
            "title": "Fachsemester"
          }
        },
        "type": "object",
        "required": [
          "fachsemester"
        ],
        "title": "ProgramProgressCheckCreate"
      },
      "ProgramSPO": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "stpstudnr": {
            "type": "integer",
            "title": "Stpstudnr"
          },
          "stpstpnr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stpstpnr"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "valid_from_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "valid_through_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "inactive_after_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "stpstudnr",
          "org",
          "modified"
        ],
        "title": "ProgramSPO"
      },
      "ProgramSPOBase": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version"
        ],
        "title": "ProgramSPOBase"
      },
      "ProgramSPOHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/ProgramSPOBase"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "ProgramSPOHits"
      },
      "ProgramSPOPlus": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "stpstudnr": {
            "type": "integer",
            "title": "ID of the study program in the SPO management."
          },
          "stpstpnr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stpstpnr"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "valid_from_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "valid_through_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "inactive_after_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "application": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProgramApplicationBase"
            },
            "type": "object",
            "title": "Application"
          },
          "progresschecks": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ProgramProgressCheckCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Progresschecks"
          },
          "mailtemplates": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AppProgramMailTemplate"
            },
            "type": "object",
            "title": "Mailtemplates"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "stpstudnr",
          "org",
          "modified",
          "application",
          "mailtemplates"
        ],
        "title": "ProgramSPOPlus"
      },
      "ProgramTeam": {
        "properties": {
          "team_name": {
            "type": "string",
            "title": "Name of the team in German."
          },
          "team_name_en": {
            "type": "string",
            "title": "Name of the team in English."
          },
          "team_directions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in German."
          },
          "team_directions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in English."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "E-Mail address of the team. If set this is used instead of the individual person’s emails."
          },
          "team_id": {
            "type": "string",
            "title": "ID of the team."
          },
          "team_head": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "teamtype": {
            "$ref": "#/components/schemas/ProgramTeamTypeBase"
          },
          "team_cc": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseUsername"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Cc"
          }
        },
        "type": "object",
        "required": [
          "team_name",
          "team_name_en",
          "team_id",
          "modified",
          "org",
          "teamtype"
        ],
        "title": "ProgramTeam"
      },
      "ProgramTeamCreate": {
        "properties": {
          "team_name": {
            "type": "string",
            "title": "Team Name"
          },
          "team_name_en": {
            "type": "string",
            "title": "Team Name En"
          },
          "team_directions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in German."
          },
          "team_directions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in English."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "E-Mail address of the team. If set this is used instead of the individual person’s emails."
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "team_head_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Team Head Username",
            "examples": [
              "go42tum"
            ]
          },
          "team_cc_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Usernames of CC adressees."
          },
          "team_id": {
            "type": "string",
            "title": "Team Id"
          }
        },
        "type": "object",
        "required": [
          "team_name",
          "team_name_en",
          "org_id",
          "team_head_username",
          "team_id"
        ],
        "title": "ProgramTeamCreate"
      },
      "ProgramTeamPrograms": {
        "properties": {
          "team_name": {
            "type": "string",
            "title": "Name of the team in German."
          },
          "team_name_en": {
            "type": "string",
            "title": "Name of the team in English."
          },
          "team_directions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in German."
          },
          "team_directions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in English."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "E-Mail address of the team. If set this is used instead of the individual person’s emails."
          },
          "team_id": {
            "type": "string",
            "title": "ID of the team."
          },
          "team_head": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase",
            "title": "Org this team is assigned to."
          },
          "teamtype": {
            "$ref": "#/components/schemas/ProgramTeamTypeBase"
          },
          "team_cc": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseUsername"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Cc"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ProgramSPO"
            },
            "type": "array",
            "title": "Programs"
          }
        },
        "type": "object",
        "required": [
          "team_name",
          "team_name_en",
          "team_id",
          "modified",
          "org",
          "teamtype",
          "programs"
        ],
        "title": "ProgramTeamPrograms"
      },
      "ProgramTeamSimple": {
        "properties": {
          "team_name": {
            "type": "string",
            "title": "Team Name"
          },
          "team_name_en": {
            "type": "string",
            "title": "Team Name En"
          },
          "team_directions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in German."
          },
          "team_directions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in English."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "E-Mail address of the team. If set this is used instead of the individual person’s emails."
          },
          "team_id": {
            "type": "string",
            "title": "Team Id"
          },
          "team_head": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "team_name",
          "team_name_en",
          "team_id"
        ],
        "title": "ProgramTeamSimple"
      },
      "ProgramTeamType": {
        "properties": {
          "teamtype_id": {
            "type": "string",
            "title": "ID of the type of team"
          },
          "teamtype": {
            "type": "string",
            "title": "Name of type in German"
          },
          "teamtype_en": {
            "type": "string",
            "title": "Name of type in English"
          },
          "teams": {
            "items": {
              "$ref": "#/components/schemas/ProgramTeamSimple"
            },
            "type": "array",
            "title": "Teams"
          }
        },
        "type": "object",
        "required": [
          "teamtype_id",
          "teamtype",
          "teamtype_en",
          "teams"
        ],
        "title": "ProgramTeamType"
      },
      "ProgramTeamTypeBase": {
        "properties": {
          "teamtype_id": {
            "type": "string",
            "title": "Teamtype Id"
          },
          "teamtype": {
            "type": "string",
            "title": "Teamtype"
          },
          "teamtype_en": {
            "type": "string",
            "title": "Teamtype En"
          }
        },
        "type": "object",
        "required": [
          "teamtype_id",
          "teamtype",
          "teamtype_en"
        ],
        "title": "ProgramTeamTypeBase"
      },
      "ProgramTeamUpdate": {
        "properties": {
          "team_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name of the team in German."
          },
          "team_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name of the team in English."
          },
          "team_directions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in German."
          },
          "team_directions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Directions from the team, used in email to students in English."
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "E-Mail address of the team. If set this is used instead of the individual person’s emails."
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "team_head_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Head Username"
          },
          "team_cc_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Team Cc Usernames"
          }
        },
        "type": "object",
        "title": "ProgramTeamUpdate"
      },
      "ProxyDefinition": {
        "properties": {
          "app_id": {
            "type": "string",
            "maxLength": 3,
            "minLength": 3,
            "pattern": "^[a-zA-Z]{3}$",
            "title": "App Id"
          },
          "function_id": {
            "type": "string",
            "title": "Function Id"
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "function_id"
        ],
        "title": "ProxyDefinition"
      },
      "QPElementsEnum": {
        "type": "string",
        "enum": [
          "qp_soft_skills",
          "qp_teaching",
          "qp_international",
          "qp_presentation",
          "qp_publication",
          "qp_subjectrelated"
        ],
        "title": "QPElementsEnum"
      },
      "QPInternationalENUM": {
        "type": "string",
        "enum": [
          "research",
          "conference",
          "school",
          "internship",
          "other"
        ],
        "title": "QPInternationalENUM"
      },
      "QPPublicationENUM": {
        "type": "string",
        "enum": [
          "conference",
          "article",
          "patent",
          "pub_presentation"
        ],
        "title": "QPPublicationENUM"
      },
      "QPSoftskillsENUM": {
        "type": "string",
        "enum": [
          "courses",
          "seminars",
          "exercise",
          "lectures",
          "school",
          "workshop",
          "other"
        ],
        "title": "QPSoftskillsENUM"
      },
      "QPSubjectrelatedENUM": {
        "type": "string",
        "enum": [
          "courses",
          "seminars",
          "exercise",
          "lectureseries",
          "symposia",
          "workshop",
          "school",
          "other"
        ],
        "title": "QPSubjectrelatedENUM"
      },
      "QRCode": {
        "properties": {
          "qrcode": {
            "type": "string",
            "title": "Qrcode"
          },
          "size": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "qrcode"
        ],
        "title": "QRCode"
      },
      "QualificationResponse": {
        "properties": {
          "phd_project": {
            "$ref": "#/components/schemas/PhdProject"
          },
          "subjectrelated": {
            "items": {
              "$ref": "#/components/schemas/PhdQPSubjectrelatedOut"
            },
            "type": "array",
            "title": "Subjectrelated"
          },
          "international": {
            "items": {
              "$ref": "#/components/schemas/PhdQPInternationalOut"
            },
            "type": "array",
            "title": "International"
          },
          "feedbacksession": {
            "items": {
              "$ref": "#/components/schemas/PhdFeedbackSessionOut"
            },
            "type": "array",
            "title": "Feedbacksession"
          },
          "publication": {
            "items": {
              "$ref": "#/components/schemas/PhdQPPublicationOut"
            },
            "type": "array",
            "title": "Publication"
          },
          "presentation": {
            "items": {
              "$ref": "#/components/schemas/PhdQPPresentationOut"
            },
            "type": "array",
            "title": "Presentation"
          },
          "teaching": {
            "items": {
              "$ref": "#/components/schemas/PhdQPTeachingOut"
            },
            "type": "array",
            "title": "Teaching"
          },
          "softskill": {
            "items": {
              "$ref": "#/components/schemas/PhdQPSoftSkillOut"
            },
            "type": "array",
            "title": "Softskill"
          },
          "credit_score": {
            "$ref": "#/components/schemas/CreditScoreOut"
          }
        },
        "type": "object",
        "required": [
          "phd_project",
          "subjectrelated",
          "international",
          "feedbacksession",
          "publication",
          "presentation",
          "teaching",
          "softskill",
          "credit_score"
        ],
        "title": "QualificationResponse"
      },
      "Ranking": {
        "properties": {
          "ranking": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in German."
          },
          "ranking_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in English."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in German."
          },
          "text_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in English."
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in German."
          },
          "method_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in English."
          },
          "programs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RankingProgram"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Programs"
          },
          "ranking_id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the ranking."
          },
          "published": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of publication of this ranking."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "partner_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "start_cohort_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Cohort Count"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "students": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RankingStudent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Students"
          }
        },
        "type": "object",
        "required": [
          "ranking_id",
          "modified",
          "org",
          "school",
          "semester"
        ],
        "title": "Ranking"
      },
      "RankingBase": {
        "properties": {
          "ranking": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in German."
          },
          "ranking_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in English."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in German."
          },
          "text_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in English."
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in German."
          },
          "method_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in English."
          },
          "programs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RankingProgram"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Programs"
          },
          "ranking_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ranking Id"
          },
          "published": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "partner_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "start_cohort_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Cohort Count"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          }
        },
        "type": "object",
        "required": [
          "ranking_id",
          "modified",
          "org",
          "school",
          "semester"
        ],
        "title": "RankingBase"
      },
      "RankingCombination": {
        "properties": {
          "ranking": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in German."
          },
          "ranking_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in English."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in German."
          },
          "text_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in English."
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in German."
          },
          "method_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in English."
          },
          "programs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RankingProgram"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Programs"
          },
          "ranking_id": {
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "type": "array",
            "title": "Ranking Id",
            "default": []
          },
          "published": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of publication of this ranking."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "partner_org": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "start_cohort_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Cohort Count"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "students": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RankingStudent"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Students"
          }
        },
        "type": "object",
        "required": [
          "modified",
          "org",
          "school",
          "semester"
        ],
        "title": "RankingCombination"
      },
      "RankingCombine": {
        "properties": {
          "programs": {
            "items": {
              "$ref": "#/components/schemas/RankingProgramCombine"
            },
            "type": "array",
            "title": "Programs"
          }
        },
        "type": "object",
        "required": [
          "programs"
        ],
        "title": "RankingCombine"
      },
      "RankingCreate": {
        "properties": {
          "semesters": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesters"
          },
          "semesters_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesters En"
          },
          "cohort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cohort"
          },
          "cohort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cohort En"
          },
          "ranking_base": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking Base"
          },
          "ranking_base_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking Base En"
          },
          "ranking": {
            "type": "string",
            "title": "Ranking"
          },
          "ranking_en": {
            "type": "string",
            "title": "Ranking En"
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in German."
          },
          "text_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in English."
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in German."
          },
          "method_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in English."
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/RankingProgramCreate"
            },
            "type": "array",
            "title": "Programs"
          },
          "partner_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner org (e.g. double degree university like LMU)."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          }
        },
        "type": "object",
        "required": [
          "ranking",
          "ranking_en",
          "programs",
          "semester_key",
          "org_id"
        ],
        "title": "RankingCreate",
        "example": {
          "method": "Alle Studierenden innerhalb der Kohorte werden grundsätzlich nach der bisher erreichten Note gereiht. Haben Studierende die Soll-Credits für ihr Fachsemester jedoch nicht erreicht, wird für das Ranking stattdessen eine fiktive Note verwendet, bei der die Fehl-Credits mit einer Note von 4,1 eingerechnet wurden.\nAm Ende des {{ fachsemester }}. Fachsemesters sollten {{ credits_target }} Credits erreicht sein. In die Notenberechnung gehen nur die benoteten Prüfungsleistungen ein.{% if credits_target and (credits_node or 0)<credits_target %}\nFür {{ fullname }} ist die so ermittelte, fiktive Ranking-Note {{ ranking_parameter|round(3)|string|replace(\".\",\",\") }}.{% endif %}",
          "method_en": "All students within the cohort are in principle ranked according to the grade achieved to date. However, if a student has not achieved the target credits for their respective semester, instead a fictitious grade is used for the ranking, in which the missing credits were included with a grade of 4,1.\nAt the end of the {{ fachsemester }}. semester {{ credits_target }} credits are expected. The grade is averaged on modules that are graded according to the exam regulations only.{% if credits_target and (credits_node or 0)<credits_target %}\nFor {{ fullname }} this fictitious ranking-grade is {{ ranking_parameter|round(3)|string|replace(\".\",\",\") }}.{% endif %}",
          "org_id": 53022,
          "programs": [
            {
              "cohort_fachsemester": 2,
              "spo_version": "20171",
              "study_id": "163017051"
            },
            {
              "cohort_fachsemester": 2,
              "spo_version": "20201",
              "study_id": "163017051"
            }
          ],
          "ranking": "Semester-Ranking für das 2. Semester im B.Sc. Physik im SS 2022",
          "ranking_en": "Student Ranking for the 2nd semester in the B.Sc. Physics in SS 2022",
          "semester_key": "2022s",
          "text": "{{ fullname }} war im {{ ranking.semester.semester_tag }} im {{ program.degree_program_name }} im {{ fachsemester }}. Fachsemester immatrikuliert und erreichte am Ende dieses Semesters {{ credits }} Credits{% if grade_cut or (grade_node_cut and grade_node_cut<=4) %} und eine Durchschnittsnote von {{ (grade_cut or grade_node_cut)|string|replace(\".\",\",\") }}{% else %}, wobei eine Durchschnittsnote noch nicht ermittelbar war{% endif %}. Damit belegt {{ gender.sieer }} unter den {{ ranking.student_count }} Studierenden desselben Semesters{% if rankshared_count and rankshared_count>1 %} zusammen mit {{ rankshared_count }} anderen Studierenden{% elif rankshared_count %} zusammen mit einer/m anderen Studierenden{% endif %} den Rangplatz {{ rank }} und gehört zu den besten {{ percentile }}%.{% if ranking.start_cohort_count %}\nZu Beginn des Studiums im ersten Fachsemester bestand die Kohorte aus {{ ranking.start_cohort_count }} Studierenden.{% endif %}",
          "text_en": "{{ fullname }} was enrolled in the {{ program.degree_program_name_en }} in the {{ fachsemester }}. semester during {{ ranking.semester.semester_tag }}. At the end of the semester {{ gender.shehe }} achieved {{ credits }} credits{% if grade_cut or (grade_node_cut and grade_node_cut<=4) %} and an average grade of {{ (grade_cut or grade_node_cut)|string|replace(\".\",\",\") }}{% else %} while an average grade could not yet be determined{% endif %}. Within the {{ ranking.student_count }} students of the same semester {{ gender.shehe }} is{% if rankshared_count and rankshared_count>1 %}, together with {{ rankshared_count }} other students,{% elif rankshared_count %}, together with one other student,{% endif %} on rank {{ rank }} within the best {{ percentile }}%.{% if ranking.start_cohort_count %}\nAt the beginning of their studies in the first semester the cohort started with {{ ranking.start_cohort_count }} students.{% endif %}"
        }
      },
      "RankingProgram": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "cohort_fachsemester": {
            "type": "integer",
            "title": "Cohort Fachsemester"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "cohort_fachsemester"
        ],
        "title": "RankingProgram"
      },
      "RankingProgramCombine": {
        "properties": {
          "ranking_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ranking Id"
          },
          "study_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Study Id"
          },
          "spo_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spo Version"
          },
          "cohort_fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cohort Fachsemester"
          }
        },
        "type": "object",
        "required": [
          "ranking_id"
        ],
        "title": "RankingProgramCombine"
      },
      "RankingProgramCreate": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "cohort_fachsemester": {
            "type": "integer",
            "title": "Cohort Fachsemester"
          },
          "student_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Count"
          },
          "start_cohort_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Cohort Count"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "cohort_fachsemester"
        ],
        "title": "RankingProgramCreate"
      },
      "RankingSimple": {
        "properties": {
          "ranking_id": {
            "type": "string",
            "format": "uuid",
            "title": "Ranking Id"
          },
          "published": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Published"
          },
          "ranking": {
            "type": "string",
            "title": "Ranking"
          },
          "ranking_en": {
            "type": "string",
            "title": "Ranking En"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          }
        },
        "type": "object",
        "required": [
          "ranking_id",
          "ranking",
          "ranking_en",
          "semester"
        ],
        "title": "RankingSimple"
      },
      "RankingStudent": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "fachsemester": {
            "type": "integer",
            "title": "Semester of the student in the semester of the ranking."
          },
          "en": {
            "type": "boolean",
            "title": "True if this student has finally failed the program."
          },
          "rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank of the student within the cohort."
          },
          "rankshared_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of students, the rank is shared with."
          },
          "fixed": {
            "type": "boolean",
            "title": "If True entry won't be changed anymore, set after ranking is handed to the student."
          },
          "percentile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile"
          },
          "credits": {
            "type": "string",
            "title": "Total ECTS credits achieved."
          },
          "grade_cut": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Cut"
          },
          "birthdate": {
            "type": "string",
            "format": "date",
            "title": "Date of birth."
          },
          "birthplace": {
            "type": "string",
            "title": "Place of birth."
          },
          "reference_date": {
            "type": "string",
            "format": "date",
            "title": "Reference date for the ranking."
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of semesters with FRV."
          },
          "credits_target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Target credit sum for this semester."
          },
          "credits_node": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credit sum on the relevant node for this semester."
          },
          "grade_node": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade achieved at the relevant node."
          },
          "grade_node_cut": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Node Cut"
          },
          "grade": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade achieved."
          },
          "ranking_parameter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking parameter."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "program": {
            "$ref": "#/components/schemas/ProgramSPOBase"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "rank_live": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank Live"
          },
          "rankshared_count_live": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rankshared Count Live"
          },
          "percentile_live": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile Live"
          },
          "scholarshipinvitations": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ScholarshipInvitation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarshipinvitations"
          },
          "pst_person_nr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pst Person Nr"
          },
          "program_org_id": {
            "type": "integer",
            "title": "Program Org Id"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "studkart_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studkart Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "fachsemester",
          "en",
          "fixed",
          "credits",
          "birthdate",
          "birthplace",
          "reference_date",
          "modified",
          "program",
          "lastname",
          "email",
          "username",
          "program_org_id",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "studkart_url"
        ],
        "title": "RankingStudent"
      },
      "RankingStudentBasePlus": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "fachsemester": {
            "type": "integer",
            "title": "Semester of the student in the semester of the ranking."
          },
          "en": {
            "type": "boolean",
            "title": "True if this student has finally failed the program."
          },
          "rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank of the student within the cohort."
          },
          "rankshared_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of students, the rank is shared with."
          },
          "fixed": {
            "type": "boolean",
            "title": "If True entry won't be changed anymore, set after ranking is handed to the student."
          },
          "percentile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile"
          },
          "credits": {
            "type": "string",
            "title": "Credits"
          },
          "grade_cut": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Cut"
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "fachsemester",
          "en",
          "fixed",
          "credits"
        ],
        "title": "RankingStudentBasePlus"
      },
      "RankingStudentHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/RankingStudentProgramHit"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "RankingStudentHits"
      },
      "RankingStudentNomination": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "fachsemester": {
            "type": "integer",
            "title": "Semester of the student in the semester of the ranking."
          },
          "en": {
            "type": "boolean",
            "title": "True if this student has finally failed the program."
          },
          "rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank of the student within the cohort."
          },
          "rankshared_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of students, the rank is shared with."
          },
          "fixed": {
            "type": "boolean",
            "title": "If True entry won't be changed anymore, set after ranking is handed to the student."
          },
          "percentile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frv"
          },
          "credits_target": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Target"
          },
          "credits_node": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits Node"
          },
          "credits": {
            "type": "string",
            "title": "Credits"
          },
          "grade_node": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Node"
          },
          "grade_node_cut": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Node Cut"
          },
          "grade": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade"
          },
          "grade_cut": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Cut"
          },
          "ranking_parameter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking Parameter"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "pst_person_nr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pst Person Nr"
          },
          "nominated": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "selected",
                  "invited",
                  "accepted",
                  "denied",
                  "timeout"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Nominated",
            "description": "Status of nomination, None if no nomination for this student is stored."
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "studkart_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studkart Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "fachsemester",
          "en",
          "fixed",
          "lastname",
          "email",
          "username",
          "credits",
          "modified",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "studkart_url"
        ],
        "title": "RankingStudentNomination"
      },
      "RankingStudentProgram": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "fachsemester": {
            "type": "integer",
            "title": "Semester of the student in the semester of the ranking."
          },
          "en": {
            "type": "boolean",
            "title": "True if this student has finally failed the program."
          },
          "rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank of the student within the cohort."
          },
          "rankshared_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of students, the rank is shared with."
          },
          "fixed": {
            "type": "boolean",
            "title": "If True entry won't be changed anymore, set after ranking is handed to the student."
          },
          "percentile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile"
          },
          "ranking": {
            "$ref": "#/components/schemas/RankingSimple"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramSPOBase"
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "fachsemester",
          "en",
          "fixed",
          "ranking",
          "program"
        ],
        "title": "RankingStudentProgram"
      },
      "RankingStudentProgramHit": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "fachsemester": {
            "type": "integer",
            "title": "Semester of the student in the semester of the ranking."
          },
          "en": {
            "type": "boolean",
            "title": "True if this student has finally failed the program."
          },
          "rank": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank of the student within the cohort."
          },
          "rankshared_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of students, the rank is shared with."
          },
          "fixed": {
            "type": "boolean",
            "title": "If True entry won't be changed anymore, set after ranking is handed to the student."
          },
          "percentile": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "rank_live": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rank Live"
          },
          "rankshared_count_live": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rankshared Count Live"
          },
          "percentile_live": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentile Live"
          },
          "pst_person_nr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pst Person Nr"
          },
          "ranking": {
            "$ref": "#/components/schemas/RankingSimple"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramSPOBase"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "studkart_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studkart Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "matrikel",
          "fachsemester",
          "en",
          "fixed",
          "lastname",
          "email",
          "username",
          "ranking",
          "program",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "studkart_url"
        ],
        "title": "RankingStudentProgramHit"
      },
      "RankingUpdate": {
        "properties": {
          "ranking": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in German."
          },
          "ranking_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking title in English."
          },
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in German."
          },
          "text_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jinja2 template for the ranking text in English."
          },
          "method": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in German."
          },
          "method_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the ranking method in English."
          },
          "programs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RankingProgramCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Programs"
          },
          "partner_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Partner Org Id"
          }
        },
        "type": "object",
        "title": "RankingUpdate"
      },
      "Recipient": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "address_supplement": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Adress-Erweiterung",
            "title_en": "Address supplement"
          },
          "street": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Straße der Adresse",
            "title_en": "Street of the address"
          },
          "pcode": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "PLZ der Adresse",
            "title_en": "Post code of the address"
          },
          "locality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ort der Adresse",
            "title_en": "Locality of the address"
          },
          "country": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Land der Adresse",
            "title_en": "Country of the address"
          },
          "invitation_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invitation Id"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "additional_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info"
          },
          "additional_info_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional Info En"
          },
          "courses_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses De"
          },
          "courses_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Courses En"
          },
          "exams_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exams De"
          },
          "exams_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exams En"
          },
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "study_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 12,
                "minLength": 9,
                "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
                "examples": [
                  "163017051",
                  "163016066",
                  "163016067",
                  "163016068",
                  "163016069"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Study Id"
          },
          "matrikel": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 8,
                "minLength": 8,
                "pattern": "^[0-9]{8}$",
                "examples": [
                  "00002222"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Matrikel"
          },
          "docgs_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Docgs Id"
          },
          "thesis_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Title"
          },
          "supervisor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBase-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "program": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProgramBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "current_courses": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CourseBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Courses"
          },
          "current_exams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ExamCounts"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Current Exams"
          },
          "lufv_orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVOrgIntegral"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lufv Orgs"
          },
          "lufv_accounts": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LUFVAccountBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lufv Accounts"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "Recipient"
      },
      "Researchfield": {
        "properties": {
          "researchfield_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield Title"
          },
          "researchfield_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield Title En"
          },
          "researchfield_0": {
            "type": "string",
            "title": "Researchfield 0"
          },
          "researchfield_1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 1"
          },
          "researchfield_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 2"
          },
          "researchfield_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 3"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "researchfield_0",
          "modified"
        ],
        "title": "Researchfield"
      },
      "Room": {
        "properties": {
          "room_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short hand for the room."
          },
          "corona_ready": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whether this room should be included in the list of centrally prepared rooms during the pandemic."
          },
          "corona": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special note on room usage during the pandemic in German."
          },
          "corona_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special note on room usage during the pandemic in English."
          },
          "contact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact info in German."
          },
          "contact_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact info in English."
          },
          "bauarbeiten": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on maintenance work affecting this room in German."
          },
          "bauarbeiten_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on maintenance work affecting this room in English."
          },
          "steckdosen": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on access to electricity by students in German."
          },
          "steckdosen_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on access to electricity by students in English."
          },
          "eexam": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on usage for e-exams in German. If not NULL this room is usable for e-exams."
          },
          "eexam_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on usage for e-exams in English."
          },
          "streaming": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on streaming/video-conference equipment available in this room in German."
          },
          "streaming_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on streaming/video-conference equipment available in this room in English."
          },
          "schedule_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to an external schedule."
          },
          "override_seats": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seat count overriding the one from TUMonline."
          },
          "override_teaching": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whether this room is used or not used for teaching (i.e. should be listed/not listed in teaching related apps) despite the default in rooms_purposes.teaching."
          },
          "room_longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Geo-coordinate longitude for this room overriding the building coordinates."
          },
          "room_latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Geo-coordinate latitude for this room overriding the building coordinates."
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of room in TUMonline."
          },
          "room_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "String identifying this external room. If the room is an \"external ressource\" in TUMonline, this is the name of this ressource."
          },
          "room_code": {
            "type": "string",
            "title": "Code of room in TUMonline/SAP or room code assigned locally."
          },
          "ressource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of ressource/calendar to this room in TUMonline, if available."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room description in TUMonline/SAP."
          },
          "floor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "The two-letter code of the floor of the room."
          },
          "seats": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seat count of room."
          },
          "area": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area of room in square meters."
          },
          "teaching": {
            "type": "boolean",
            "title": "Teaching"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "purpose": {
            "$ref": "#/components/schemas/RoomPurposeBase"
          },
          "seatings": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RoomSeatingJoinedBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seatings"
          },
          "purpose_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose Id"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number"
          },
          "building_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Code"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "building": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BuildingBaseRoom"
              },
              {
                "type": "null"
              }
            ]
          },
          "orgs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OrgRoomBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Orgs"
          },
          "maps": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/MapURL"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maps"
          }
        },
        "type": "object",
        "required": [
          "room_code",
          "teaching",
          "purpose",
          "org"
        ],
        "title": "Room"
      },
      "RoomBase": {
        "properties": {
          "room_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short hand for the room."
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of room in TUMonline."
          },
          "room_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "String identifying this external room. If the room is an \"external ressource\" in TUMonline, this is the name of this ressource."
          },
          "room_code": {
            "type": "string",
            "title": "Code of room in TUMonline/SAP or room code assigned locally."
          },
          "ressource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of ressource/calendar to this room in TUMonline, if available."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room description in TUMonline/SAP."
          },
          "schedule_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to an external schedule."
          },
          "floor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "The two-letter code of the floor of the room."
          },
          "seats": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seats"
          },
          "area": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area"
          },
          "teaching": {
            "type": "boolean",
            "title": "Teaching"
          },
          "modified": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified"
          },
          "purpose": {
            "$ref": "#/components/schemas/RoomPurposeBase"
          },
          "seatings": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/RoomSeatingJoinedBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seatings"
          }
        },
        "type": "object",
        "required": [
          "room_code",
          "teaching",
          "purpose"
        ],
        "title": "RoomBase"
      },
      "RoomBaseHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/RoomBase"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "RoomBaseHits"
      },
      "RoomEssential": {
        "properties": {
          "room_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short hand for the room."
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Id"
          },
          "room_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Identifier"
          },
          "room_code": {
            "type": "string",
            "title": "Room Code"
          },
          "ressource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ressource Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "schedule_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule Url"
          },
          "floor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Floor"
          }
        },
        "type": "object",
        "required": [
          "room_code"
        ],
        "title": "RoomEssential"
      },
      "RoomEssentialBuilding": {
        "properties": {
          "room_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short hand for the room."
          },
          "room_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of room in TUMonline."
          },
          "room_identifier": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "String identifying this external room. If the room is an \"external ressource\" in TUMonline, this is the name of this ressource."
          },
          "room_code": {
            "type": "string",
            "title": "Code of room in TUMonline/SAP or room code assigned locally."
          },
          "ressource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of ressource/calendar to this room in TUMonline, if available."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room description in TUMonline/SAP."
          },
          "schedule_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to an external schedule."
          },
          "floor": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "The two-letter code of the floor of the room."
          },
          "building": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/BuildingBaseRoom"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "room_code"
        ],
        "title": "RoomEssentialBuilding"
      },
      "RoomExternalCreate": {
        "properties": {
          "room_identifier": {
            "type": "string",
            "title": "Room Identifier"
          },
          "purpose_id": {
            "type": "integer",
            "title": "Purpose Id"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id",
            "default": 1
          },
          "ressource_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ressource Id"
          },
          "seats": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seats"
          },
          "area": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Area"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "schedule_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule Url"
          },
          "teaching": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Teaching"
          },
          "room_latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Latitude"
          },
          "room_longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Longitude"
          },
          "building_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Building Name"
          },
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address"
          },
          "campus_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Campus Id"
          }
        },
        "type": "object",
        "required": [
          "room_identifier",
          "purpose_id"
        ],
        "title": "RoomExternalCreate"
      },
      "RoomLocalUpdate": {
        "properties": {
          "room_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short hand for the room."
          },
          "corona_ready": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Whether this room should be included in the list of centrally prepared rooms during the pandemic."
          },
          "corona": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special note on room usage during the pandemic in German."
          },
          "corona_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special note on room usage during the pandemic in English."
          },
          "contact": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact info in German."
          },
          "contact_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Contact info in English."
          },
          "bauarbeiten": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on maintenance work affecting this room in German."
          },
          "bauarbeiten_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on maintenance work affecting this room in English."
          },
          "steckdosen": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on access to electricity by students in German."
          },
          "steckdosen_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on access to electricity by students in English."
          },
          "eexam": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on usage for e-exams in German. If not NULL this room is usable for e-exams."
          },
          "eexam_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on usage for e-exams in English."
          },
          "streaming": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on streaming/video-conference equipment available in this room in German."
          },
          "streaming_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note on streaming/video-conference equipment available in this room in English."
          },
          "schedule_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule Url"
          },
          "override_seats": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Seats"
          },
          "override_teaching": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Teaching"
          },
          "room_longitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Longitude"
          },
          "room_latitude": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Room Latitude"
          }
        },
        "type": "object",
        "title": "RoomLocalUpdate"
      },
      "RoomPurposeBase": {
        "properties": {
          "purpose": {
            "type": "string",
            "title": "Purpose"
          },
          "purpose_en": {
            "type": "string",
            "title": "Purpose En"
          }
        },
        "type": "object",
        "required": [
          "purpose",
          "purpose_en"
        ],
        "title": "RoomPurposeBase"
      },
      "RoomSeatBase": {
        "properties": {
          "seat_row": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seat Row"
          },
          "seat_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seat Number"
          },
          "seat_remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seat Remark"
          },
          "seat_tag": {
            "type": "string",
            "title": "Seat Tag"
          }
        },
        "type": "object",
        "required": [
          "seat_tag"
        ],
        "title": "RoomSeatBase"
      },
      "RoomSeatingBaseWithRoom": {
        "properties": {
          "sorting": {
            "type": "integer",
            "title": "Sorting"
          },
          "boarding_order": {
            "type": "integer",
            "title": "Boarding Order"
          },
          "low_priority": {
            "type": "boolean",
            "title": "Low Priority"
          },
          "seat": {
            "$ref": "#/components/schemas/RoomSeatBase"
          },
          "seating_id": {
            "type": "integer",
            "title": "Seating Id"
          },
          "room": {
            "$ref": "#/components/schemas/RoomEssential"
          }
        },
        "type": "object",
        "required": [
          "sorting",
          "boarding_order",
          "low_priority",
          "seat",
          "seating_id",
          "room"
        ],
        "title": "RoomSeatingBaseWithRoom"
      },
      "RoomSeatingJoined": {
        "properties": {
          "seating_id": {
            "type": "integer",
            "title": "Seating Id"
          },
          "seating": {
            "type": "string",
            "title": "Seating"
          },
          "seating_en": {
            "type": "string",
            "title": "Seating En"
          },
          "seat_count": {
            "type": "integer",
            "title": "Seat Count"
          },
          "seats": {
            "items": {
              "$ref": "#/components/schemas/RoomSeatingBaseWithRoom"
            },
            "type": "array",
            "title": "Seats"
          },
          "room": {
            "$ref": "#/components/schemas/RoomEssential"
          }
        },
        "type": "object",
        "required": [
          "seating_id",
          "seating",
          "seating_en",
          "seat_count",
          "seats",
          "room"
        ],
        "title": "RoomSeatingJoined"
      },
      "RoomSeatingJoinedBase": {
        "properties": {
          "seating_id": {
            "type": "integer",
            "title": "Seating Id"
          },
          "seating": {
            "type": "string",
            "title": "Seating"
          },
          "seating_en": {
            "type": "string",
            "title": "Seating En"
          },
          "seat_count": {
            "type": "integer",
            "title": "Seat Count"
          }
        },
        "type": "object",
        "required": [
          "seating_id",
          "seating",
          "seating_en",
          "seat_count"
        ],
        "title": "RoomSeatingJoinedBase"
      },
      "SAPFonds": {
        "properties": {
          "fonds_id": {
            "type": "integer",
            "title": "Fonds Id"
          },
          "sap_cost_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sap Cost Id"
          },
          "fonds_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds Description"
          },
          "cc_emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cc Emails"
          },
          "fonds_responsible": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBase-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "fonds_id"
        ],
        "title": "SAPFonds"
      },
      "SAPFondsCreate": {
        "properties": {
          "sap_cost_id": {
            "type": "string",
            "title": "Sap Cost Id"
          },
          "fonds_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds Description"
          },
          "cc_emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cc Emails"
          },
          "fonds_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds Responsible Username"
          },
          "fonds_id": {
            "type": "integer",
            "title": "Fonds Id"
          }
        },
        "type": "object",
        "required": [
          "sap_cost_id",
          "fonds_id"
        ],
        "title": "SAPFondsCreate"
      },
      "SAPFondsUpdate": {
        "properties": {
          "sap_cost_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sap Cost Id"
          },
          "fonds_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds Description"
          },
          "cc_emails": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "email"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cc Emails"
          },
          "fonds_responsible_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds Responsible Username"
          }
        },
        "type": "object",
        "title": "SAPFondsUpdate"
      },
      "SPOReportConfig": {
        "properties": {
          "ln": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SPOReportConfigPart"
              },
              {
                "type": "null"
              }
            ]
          },
          "pltor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SPOReportConfigPart"
              },
              {
                "type": "null"
              }
            ]
          },
          "tor": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SPOReportConfigPart"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "SPOReportConfig"
      },
      "SPOReportConfigPart": {
        "properties": {
          "anzeige": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Anzeige"
          },
          "credits": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "note": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "semester": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester"
          },
          "thema": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thema"
          },
          "titel": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Titel"
          }
        },
        "type": "object",
        "title": "SPOReportConfigPart"
      },
      "STZAssignment": {
        "properties": {
          "assignment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Assignment Date",
            "description": "Date of assignment"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through",
            "description": "Deadline for assignment"
          },
          "amount": {
            "type": "string",
            "title": "Amount",
            "description": "Amount of assignment in euro"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Internal comment on this assignment"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions",
            "description": "Instructions to the recipient in German"
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions En",
            "description": "Instructions to the recipient in English"
          },
          "fonds": {
            "$ref": "#/components/schemas/SAPFonds"
          },
          "stzmeasure": {
            "$ref": "#/components/schemas/STZMeasureBaseWithConcept"
          }
        },
        "type": "object",
        "required": [
          "assignment_date",
          "amount",
          "fonds",
          "stzmeasure"
        ],
        "title": "STZAssignment"
      },
      "STZAssignmentBase": {
        "properties": {
          "assignment_date": {
            "type": "string",
            "format": "date-time",
            "title": "Assignment Date",
            "description": "Date of assignment"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through",
            "description": "Deadline for assignment"
          },
          "amount": {
            "type": "string",
            "title": "Amount",
            "description": "Amount of assignment in euro"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Internal comment on this assignment"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions",
            "description": "Instructions to the recipient in German"
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions En",
            "description": "Instructions to the recipient in English"
          },
          "fonds": {
            "$ref": "#/components/schemas/SAPFonds"
          }
        },
        "type": "object",
        "required": [
          "assignment_date",
          "amount",
          "fonds"
        ],
        "title": "STZAssignmentBase"
      },
      "STZAssignmentInstructions": {
        "properties": {
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions",
            "description": "Instructions to the recipient in German"
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions En",
            "description": "Instructions to the recipient in English"
          }
        },
        "type": "object",
        "title": "STZAssignmentInstructions"
      },
      "STZConcept": {
        "properties": {
          "stzconcept_id": {
            "type": "string",
            "title": "Stzconcept Id"
          },
          "stzconcept": {
            "type": "string",
            "title": "Stzconcept"
          },
          "stzconcept_en": {
            "type": "string",
            "title": "Stzconcept En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "financeoffice_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Financeoffice Email"
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "stzmeasures": {
            "items": {
              "$ref": "#/components/schemas/STZMeasureBase"
            },
            "type": "array",
            "title": "Stzmeasures"
          }
        },
        "type": "object",
        "required": [
          "stzconcept_id",
          "stzconcept",
          "stzconcept_en",
          "org",
          "school",
          "modified",
          "stzmeasures"
        ],
        "title": "STZConcept"
      },
      "STZConceptBase": {
        "properties": {
          "stzconcept_id": {
            "type": "string",
            "title": "Stzconcept Id"
          },
          "stzconcept": {
            "type": "string",
            "title": "Stzconcept"
          },
          "stzconcept_en": {
            "type": "string",
            "title": "Stzconcept En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "financeoffice_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Financeoffice Email"
          },
          "org": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "school": {
            "$ref": "#/components/schemas/SchoolBase"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "stzconcept_id",
          "stzconcept",
          "stzconcept_en",
          "org",
          "school",
          "modified"
        ],
        "title": "STZConceptBase"
      },
      "STZConceptCreate": {
        "properties": {
          "stzconcept_id": {
            "type": "string",
            "title": "Stzconcept Id"
          },
          "stzconcept": {
            "type": "string",
            "title": "Stzconcept"
          },
          "stzconcept_en": {
            "type": "string",
            "title": "Stzconcept En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "financeoffice_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Financeoffice Email"
          }
        },
        "type": "object",
        "required": [
          "stzconcept_id",
          "stzconcept",
          "stzconcept_en",
          "org_id"
        ],
        "title": "STZConceptCreate"
      },
      "STZConceptUpdate": {
        "properties": {
          "stzconcept_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzconcept Id"
          },
          "stzconcept": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzconcept"
          },
          "stzconcept_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzconcept En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "financeoffice_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Financeoffice Email"
          }
        },
        "type": "object",
        "title": "STZConceptUpdate"
      },
      "STZMeasure": {
        "properties": {
          "stzmeasure_id": {
            "type": "string",
            "title": "Stzmeasure Id"
          },
          "stzmeasure": {
            "type": "string",
            "title": "Stzmeasure"
          },
          "stzmeasure_en": {
            "type": "string",
            "title": "Stzmeasure En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "stzconcept": {
            "$ref": "#/components/schemas/STZConceptBase"
          },
          "assignments": {
            "items": {
              "$ref": "#/components/schemas/STZAssignmentBase"
            },
            "type": "array",
            "title": "Assignments"
          }
        },
        "type": "object",
        "required": [
          "stzmeasure_id",
          "stzmeasure",
          "stzmeasure_en",
          "modified",
          "stzconcept",
          "assignments"
        ],
        "title": "STZMeasure"
      },
      "STZMeasureBase": {
        "properties": {
          "stzmeasure_id": {
            "type": "string",
            "title": "Stzmeasure Id"
          },
          "stzmeasure": {
            "type": "string",
            "title": "Stzmeasure"
          },
          "stzmeasure_en": {
            "type": "string",
            "title": "Stzmeasure En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "stzmeasure_id",
          "stzmeasure",
          "stzmeasure_en",
          "modified"
        ],
        "title": "STZMeasureBase"
      },
      "STZMeasureBaseWithConcept": {
        "properties": {
          "stzmeasure_id": {
            "type": "string",
            "title": "Stzmeasure Id"
          },
          "stzmeasure": {
            "type": "string",
            "title": "Stzmeasure"
          },
          "stzmeasure_en": {
            "type": "string",
            "title": "Stzmeasure En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "stzconcept": {
            "$ref": "#/components/schemas/STZConceptBase"
          }
        },
        "type": "object",
        "required": [
          "stzmeasure_id",
          "stzmeasure",
          "stzmeasure_en",
          "modified",
          "stzconcept"
        ],
        "title": "STZMeasureBaseWithConcept"
      },
      "STZMeasureCreate": {
        "properties": {
          "stzconcept_id": {
            "type": "string",
            "title": "Stzconcept Id"
          },
          "stzmeasure_id": {
            "type": "string",
            "title": "Stzmeasure Id"
          },
          "stzmeasure": {
            "type": "string",
            "title": "Stzmeasure"
          },
          "stzmeasure_en": {
            "type": "string",
            "title": "Stzmeasure En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount"
          }
        },
        "type": "object",
        "required": [
          "stzconcept_id",
          "stzmeasure_id",
          "stzmeasure",
          "stzmeasure_en"
        ],
        "title": "STZMeasureCreate"
      },
      "STZMeasureUpdate": {
        "properties": {
          "stzconcept_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzconcept Id"
          },
          "stzmeasure_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzmeasure Id"
          },
          "stzmeasure": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzmeasure"
          },
          "stzmeasure_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzmeasure En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "max_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Amount"
          }
        },
        "type": "object",
        "title": "STZMeasureUpdate"
      },
      "STZPersonFonds": {
        "properties": {
          "fonds_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds ID from SAP."
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "person": {
            "$ref": "#/components/schemas/PersonBase-Output"
          }
        },
        "type": "object",
        "required": [
          "person"
        ],
        "title": "STZPersonFonds"
      },
      "STZPersonFondsCreate": {
        "properties": {
          "fonds_id": {
            "type": "integer",
            "title": "Fonds Id"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          }
        },
        "type": "object",
        "required": [
          "fonds_id",
          "username"
        ],
        "title": "STZPersonFondsCreate"
      },
      "STZPersonFondsUpdate": {
        "properties": {
          "fonds_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fonds Id"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment"
          }
        },
        "type": "object",
        "title": "STZPersonFondsUpdate"
      },
      "Scholarship": {
        "properties": {
          "scholarship": {
            "type": "string",
            "title": "Scholarship title in German."
          },
          "scholarship_en": {
            "type": "string",
            "title": "Scholarship title in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in English."
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in German."
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in English."
          },
          "eligible_fraction": {
            "type": "string",
            "title": "Fraction of students in a program, that may be nominated."
          },
          "scholarship_id": {
            "type": "string",
            "format": "uuid",
            "title": "Scholarship Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "scholarship",
          "scholarship_en",
          "eligible_fraction",
          "scholarship_id",
          "semester",
          "org"
        ],
        "title": "Scholarship"
      },
      "ScholarshipBaseBase": {
        "properties": {
          "scholarship": {
            "type": "string",
            "title": "Scholarship"
          },
          "scholarship_en": {
            "type": "string",
            "title": "Scholarship En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          }
        },
        "type": "object",
        "required": [
          "scholarship",
          "scholarship_en"
        ],
        "title": "ScholarshipBaseBase"
      },
      "ScholarshipCreate": {
        "properties": {
          "scholarship": {
            "type": "string",
            "title": "Scholarship"
          },
          "scholarship_en": {
            "type": "string",
            "title": "Scholarship En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in English."
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in German."
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in English."
          },
          "eligible_fraction": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Eligible Fraction",
            "default": "1"
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBaseUpdate"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "scholarship",
          "scholarship_en",
          "semester_key",
          "org_id"
        ],
        "title": "ScholarshipCreate",
        "example": {
          "ceremony": {
            "ceremony_date": "2024-11-01",
            "ceremony_description": "<p>Sie wurden durch Ihre School für die Nominierung bei der Studienstiftung des deutschen Volkes vorgeschlagen. Wir möchten Ihre persönlichen Daten jedoch nicht ohne Ihre Zustimmung an Dritte weitergeben.</p>",
            "ceremony_description_en": "<p>You were suggested by your School to be nominated to the German Academic Scholarship Foundation (\"Studienstiftung\"). We do not want to transfer your personal data to a third party without your consent.</p>",
            "ceremony_feedback": "Ich stimme der Weitergabe meiner Daten (Name, Geburtsdatum, E-Mail und Postadresse) an die Studienstiftung des deutschen Volkes zu.",
            "ceremony_feedback_en": "I consent with the transfer of my data (name, birthdate, email and postal address) to the German Academic Scholarship Foundation (\"Studienstiftung\").",
            "feedback_deadline": "2024-11-01 23:59",
            "feedback_end": "2024-11-01 23:59",
            "feedback_start": "2024-10-15 00:00"
          },
          "eligible_fraction": ".05",
          "org_id": 14443,
          "scholarship": "Studienstiftung des deutschen Volkes nach dem SS 2023",
          "scholarship_en": "German Academic Scholarship Foundation (\"Studienstiftung\") after SS 2023",
          "semester_key": "2023s"
        }
      },
      "ScholarshipEssential": {
        "properties": {
          "scholarship_id": {
            "type": "string",
            "format": "uuid",
            "title": "Scholarship Id"
          },
          "scholarship": {
            "type": "string",
            "title": "Scholarship"
          },
          "scholarship_en": {
            "type": "string",
            "title": "Scholarship En"
          }
        },
        "type": "object",
        "required": [
          "scholarship_id",
          "scholarship",
          "scholarship_en"
        ],
        "title": "ScholarshipEssential"
      },
      "ScholarshipInvitation": {
        "properties": {
          "scholarship": {
            "$ref": "#/components/schemas/ScholarshipEssential"
          },
          "invitationemail_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invitationemail Date"
          },
          "feedback_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feedback Date"
          },
          "attendees_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attendees Count"
          }
        },
        "type": "object",
        "required": [
          "scholarship"
        ],
        "title": "ScholarshipInvitation"
      },
      "ScholarshipInvitationBase": {
        "properties": {
          "scholarship": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScholarshipBaseBase"
              },
              {
                "type": "null"
              }
            ],
            "title": "Förderprogramm",
            "title_en": "Scholarship Program"
          },
          "program": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ProgramBase"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studiengang, in dem die Nominierung ausgesprochen wurde",
            "title_en": "Degree program the nomination was given"
          },
          "fachsemester_current": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester im aktuellen Semester",
            "title_en": "Subject semester in current semester"
          },
          "rankingstudent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RankingStudentBasePlus"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester-Ranking, das der Nominierung zugrunde lag",
            "title_en": "Semester ranking the nomination was based on"
          }
        },
        "type": "object",
        "title": "ScholarshipInvitationBase"
      },
      "ScholarshipNominations": {
        "properties": {
          "study_id": {
            "type": "string",
            "maxLength": 12,
            "minLength": 9,
            "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
            "title": "Study Id",
            "examples": [
              "163017051",
              "163016066",
              "163016067",
              "163016068",
              "163016069"
            ]
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "fachsemester": {
            "type": "integer",
            "title": "Fachsemester"
          },
          "student_usernames": {
            "items": {
              "type": "string",
              "maxLength": 7,
              "minLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ]
            },
            "type": "array",
            "uniqueItems": true,
            "title": "Student Usernames"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "fachsemester",
          "student_usernames"
        ],
        "title": "ScholarshipNominations"
      },
      "ScholarshipProgram": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "fachsemester": {
            "type": "integer",
            "title": "Fachsemester"
          },
          "program_factor": {
            "type": "string",
            "title": "Program Factor"
          },
          "ranking": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RankingBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "combine_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Combine Key"
          },
          "candidate_count": {
            "type": "integer",
            "title": "Candidate Count"
          },
          "invited_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited Count"
          },
          "accepted_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Count"
          },
          "suggested_ranking_parameter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Ranking Parameter",
            "description": "Suggested ranking parameter to cut, all candidates with ranking_parameter<=suggested_ranking_parameter should be nominated."
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "fachsemester",
          "program_factor",
          "candidate_count"
        ],
        "title": "ScholarshipProgram"
      },
      "ScholarshipProgramCandidates": {
        "properties": {
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "fachsemester": {
            "type": "integer",
            "title": "Fachsemester"
          },
          "program_factor": {
            "type": "string",
            "title": "Program Factor"
          },
          "ranking": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RankingBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "combine_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Combine Key"
          },
          "candidate_count": {
            "type": "integer",
            "title": "Candidate Count"
          },
          "invited_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited Count"
          },
          "accepted_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Count"
          },
          "suggested_ranking_parameter": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Ranking Parameter",
            "description": "Suggested ranking parameter to cut, all candidates with ranking_parameter<=suggested_ranking_parameter should be nominated."
          },
          "denied_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Count"
          },
          "timeout_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Count"
          },
          "suggested_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Suggested Count"
          },
          "candidates": {
            "items": {
              "$ref": "#/components/schemas/RankingStudentNomination"
            },
            "type": "array",
            "title": "Candidates",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "fachsemester",
          "program_factor",
          "candidate_count"
        ],
        "title": "ScholarshipProgramCandidates"
      },
      "ScholarshipProgramUpdate": {
        "properties": {
          "program_factor": {
            "anyOf": [
              {
                "type": "number",
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Factor",
            "description": "Number of nominations in this program relative to other programs."
          },
          "ranking_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ranking Id",
            "description": "ID of the ranking to be used for this program"
          },
          "combine_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Combine Key",
            "description": "If set, all programs with the same combine_key will be ranked together"
          }
        },
        "type": "object",
        "title": "ScholarshipProgramUpdate"
      },
      "ScholarshipUpdate": {
        "properties": {
          "scholarship": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship"
          },
          "scholarship_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in English."
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in German."
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in English."
          },
          "eligible_fraction": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1.0,
                "minimum": 0.0
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eligible Fraction"
          },
          "semester_key": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Key"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBaseUpdate"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ScholarshipUpdate"
      },
      "ScholarshipWithCandidates": {
        "properties": {
          "scholarship": {
            "type": "string",
            "title": "Scholarship title in German."
          },
          "scholarship_en": {
            "type": "string",
            "title": "Scholarship title in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in English."
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in German."
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in English."
          },
          "eligible_fraction": {
            "type": "string",
            "title": "Fraction of students in a program, that may be nominated."
          },
          "scholarship_id": {
            "type": "string",
            "format": "uuid",
            "title": "Scholarship Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ScholarshipProgramCandidates"
            },
            "type": "array",
            "title": "Programs",
            "default": []
          },
          "candidate_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Candidate Count"
          },
          "invited_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited Count"
          },
          "accepted_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Count"
          },
          "denied_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Count"
          },
          "timeout_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Count"
          },
          "eligible_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eligible Count"
          }
        },
        "type": "object",
        "required": [
          "scholarship",
          "scholarship_en",
          "eligible_fraction",
          "scholarship_id",
          "semester",
          "org"
        ],
        "title": "ScholarshipWithCandidates"
      },
      "ScholarshipWithPrograms": {
        "properties": {
          "scholarship": {
            "type": "string",
            "title": "Scholarship title in German."
          },
          "scholarship_en": {
            "type": "string",
            "title": "Scholarship title in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship description for the students in English."
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in German."
          },
          "instructions_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scholarship instructions for the nominating office in English."
          },
          "eligible_fraction": {
            "type": "string",
            "title": "Fraction of students in a program, that may be nominated."
          },
          "scholarship_id": {
            "type": "string",
            "format": "uuid",
            "title": "Scholarship Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "ceremony": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CeremonyBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ScholarshipProgram"
            },
            "type": "array",
            "title": "Programs"
          },
          "candidate_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Candidate Count"
          },
          "invited_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited Count"
          },
          "accepted_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accepted Count"
          },
          "denied_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Denied Count"
          },
          "timeout_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout Count"
          },
          "eligible_count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Eligible Count"
          }
        },
        "type": "object",
        "required": [
          "scholarship",
          "scholarship_en",
          "eligible_fraction",
          "scholarship_id",
          "semester",
          "org",
          "programs"
        ],
        "title": "ScholarshipWithPrograms"
      },
      "SchoolBase": {
        "properties": {
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "org_code": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^TU[0-9A-Z]{5}$",
                "examples": [
                  "TUS3000",
                  "TUPHE11"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Code"
          },
          "org_name": {
            "type": "string",
            "title": "Org Name"
          },
          "org_name_en": {
            "type": "string",
            "title": "Org Name En"
          },
          "org_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Url"
          },
          "org_type": {
            "type": "string",
            "title": "Org Type"
          },
          "org_nameshort": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort"
          },
          "org_nameshort_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Nameshort En"
          },
          "org_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Email"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "org_name",
          "org_name_en",
          "org_type"
        ],
        "title": "SchoolBase",
        "example": {
          "org_code": "TUS3000",
          "org_id": 51898,
          "org_name": "TUM School of Natural Sciences",
          "org_name_en": "TUM School of Natural Sciences",
          "org_nameshort": "NAT",
          "org_nameshort_en": "NAT",
          "org_type": "TUM School",
          "org_url": "https://www.nat.tum.de"
        }
      },
      "Semester": {
        "properties": {
          "semester_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of this semester in TUMonline (e.g. pStSemNr in application management).\n\nNeeds to be set in order for application dates to be synchronised."
          },
          "studienjahr_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the academic year in TUMonline (e.g. csj_nr in course management).\n\nIn app mhb courses can only be synchronised in semesters with this ID set."
          },
          "semester_id_docgs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of this semester in DocGS (e.g. field_semester[und] in \"Leistung: Lehrbeteiligung\")."
          },
          "semester_id_lmulsf": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of this semester in LSF of LMU.\n\nIf not NULL, activates synchronisation of courses in app mhb, if applicable."
          },
          "lecture_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First day of lecturing period."
          },
          "lecture_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last day of lecturing period."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "semester_tag": {
            "type": "string",
            "title": "Semester Tag"
          },
          "semester_period_start": {
            "type": "string",
            "format": "date",
            "title": "Semester Period Start"
          },
          "semester_period_end": {
            "type": "string",
            "format": "date",
            "title": "Semester Period End"
          },
          "semester_title": {
            "type": "string",
            "title": "Semester Title"
          },
          "semester_title_en": {
            "type": "string",
            "title": "Semester Title En"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "semester_tag",
          "semester_period_start",
          "semester_period_end",
          "semester_title",
          "semester_title_en",
          "modified"
        ],
        "title": "Semester",
        "example": {
          "lecture_period_end": "2021-02-12",
          "lecture_period_start": "2020-11-02",
          "modified": "2021-08-19T11:15:35.197892+02:00",
          "semester_id_docgs": 22,
          "semester_id_lmulsf": 20202,
          "semester_id_tumonline": 193,
          "semester_key": "2020w",
          "semester_period_end": "2021-03-31",
          "semester_period_start": "2020-10-01",
          "semester_tag": "WS 2020/1",
          "semester_title": "Wintersemester 2020/21",
          "semester_title_en": "Winter Semester 2020/21",
          "studienjahr_id_tumonline": 1611
        }
      },
      "SemesterBase": {
        "properties": {
          "semester_tag": {
            "type": "string",
            "title": "Short tag (e.g. \"WS 2020/1\") of semester."
          },
          "semester_title": {
            "type": "string",
            "title": "Long tag of semester in German (e.g. \"Wintersemester 2020/21\")."
          },
          "semester_title_en": {
            "type": "string",
            "title": "Long tag of semester in English (e.g. \"Winter Semester 2020/21\")."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "semester_period_start": {
            "type": "string",
            "format": "date",
            "title": "Semester Period Start"
          },
          "semester_period_end": {
            "type": "string",
            "format": "date",
            "title": "Semester Period End"
          },
          "lecture_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecture Period Start"
          },
          "lecture_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecture Period End"
          }
        },
        "type": "object",
        "required": [
          "semester_tag",
          "semester_title",
          "semester_title_en",
          "semester_key",
          "semester_period_start",
          "semester_period_end"
        ],
        "title": "SemesterBase"
      },
      "SemesterBaseLSF": {
        "properties": {
          "semester_tag": {
            "type": "string",
            "title": "Short tag (e.g. \"WS 2020/1\") of semester."
          },
          "semester_title": {
            "type": "string",
            "title": "Long tag of semester in German (e.g. \"Wintersemester 2020/21\")."
          },
          "semester_title_en": {
            "type": "string",
            "title": "Long tag of semester in English (e.g. \"Winter Semester 2020/21\")."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key constructed by the year the semester starts followed by the letter \"w\" for winter semester or \"s\" for summer semester."
          },
          "semester_period_start": {
            "type": "string",
            "format": "date",
            "title": "First day of semester (usually 1st of October/April)."
          },
          "semester_period_end": {
            "type": "string",
            "format": "date",
            "title": "Last day of semester (usually 30th of September/31st of March)."
          },
          "lecture_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First day of lecturing period."
          },
          "lecture_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last day of lecturing period."
          },
          "semester_id_lmulsf": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Lmulsf"
          }
        },
        "type": "object",
        "required": [
          "semester_tag",
          "semester_title",
          "semester_title_en",
          "semester_key",
          "semester_period_start",
          "semester_period_end"
        ],
        "title": "SemesterBaseLSF"
      },
      "SemesterDate": {
        "properties": {
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Key of the semester this date is referring to. This defaults to the semester conatining the date but the date does not need to be during this semester (e.g. the deadline for course announcements in a semester is well before the semester starts)."
          },
          "datetype": {
            "type": "string",
            "title": "ID of type of date from semesters_datetypes.datetype."
          },
          "semesterdate_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of start of the date. NULL for deadlines where only end date/time are relevant."
          },
          "semesterdate_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of end of date."
          },
          "semesterdate_title": {
            "type": "string",
            "title": "Name of date in German."
          },
          "semesterdate_title_en": {
            "type": "string",
            "title": "Name of date in English."
          },
          "semesterdate_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional description of date in German."
          },
          "semesterdate_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional description of date in English."
          },
          "semesterdate_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional link on the date."
          },
          "semesterdate_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional link on the date in English language, if available and different from semesterdate_url."
          },
          "semesterdate_id": {
            "type": "integer",
            "title": "Semesterdate Id"
          },
          "semesterdate": {
            "type": "string",
            "format": "date-time",
            "title": "Semesterdate"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "semester_datetype": {
            "$ref": "#/components/schemas/SemesterDateType"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "datetype",
          "semesterdate_title",
          "semesterdate_title_en",
          "semesterdate_id",
          "semesterdate",
          "modified",
          "semester_datetype"
        ],
        "title": "SemesterDate"
      },
      "SemesterDateCreate": {
        "properties": {
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "datetype": {
            "type": "string",
            "title": "Datetype"
          },
          "semesterdate_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Start"
          },
          "semesterdate_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate End"
          },
          "semesterdate_title": {
            "type": "string",
            "title": "Semesterdate Title"
          },
          "semesterdate_title_en": {
            "type": "string",
            "title": "Semesterdate Title En"
          },
          "semesterdate_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Description"
          },
          "semesterdate_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Description En"
          },
          "semesterdate_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Url"
          },
          "semesterdate_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Url En"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "datetype",
          "semesterdate_title",
          "semesterdate_title_en"
        ],
        "title": "SemesterDateCreate"
      },
      "SemesterDateFull": {
        "properties": {
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Key of the semester this date is referring to. This defaults to the semester conatining the date but the date does not need to be during this semester (e.g. the deadline for course announcements in a semester is well before the semester starts)."
          },
          "datetype": {
            "type": "string",
            "title": "ID of type of date from semesters_datetypes.datetype."
          },
          "semesterdate_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of start of the date. NULL for deadlines where only end date/time are relevant."
          },
          "semesterdate_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of end of date."
          },
          "semesterdate_title": {
            "type": "string",
            "title": "Name of date in German."
          },
          "semesterdate_title_en": {
            "type": "string",
            "title": "Name of date in English."
          },
          "semesterdate_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional description of date in German."
          },
          "semesterdate_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional description of date in English."
          },
          "semesterdate_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional link on the date."
          },
          "semesterdate_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Optional link on the date in English language, if available and different from semesterdate_url."
          },
          "semesterdate_id": {
            "type": "integer",
            "title": "ID of date."
          },
          "semesterdate": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of end or start, never NULL."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "semester_datetype": {
            "$ref": "#/components/schemas/SemesterDateType",
            "title": "Type of date"
          },
          "semester": {
            "items": {
              "$ref": "#/components/schemas/Semester"
            },
            "type": "array",
            "title": "Semester"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "datetype",
          "semesterdate_title",
          "semesterdate_title_en",
          "semesterdate_id",
          "semesterdate",
          "modified",
          "semester_datetype",
          "semester"
        ],
        "title": "SemesterDateFull"
      },
      "SemesterDateHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/SemesterDateFull"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "SemesterDateHits"
      },
      "SemesterDateType": {
        "properties": {
          "datetype": {
            "type": "string",
            "title": "ID of type of date."
          },
          "datetype_name": {
            "type": "string",
            "title": "Name of type of date in German."
          },
          "datetype_name_en": {
            "type": "string",
            "title": "Name of type of date in English."
          },
          "datetype_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description for type of date in German."
          },
          "datetype_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description for type of date in English."
          },
          "datetype_lecturefree": {
            "type": "boolean",
            "title": "Whether this type of date is lecture free (e.g. bank holidays)."
          },
          "datetype_offduty": {
            "type": "boolean",
            "title": "Whether staff is off duty on this type of date (e.g. bank holidays)."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "datetype",
          "datetype_name",
          "datetype_name_en",
          "datetype_lecturefree",
          "datetype_offduty",
          "modified"
        ],
        "title": "SemesterDateType"
      },
      "SemesterDateUpdate": {
        "properties": {
          "datetype": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datetype"
          },
          "semesterdate_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Start"
          },
          "semesterdate_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate End"
          },
          "semesterdate_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Title"
          },
          "semesterdate_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Title En"
          },
          "semesterdate_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Description"
          },
          "semesterdate_description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Description En"
          },
          "semesterdate_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Url"
          },
          "semesterdate_url_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semesterdate Url En"
          }
        },
        "type": "object",
        "title": "SemesterDateUpdate"
      },
      "SemesterEssential": {
        "properties": {
          "semester_tag": {
            "type": "string",
            "title": "Semester Tag"
          },
          "semester_title": {
            "type": "string",
            "title": "Semester Title"
          },
          "semester_title_en": {
            "type": "string",
            "title": "Semester Title En"
          }
        },
        "type": "object",
        "required": [
          "semester_tag",
          "semester_title",
          "semester_title_en"
        ],
        "title": "SemesterEssential"
      },
      "SemesterExamperiod": {
        "properties": {
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Key of the semester."
          },
          "examperiod_tag": {
            "type": "string",
            "title": "Tag for the exam period, especially \"first\" for the first exam period (main exam period for ), \"second\" for the second exam period (repeat exam period)."
          },
          "examperiod_title": {
            "type": "string",
            "title": "Name of the exam period in German."
          },
          "examperiod_title_en": {
            "type": "string",
            "title": "Name of the exam period in English."
          },
          "examperiod_start": {
            "type": "string",
            "format": "date",
            "title": "First day of the exam period."
          },
          "examperiod_end": {
            "type": "string",
            "format": "date",
            "title": "Last day of the exam period."
          },
          "examperiod_registration_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start of registration for the exam period."
          },
          "examperiod_registration_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration deadline for the exam period."
          },
          "examperiod_gradedate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading deadline for exams of this exam period."
          },
          "examperiod_id": {
            "type": "integer",
            "title": "Examperiod Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "examperiod_tag",
          "examperiod_title",
          "examperiod_title_en",
          "examperiod_start",
          "examperiod_end",
          "examperiod_id",
          "modified"
        ],
        "title": "SemesterExamperiod"
      },
      "SemesterExamperiodCreate": {
        "properties": {
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "examperiod_tag": {
            "type": "string",
            "title": "Examperiod Tag"
          },
          "examperiod_title": {
            "type": "string",
            "title": "Examperiod Title"
          },
          "examperiod_title_en": {
            "type": "string",
            "title": "Examperiod Title En"
          },
          "examperiod_start": {
            "type": "string",
            "format": "date",
            "title": "Examperiod Start"
          },
          "examperiod_end": {
            "type": "string",
            "format": "date",
            "title": "Examperiod End"
          },
          "examperiod_registration_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Registration Start"
          },
          "examperiod_registration_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Registration End"
          },
          "examperiod_gradedate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Gradedate"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "examperiod_tag",
          "examperiod_title",
          "examperiod_title_en",
          "examperiod_start",
          "examperiod_end"
        ],
        "title": "SemesterExamperiodCreate"
      },
      "SemesterExamperiodFull": {
        "properties": {
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Key of the semester."
          },
          "examperiod_tag": {
            "type": "string",
            "title": "Tag for the exam period, especially \"first\" for the first exam period (main exam period for ), \"second\" for the second exam period (repeat exam period)."
          },
          "examperiod_title": {
            "type": "string",
            "title": "Name of the exam period in German."
          },
          "examperiod_title_en": {
            "type": "string",
            "title": "Name of the exam period in English."
          },
          "examperiod_start": {
            "type": "string",
            "format": "date",
            "title": "First day of the exam period."
          },
          "examperiod_end": {
            "type": "string",
            "format": "date",
            "title": "Last day of the exam period."
          },
          "examperiod_registration_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start of registration for the exam period."
          },
          "examperiod_registration_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration deadline for the exam period."
          },
          "examperiod_gradedate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grading deadline for exams of this exam period."
          },
          "examperiod_id": {
            "type": "integer",
            "title": "ID of the exam period."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "semester": {
            "items": {
              "$ref": "#/components/schemas/Semester"
            },
            "type": "array",
            "title": "Semester"
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "examperiod_tag",
          "examperiod_title",
          "examperiod_title_en",
          "examperiod_start",
          "examperiod_end",
          "examperiod_id",
          "modified",
          "semester"
        ],
        "title": "SemesterExamperiodFull"
      },
      "SemesterExamperiodUpdate": {
        "properties": {
          "examperiod_tag": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Tag"
          },
          "examperiod_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Title"
          },
          "examperiod_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Title En"
          },
          "examperiod_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Start"
          },
          "examperiod_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod End"
          },
          "examperiod_registration_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Registration Start"
          },
          "examperiod_registration_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Registration End"
          },
          "examperiod_gradedate": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiod Gradedate"
          }
        },
        "type": "object",
        "title": "SemesterExamperiodUpdate"
      },
      "SemesterFull": {
        "properties": {
          "semester_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of this semester in TUMonline (e.g. pStSemNr in application management).\n\nNeeds to be set in order for application dates to be synchronised."
          },
          "studienjahr_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the academic year in TUMonline (e.g. csj_nr in course management).\n\nIn app mhb courses can only be synchronised in semesters with this ID set."
          },
          "semester_id_docgs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of this semester in DocGS (e.g. field_semester[und] in \"Leistung: Lehrbeteiligung\")."
          },
          "semester_id_lmulsf": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of this semester in LSF of LMU.\n\nIf not NULL, activates synchronisation of courses in app mhb, if applicable."
          },
          "lecture_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First day of lecturing period."
          },
          "lecture_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last day of lecturing period."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key constructed by the year the semester starts followed by the letter \"w\" for winter semester or \"s\" for summer semester."
          },
          "semester_tag": {
            "type": "string",
            "title": "Short tag (e.g. \"WS 2020/1\") of semester."
          },
          "semester_period_start": {
            "type": "string",
            "format": "date",
            "title": "First day of semester (usually 1st of October/April)."
          },
          "semester_period_end": {
            "type": "string",
            "format": "date",
            "title": "Last day of semester (usually 30th of September/31st of March)."
          },
          "semester_title": {
            "type": "string",
            "title": "Long tag of semester in German (e.g. \"Wintersemester 2020/21\")."
          },
          "semester_title_en": {
            "type": "string",
            "title": "Long tag of semester in English (e.g. \"Winter Semester 2020/21\")."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of the database entry."
          },
          "examperiods": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/SemesterExamperiod"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examperiods",
            "default": {}
          },
          "dates": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/SemesterDate"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dates",
            "default": {}
          }
        },
        "type": "object",
        "required": [
          "semester_key",
          "semester_tag",
          "semester_period_start",
          "semester_period_end",
          "semester_title",
          "semester_title_en",
          "modified"
        ],
        "title": "SemesterFull",
        "example": {
          "lecture_period_end": "2021-02-12",
          "lecture_period_start": "2020-11-02",
          "modified": "2021-08-19T11:15:35.197892+02:00",
          "semester_id_docgs": 22,
          "semester_id_lmulsf": 20202,
          "semester_id_tumonline": 193,
          "semester_key": "2020w",
          "semester_period_end": "2021-03-31",
          "semester_period_start": "2020-10-01",
          "semester_tag": "WS 2020/1",
          "semester_title": "Wintersemester 2020/21",
          "semester_title_en": "Winter Semester 2020/21",
          "studienjahr_id_tumonline": 1611
        }
      },
      "SemesterIDs": {
        "properties": {
          "semester_tag": {
            "type": "string",
            "title": "Short tag (e.g. \"WS 2020/1\") of semester."
          },
          "semester_title": {
            "type": "string",
            "title": "Long tag of semester in German (e.g. \"Wintersemester 2020/21\")."
          },
          "semester_title_en": {
            "type": "string",
            "title": "Long tag of semester in English (e.g. \"Winter Semester 2020/21\")."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          },
          "semester_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Tumonline"
          },
          "studienjahr_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studienjahr Id Tumonline"
          },
          "semester_id_docgs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Docgs"
          },
          "semester_id_lmulsf": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Lmulsf"
          }
        },
        "type": "object",
        "required": [
          "semester_tag",
          "semester_title",
          "semester_title_en",
          "semester_key"
        ],
        "title": "SemesterIDs"
      },
      "SemesterKeySpecial": {
        "type": "string",
        "enum": [
          "exam",
          "calendar",
          "lecture",
          "current",
          "next",
          "previous",
          "planning"
        ],
        "title": "SemesterKeySpecial"
      },
      "SemesterLUFV": {
        "properties": {
          "semester_tag": {
            "type": "string",
            "title": "Short tag (e.g. \"WS 2020/1\") of semester."
          },
          "semester_title": {
            "type": "string",
            "title": "Long tag of semester in German (e.g. \"Wintersemester 2020/21\")."
          },
          "semester_title_en": {
            "type": "string",
            "title": "Long tag of semester in English (e.g. \"Winter Semester 2020/21\")."
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key constructed by the year the semester starts followed by the letter \"w\" for winter semester or \"s\" for summer semester."
          },
          "semester_period_start": {
            "type": "string",
            "format": "date",
            "title": "First day of semester (usually 1st of October/April)."
          },
          "semester_period_end": {
            "type": "string",
            "format": "date",
            "title": "Last day of semester (usually 30th of September/31st of March)."
          },
          "lecture_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "First day of lecturing period."
          },
          "lecture_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last day of lecturing period."
          },
          "lufv_deadline": {
            "type": "string",
            "format": "date-time",
            "title": "Lufv Deadline"
          }
        },
        "type": "object",
        "required": [
          "semester_tag",
          "semester_title",
          "semester_title_en",
          "semester_key",
          "semester_period_start",
          "semester_period_end",
          "lufv_deadline"
        ],
        "title": "SemesterLUFV"
      },
      "SemesterNotificationStudent": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "st_person_nr": {
            "type": "integer",
            "title": "St Person Nr"
          },
          "st_studien_nr": {
            "type": "integer",
            "title": "St Studien Nr"
          },
          "open_exam_count": {
            "type": "integer",
            "title": "Open Exam Count"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramSPOBase"
          },
          "frvs": {
            "items": {
              "$ref": "#/components/schemas/StudentFRVBase"
            },
            "type": "array",
            "title": "Frvs"
          },
          "note": {
            "type": "string",
            "enum": [
              "new",
              "due",
              "apv"
            ],
            "title": "Note"
          },
          "remark_zpa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark Zpa"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "studkart_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Studkart Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "matrikel",
          "st_person_nr",
          "st_studien_nr",
          "open_exam_count",
          "program",
          "frvs",
          "note",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "studkart_url"
        ],
        "title": "SemesterNotificationStudent"
      },
      "SemesterStudentZPA": {
        "properties": {
          "matrikel": {
            "type": "string",
            "title": "Matrikel of the student."
          },
          "remark_zpa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark Zpa"
          }
        },
        "type": "object",
        "required": [
          "matrikel"
        ],
        "title": "SemesterStudentZPA"
      },
      "SemesterUpdate": {
        "properties": {
          "semester_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Tumonline"
          },
          "studienjahr_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studienjahr Id Tumonline"
          },
          "semester_id_docgs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Docgs"
          },
          "semester_id_lmulsf": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Semester Id Lmulsf"
          },
          "lecture_period_start": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecture Period Start"
          },
          "lecture_period_end": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lecture Period End"
          }
        },
        "type": "object",
        "title": "SemesterUpdate"
      },
      "SpoNodeType": {
        "type": "string",
        "enum": [
          "Prüfungsknoten",
          "Modulknoten",
          "Angebotsknoten",
          "Regelknoten"
        ],
        "title": "SpoNodeType"
      },
      "StatisticsStudentBasePerson": {
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          }
        },
        "type": "object",
        "required": [
          "username",
          "matrikel"
        ],
        "title": "StatisticsStudentBasePerson"
      },
      "StorageFileBase": {
        "properties": {
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "filesize": {
            "type": "integer",
            "title": "Filesize"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "student_document": {
            "type": "boolean",
            "title": "Student Document",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "filename",
          "filesize",
          "timestamp"
        ],
        "title": "StorageFileBase"
      },
      "StudentAttest": {
        "properties": {
          "attest_id": {
            "type": "string",
            "format": "uuid",
            "title": "Attest Id"
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "study_id": {
            "type": "string",
            "maxLength": 12,
            "minLength": 9,
            "pattern": "^([0-9]{4})([0-9]{2})([0-9]{3}){1,2}$",
            "title": "Study Id",
            "examples": [
              "163017051",
              "163016066",
              "163016067",
              "163016068",
              "163016069"
            ]
          },
          "student_enrolement": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StudentEnrolementBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Enrolement",
            "default": []
          },
          "valid_from": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid From",
            "description": "End date of the medical certificate."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through",
            "description": "End date of the medical certificate."
          },
          "extension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension",
            "description": "Fraction of writing time extension (e.g. 0.3 for 30% longer writing time)."
          },
          "remark_examiner": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark Examiner",
            "description": "Additional remark to the examiner in German."
          },
          "remark_examiner_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark Examiner En",
            "description": "Additional remark to the examiner in English."
          },
          "remark_internal": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark Internal",
            "description": "Internal remark for the student office."
          },
          "exams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StudentExam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exams",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "attest_id",
          "matrikel",
          "study_id"
        ],
        "title": "StudentAttest"
      },
      "StudentBase": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "enrolements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StudentEnrolementBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enrolements",
            "default": []
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "matrikel",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "StudentBase"
      },
      "StudentBaseClerk": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "enrolements": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/StudentEnrolement"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Enrolements",
            "default": []
          },
          "st_person_nr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "St Person Nr"
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          },
          "studkart_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Studkart Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "matrikel",
          "fullname",
          "listname",
          "titlename",
          "gender",
          "studkart_url"
        ],
        "title": "StudentBaseClerk"
      },
      "StudentBasePerson": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "matrikel",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "StudentBasePerson"
      },
      "StudentDegreeStatistics": {
        "properties": {
          "program": {
            "items": {
              "$ref": "#/components/schemas/ProgramBase"
            },
            "type": "array",
            "title": "Program"
          },
          "start_date": {
            "type": "string",
            "format": "date",
            "title": "Start Date"
          },
          "end_date": {
            "type": "string",
            "format": "date",
            "title": "End Date"
          },
          "total": {
            "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
          },
          "male": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "female": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "diverse": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "gop": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "gop_male": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "gop_female": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "gop_diverse": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "german": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "german_male": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "german_female": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "german_diverse": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "eu": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          },
          "non_eu": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentDegreeStatisticsValues"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "program",
          "start_date",
          "end_date",
          "total"
        ],
        "title": "StudentDegreeStatistics"
      },
      "StudentDegreeStatisticsValues": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "count_en": {
            "type": "integer",
            "title": "Count En",
            "default": 0
          },
          "grade_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Avg"
          },
          "grade_stddev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Stddev"
          },
          "grade_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Median"
          },
          "grade_min": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Min"
          },
          "grade_max": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Max"
          },
          "age_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Median"
          },
          "age_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Avg"
          },
          "age_stddev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Age Stddev"
          },
          "fachsemester_median": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Median"
          },
          "fachsemester_avg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Avg"
          },
          "fachsemester_stddev": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Stddev"
          }
        },
        "type": "object",
        "required": [
          "count"
        ],
        "title": "StudentDegreeStatisticsValues"
      },
      "StudentEnrolement": {
        "properties": {
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          },
          "hochschulsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hochschulsemester"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramSPOBase"
          }
        },
        "type": "object",
        "required": [
          "semester",
          "program"
        ],
        "title": "StudentEnrolement"
      },
      "StudentEnrolementBase": {
        "properties": {
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          },
          "hochschulsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hochschulsemester"
          },
          "status_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Id"
          },
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "semester_key": {
            "type": "string",
            "maxLength": 5,
            "minLength": 5,
            "pattern": "^[0-9]{4}[sSwW]$",
            "title": "Semester Key"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "semester_key"
        ],
        "title": "StudentEnrolementBase"
      },
      "StudentExam": {
        "properties": {
          "exam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Date"
          },
          "examiner": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBasePersonID"
              },
              {
                "type": "null"
              }
            ]
          },
          "course": {
            "$ref": "#/components/schemas/CourseVirtualBase"
          },
          "exam": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Exam"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "course"
        ],
        "title": "StudentExam"
      },
      "StudentFRV": {
        "properties": {
          "frv_id": {
            "type": "string",
            "format": "uuid",
            "title": "Frv Id"
          },
          "grant_date": {
            "type": "string",
            "format": "date",
            "title": "Grant Date"
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frv"
          },
          "fa": {
            "type": "boolean",
            "title": "Fa"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "reason_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason En"
          },
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "student": {
            "$ref": "#/components/schemas/StudentBasePerson"
          },
          "enrolement": {
            "$ref": "#/components/schemas/StudentEnrolement"
          }
        },
        "type": "object",
        "required": [
          "frv_id",
          "grant_date",
          "frv",
          "fa",
          "reason",
          "reason_en",
          "fachsemester",
          "credits",
          "semester",
          "student",
          "enrolement"
        ],
        "title": "StudentFRV"
      },
      "StudentFRVBase": {
        "properties": {
          "frv_id": {
            "type": "string",
            "format": "uuid",
            "title": "Frv Id"
          },
          "grant_date": {
            "type": "string",
            "format": "date",
            "title": "Grant Date"
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frv"
          },
          "fa": {
            "type": "boolean",
            "title": "Fa"
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason"
          },
          "reason_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason En"
          },
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          }
        },
        "type": "object",
        "required": [
          "frv_id",
          "grant_date",
          "frv",
          "fa",
          "reason",
          "reason_en",
          "fachsemester",
          "credits",
          "semester"
        ],
        "title": "StudentFRVBase"
      },
      "StudentStatistics": {
        "properties": {
          "program": {
            "items": {
              "$ref": "#/components/schemas/ProgramBase"
            },
            "type": "array",
            "title": "Program"
          },
          "semester": {
            "$ref": "#/components/schemas/SemesterBase"
          },
          "total": {
            "type": "integer",
            "title": "Total"
          },
          "u": {
            "type": "integer",
            "title": "U"
          },
          "male": {
            "type": "integer",
            "title": "Male"
          },
          "female": {
            "type": "integer",
            "title": "Female"
          },
          "diverse": {
            "type": "integer",
            "title": "Diverse"
          },
          "german": {
            "type": "integer",
            "title": "German"
          },
          "german_male": {
            "type": "integer",
            "title": "German Male"
          },
          "german_female": {
            "type": "integer",
            "title": "German Female"
          },
          "german_diverse": {
            "type": "integer",
            "title": "German Diverse"
          },
          "eu": {
            "type": "integer",
            "title": "Eu"
          },
          "eu_male": {
            "type": "integer",
            "title": "Eu Male"
          },
          "eu_female": {
            "type": "integer",
            "title": "Eu Female"
          },
          "eu_diverse": {
            "type": "integer",
            "title": "Eu Diverse"
          },
          "non_eu": {
            "type": "integer",
            "title": "Non Eu"
          },
          "non_eu_male": {
            "type": "integer",
            "title": "Non Eu Male"
          },
          "non_eu_female": {
            "type": "integer",
            "title": "Non Eu Female"
          },
          "non_eu_diverse": {
            "type": "integer",
            "title": "Non Eu Diverse"
          },
          "firstsemester": {
            "type": "integer",
            "title": "Firstsemester"
          },
          "firstsemester_male": {
            "type": "integer",
            "title": "Firstsemester Male"
          },
          "firstsemester_female": {
            "type": "integer",
            "title": "Firstsemester Female"
          },
          "firstsemester_diverse": {
            "type": "integer",
            "title": "Firstsemester Diverse"
          },
          "firstsemester_real": {
            "type": "integer",
            "title": "Firstsemester Real"
          },
          "firstsemester_real_male": {
            "type": "integer",
            "title": "Firstsemester Real Male"
          },
          "firstsemester_real_female": {
            "type": "integer",
            "title": "Firstsemester Real Female"
          },
          "firstsemester_real_diverse": {
            "type": "integer",
            "title": "Firstsemester Real Diverse"
          },
          "thirdsemester": {
            "type": "integer",
            "title": "Thirdsemester"
          },
          "thirdsemester_male": {
            "type": "integer",
            "title": "Thirdsemester Male"
          },
          "thirdsemester_female": {
            "type": "integer",
            "title": "Thirdsemester Female"
          },
          "thirdsemester_diverse": {
            "type": "integer",
            "title": "Thirdsemester Diverse"
          }
        },
        "type": "object",
        "required": [
          "program",
          "semester",
          "total",
          "u",
          "male",
          "female",
          "diverse",
          "german",
          "german_male",
          "german_female",
          "german_diverse",
          "eu",
          "eu_male",
          "eu_female",
          "eu_diverse",
          "non_eu",
          "non_eu_male",
          "non_eu_female",
          "non_eu_diverse",
          "firstsemester",
          "firstsemester_male",
          "firstsemester_female",
          "firstsemester_diverse",
          "firstsemester_real",
          "firstsemester_real_male",
          "firstsemester_real_female",
          "firstsemester_real_diverse",
          "thirdsemester",
          "thirdsemester_male",
          "thirdsemester_female",
          "thirdsemester_diverse"
        ],
        "title": "StudentStatistics"
      },
      "StudentWarn": {
        "properties": {
          "fachsemester": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester"
          },
          "fachsemester_effective": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fachsemester Effective"
          },
          "credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "frv": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frv"
          },
          "fa": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fa"
          },
          "special_warning_credits": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Warning Credits"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "matrikel": {
            "type": "string",
            "maxLength": 8,
            "minLength": 8,
            "pattern": "^[0-9]{8}$",
            "title": "Matrikel",
            "examples": [
              "00002222"
            ]
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "matrikel",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "StudentWarn"
      },
      "Supervisor": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "programs": {
            "items": {
              "$ref": "#/components/schemas/ThesisProgramSupervisor"
            },
            "type": "array",
            "title": "Programs",
            "default": []
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "Supervisor"
      },
      "TUMonlineRole": {
        "properties": {
          "role_group": {
            "$ref": "#/components/schemas/TUMonlineRoleGroup"
          },
          "role": {
            "anyOf": [
              {
                "type": "integer",
                "exclusiveMinimum": 0.0
              },
              {
                "type": "string"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "role_group",
          "role"
        ],
        "title": "TUMonlineRole"
      },
      "TUMonlineRoleGroup": {
        "type": "string",
        "enum": [
          "recht",
          "fach",
          "prog"
        ],
        "title": "TUMonlineRoleGroup"
      },
      "Task": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/TaskEvent"
            },
            "type": "array",
            "title": "Events",
            "default": []
          },
          "logs": {
            "items": {
              "$ref": "#/components/schemas/TaskLog"
            },
            "type": "array",
            "title": "Logs",
            "default": []
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "task_count": {
            "type": "integer",
            "title": "Task Count"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "name",
          "task_count"
        ],
        "title": "Task"
      },
      "TaskBase": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/TaskEvent"
            },
            "type": "array",
            "title": "Events",
            "default": []
          },
          "logs": {
            "items": {
              "$ref": "#/components/schemas/TaskLog"
            },
            "type": "array",
            "title": "Logs",
            "default": []
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskResult"
              },
              {
                "type": "null"
              }
            ]
          },
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/UserBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "task_id"
        ],
        "title": "TaskBase"
      },
      "TaskEvent": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "local_received": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Received"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          },
          "args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "hostname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hostname"
          },
          "kwargs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kwargs"
          },
          "retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retries"
          },
          "result": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "exception": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exception"
          }
        },
        "type": "object",
        "title": "TaskEvent"
      },
      "TaskEventSimple": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "local_received": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Local Received"
          },
          "state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "State"
          }
        },
        "type": "object",
        "title": "TaskEventSimple"
      },
      "TaskLog": {
        "properties": {
          "logger": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logger"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "levelno": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Levelno"
          },
          "levelname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Levelname"
          },
          "pathname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pathname"
          },
          "lineno": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lineno"
          },
          "trace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "title": "TaskLog"
      },
      "TaskName": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/TaskSchedule"
            },
            "type": "array",
            "title": "Schedules",
            "default": []
          },
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskBase"
            },
            "type": "array",
            "title": "Tasks"
          }
        },
        "type": "object",
        "required": [
          "name",
          "tasks"
        ],
        "title": "TaskName"
      },
      "TaskNameList": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/TaskSchedule"
            },
            "type": "array",
            "title": "Schedules",
            "default": []
          },
          "task_count": {
            "type": "integer",
            "title": "Task Count"
          },
          "fail_count": {
            "type": "integer",
            "title": "Fail Count"
          },
          "last_state": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last State"
          },
          "last_timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Timestamp"
          }
        },
        "type": "object",
        "required": [
          "name",
          "task_count",
          "fail_count"
        ],
        "title": "TaskNameList"
      },
      "TaskResult": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "date_done": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Done"
          },
          "worker": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worker"
          },
          "retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retries"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "result": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "traceback": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traceback"
          },
          "args": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "kwargs": {
            "anyOf": [
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kwargs"
          },
          "queue": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queue"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "status"
        ],
        "title": "TaskResult"
      },
      "TaskResultSimple": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "date_done": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Done"
          },
          "worker": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Worker"
          },
          "retries": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Retries"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "status"
        ],
        "title": "TaskResultSimple"
      },
      "TaskSchedule": {
        "properties": {
          "args": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Args"
          },
          "schedule": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Schedule"
          },
          "date_changed": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Changed"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "expires": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires"
          },
          "kwargs": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kwargs"
          },
          "last_run_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Run At"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "total_run_count": {
            "type": "integer",
            "title": "Total Run Count",
            "default": 0
          },
          "crontab": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Crontab",
            "readOnly": true
          },
          "interval": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Interval",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "crontab",
          "interval"
        ],
        "title": "TaskSchedule"
      },
      "TaskSimple": {
        "properties": {
          "task_id": {
            "type": "string",
            "format": "uuid",
            "title": "Task Id"
          },
          "events": {
            "items": {
              "$ref": "#/components/schemas/TaskEventSimple"
            },
            "type": "array",
            "title": "Events",
            "default": []
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaskResultSimple"
              },
              {
                "type": "null"
              }
            ]
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "task_id",
          "name"
        ],
        "title": "TaskSimple"
      },
      "TeamTypeID": {
        "type": "string",
        "enum": [
          "cst_go",
          "cst_abi",
          "school_office",
          "student_office"
        ],
        "title": "TeamTypeID"
      },
      "TemplateTag": {
        "type": "string",
        "enum": [
          "gradeform",
          "gradeform1",
          "gradeform2"
        ],
        "title": "TemplateTag"
      },
      "Thesis": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the thesis project."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German."
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English."
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German as LaTeX (e.g. for ceremony presentation)."
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English as LaTeX (e.g. for ceremony presentation)."
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the language, the thesis is written in (usually en for English, de for German)."
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin date of the thesis project (i.e. start of the preparatory modules)."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Official start date of the thesis project."
          },
          "force_language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "researchfields": {
            "items": {
              "$ref": "#/components/schemas/ThesisResearchfieldBase"
            },
            "type": "array",
            "title": "Researchfields",
            "default": []
          },
          "thesisfiles": {
            "items": {
              "$ref": "#/components/schemas/ThesisFileBase"
            },
            "type": "array",
            "title": "Thesisfiles",
            "default": []
          },
          "thesisexams": {
            "items": {
              "$ref": "#/components/schemas/ThesisExamColloquium"
            },
            "type": "array",
            "title": "Thesisexams",
            "default": []
          },
          "thesis_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis is passed."
          },
          "prerequisites_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prerequisites node ThesisProgram.prerequisites_stpk_id is positive."
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the thesis."
          },
          "preparation_due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the preparation modules."
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned start date, after potential preparation modules are finished."
          },
          "attest": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension (usually in days) granted due to medical certificate."
          },
          "extension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension (usually in days) granted by examination board due to other reasons."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date the student completed handing in the thesis."
          },
          "cancel_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date the thesis project was canceled."
          },
          "revision_due_date": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due date(s) for requested revisions."
          },
          "file_uploaded": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student uploaded a file, where the handin is not completed yet."
          },
          "supervisor_grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Grade Date"
          },
          "reviewer_grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Grade Date"
          },
          "grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Date"
          },
          "upload_possible": {
            "type": "boolean",
            "title": "Upload Possible"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of this database entry."
          },
          "extension_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension De"
          },
          "extension_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension En"
          },
          "attest_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest De"
          },
          "attest_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest En"
          },
          "student": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "$ref": "#/components/schemas/PersonBaseUsernameOrgID"
          },
          "reviewer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "assistants": {
            "items": {
              "$ref": "#/components/schemas/PersonBaseUsername"
            },
            "type": "array",
            "title": "Assistants",
            "default": []
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "thesisdocs": {
            "items": {
              "$ref": "#/components/schemas/ThesisDocument"
            },
            "type": "array",
            "title": "Thesisdocs",
            "default": []
          },
          "thesisoffer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThesisOfferBase"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesis_id",
          "begin_date",
          "org",
          "revision_due_date",
          "upload_possible",
          "modified",
          "supervisor",
          "program"
        ],
        "title": "Thesis"
      },
      "ThesisAPVTypes": {
        "type": "string",
        "enum": [
          "BAKARBN",
          "BAKARBZ",
          "MAGARBN",
          "MAGARBZ",
          "PRUEFARB"
        ],
        "title": "ThesisAPVTypes"
      },
      "ThesisAdmin": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the thesis project."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German."
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English."
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German as LaTeX (e.g. for ceremony presentation)."
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English as LaTeX (e.g. for ceremony presentation)."
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the language, the thesis is written in (usually en for English, de for German)."
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin date of the thesis project (i.e. start of the preparatory modules)."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Official start date of the thesis project."
          },
          "force_language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "researchfields": {
            "items": {
              "$ref": "#/components/schemas/ThesisResearchfieldBase"
            },
            "type": "array",
            "title": "Researchfields",
            "default": []
          },
          "thesisfiles": {
            "items": {
              "$ref": "#/components/schemas/ThesisFileBase"
            },
            "type": "array",
            "title": "Thesisfiles",
            "default": []
          },
          "thesisexams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisExamWithGrade"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexams"
          },
          "thesis_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis is passed."
          },
          "prerequisites_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prerequisites node ThesisProgram.prerequisites_stpk_id is positive."
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the thesis."
          },
          "preparation_due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the preparation modules."
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned start date, after potential preparation modules are finished."
          },
          "attest": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension (usually in days) granted due to medical certificate."
          },
          "extension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension (usually in days) granted by examination board due to other reasons."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date the student completed handing in the thesis."
          },
          "cancel_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date the thesis project was canceled."
          },
          "revision_due_date": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due date(s) for requested revisions."
          },
          "file_uploaded": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student uploaded a file, where the handin is not completed yet."
          },
          "supervisor_grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Grade Date"
          },
          "reviewer_grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Grade Date"
          },
          "grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Date"
          },
          "upload_possible": {
            "type": "boolean",
            "title": "Upload Possible"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of this database entry."
          },
          "extension_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension De"
          },
          "extension_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension En"
          },
          "attest_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest De"
          },
          "attest_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest En"
          },
          "student": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentBaseClerk"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "$ref": "#/components/schemas/PersonBaseUsernameOrgID"
          },
          "reviewer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "assistants": {
            "items": {
              "$ref": "#/components/schemas/PersonBaseUsername"
            },
            "type": "array",
            "title": "Assistants",
            "default": []
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "thesisdocs": {
            "items": {
              "$ref": "#/components/schemas/ThesisDocument"
            },
            "type": "array",
            "title": "Thesisdocs",
            "default": []
          },
          "thesisoffer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThesisOfferBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "logs": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "$ref": "#/components/schemas/ThesisLogBase"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logs"
          },
          "thesisgrades": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisGrade"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisgrades"
          },
          "thesis_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Id Tumonline"
          },
          "tumonline_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tumonline Url",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesis_id",
          "begin_date",
          "org",
          "revision_due_date",
          "upload_possible",
          "modified",
          "supervisor",
          "program",
          "tumonline_url"
        ],
        "title": "ThesisAdmin"
      },
      "ThesisAdminHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/ThesisAdmin"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "ThesisAdminHits"
      },
      "ThesisDocument": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "filesize": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filesize"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          },
          "sha256": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sha256"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "modified"
        ],
        "title": "ThesisDocument"
      },
      "ThesisDocumentTag": {
        "type": "string",
        "enum": [
          "accept",
          "colloquiumupdate",
          "examreminder",
          "extension",
          "graderequest",
          "graderequestsupervisor",
          "graderequestreminder",
          "graderequestreviewer",
          "graderequestreviewerreminder",
          "gradereport",
          "gradereportreviewer",
          "handin",
          "preparationinfo",
          "preparationinfosupervisor",
          "duedateinfo",
          "reviewer",
          "revision",
          "thesisstart",
          "tumonlineprotocol",
          "tumonlineprotocolexam",
          "rev0",
          "rev1",
          "rev2",
          "deliveryletter",
          "registrationconfirmation"
        ],
        "title": "ThesisDocumentTag"
      },
      "ThesisEssential": {
        "properties": {
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesis Id"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin Date"
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "student": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "$ref": "#/components/schemas/PersonBaseUsernameOrgID"
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          }
        },
        "type": "object",
        "required": [
          "thesis_id",
          "begin_date",
          "supervisor",
          "program"
        ],
        "title": "ThesisEssential"
      },
      "ThesisExamColloquium": {
        "properties": {
          "thesisexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date (and time) of the exam."
          },
          "thesisexam_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional info on the exam (e.g. location)."
          },
          "thesisexam_id": {
            "type": "integer",
            "title": "Thesisexam Id"
          },
          "thesisexam_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexam Passed"
          },
          "colloquium": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Colloquium"
          }
        },
        "type": "object",
        "required": [
          "thesisexam_id"
        ],
        "title": "ThesisExamColloquium"
      },
      "ThesisExamCombination": {
        "properties": {
          "thesisexam_combination_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesisexam Combination Id"
          },
          "thesisexams": {
            "items": {
              "$ref": "#/components/schemas/ThesisExamThesis"
            },
            "type": "array",
            "title": "Thesisexams",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "thesisexam_combination_id"
        ],
        "title": "ThesisExamCombination"
      },
      "ThesisExamCombinationUpdate": {
        "properties": {
          "thesisexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date (and time) of the exam."
          },
          "thesisexam_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional info on the exam (e.g. location)."
          },
          "thesis_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "uuid"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Ids"
          }
        },
        "type": "object",
        "title": "ThesisExamCombinationUpdate"
      },
      "ThesisExamThesis": {
        "properties": {
          "thesisexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date (and time) of the exam."
          },
          "thesisexam_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional info on the exam (e.g. location)."
          },
          "thesisexam_id": {
            "type": "integer",
            "title": "1 first exam, 2 for repeat exam."
          },
          "thesisexam_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis exam is passed."
          },
          "thesisexam_id_tumonline": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the exam in TUMonline."
          },
          "thesis": {
            "$ref": "#/components/schemas/ThesisEssential"
          }
        },
        "type": "object",
        "required": [
          "thesisexam_id",
          "thesis"
        ],
        "title": "ThesisExamThesis"
      },
      "ThesisExamUpdate": {
        "properties": {
          "thesisexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexam Date"
          },
          "thesisexam_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexam Info"
          }
        },
        "type": "object",
        "title": "ThesisExamUpdate"
      },
      "ThesisExamWithGrade": {
        "properties": {
          "thesisexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date (and time) of the exam."
          },
          "thesisexam_info": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional info on the exam (e.g. location)."
          },
          "thesisexam_id": {
            "type": "integer",
            "title": "Thesisexam Id"
          },
          "thesisexam_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexam Passed"
          },
          "colloquium": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisEssential"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Colloquium"
          },
          "thesisexam_grades": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisGrade"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexam Grades"
          }
        },
        "type": "object",
        "required": [
          "thesisexam_id"
        ],
        "title": "ThesisExamWithGrade"
      },
      "ThesisExtension": {
        "properties": {
          "field": {
            "type": "string",
            "enum": [
              "attest",
              "extension"
            ],
            "title": "Type of extension (\"attest\": medical reason, \"extension\": other reason)."
          },
          "days": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension in days."
          },
          "months": {
            "anyOf": [
              {
                "type": "integer",
                "minimum": 0.0
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension in months."
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension until date."
          }
        },
        "type": "object",
        "required": [
          "field"
        ],
        "title": "ThesisExtension"
      },
      "ThesisFile": {
        "properties": {
          "revision": {
            "type": "integer",
            "title": "Revision counter."
          },
          "sha256": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "SHA256 hash of the file."
          },
          "pdfinfo": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "PDF info from the file."
          },
          "pagecount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Page count of the file."
          },
          "filesize": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "File size in bytes."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of the uploaded file."
          },
          "handin_completed": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp, the handing in was completed."
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp, the file was deleted."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesis Id"
          }
        },
        "type": "object",
        "required": [
          "revision",
          "modified",
          "thesis_id"
        ],
        "title": "ThesisFile"
      },
      "ThesisFileBase": {
        "properties": {
          "revision": {
            "type": "integer",
            "title": "Revision"
          },
          "sha256": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sha256"
          },
          "pdfinfo": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pdfinfo"
          },
          "pagecount": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Pagecount"
          },
          "filesize": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Filesize"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "handin_completed": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Handin Completed"
          },
          "deleted": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted"
          }
        },
        "type": "object",
        "required": [
          "revision",
          "modified"
        ],
        "title": "ThesisFileBase"
      },
      "ThesisGrade": {
        "properties": {
          "grade_id": {
            "type": "integer",
            "title": "Grade Id"
          },
          "grade": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade (numerical 1.0, 1.3 to 5.0), may be None only if grade_remark is set to \"X\"."
          },
          "grade_remark": {
            "anyOf": [
              {
                "type": "string",
                "const": "X"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special grade \"X\" for \"did not show up\", if set no grade can be given"
          },
          "grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Date"
          }
        },
        "type": "object",
        "required": [
          "grade_id"
        ],
        "title": "ThesisGrade"
      },
      "ThesisHandin": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German."
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English."
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German as LaTeX (e.g. for ceremony presentation)."
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English as LaTeX (e.g. for ceremony presentation)."
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the language, the thesis is written in (usually en for English, de for German)."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of usernames of assistants for this thesis project."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Official date of handing in the thesis (e.g. upload of electronic copy). By default this is the date of the upload."
          },
          "handin_completed": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date of completion of the handin process (e.g. reception of mail handin form at student office). By default, this is now."
          }
        },
        "type": "object",
        "title": "ThesisHandin"
      },
      "ThesisListWithGrade": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the thesis project."
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German."
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English."
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German as LaTeX (e.g. for ceremony presentation)."
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English as LaTeX (e.g. for ceremony presentation)."
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the language, the thesis is written in (usually en for English, de for German)."
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin date of the thesis project (i.e. start of the preparatory modules)."
          },
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Official start date of the thesis project."
          },
          "force_language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "researchfields": {
            "items": {
              "$ref": "#/components/schemas/ThesisResearchfieldBase"
            },
            "type": "array",
            "title": "Researchfields",
            "default": []
          },
          "thesisfiles": {
            "items": {
              "$ref": "#/components/schemas/ThesisFileBase"
            },
            "type": "array",
            "title": "Thesisfiles",
            "default": []
          },
          "thesisexams": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisExamWithGrade"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexams"
          },
          "thesis_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis is passed."
          },
          "prerequisites_passed": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prerequisites node ThesisProgram.prerequisites_stpk_id is positive."
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the thesis."
          },
          "preparation_due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the preparation modules."
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned start date, after potential preparation modules are finished."
          },
          "attest": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension (usually in days) granted due to medical certificate."
          },
          "extension": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension (usually in days) granted by examination board due to other reasons."
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date the student completed handing in the thesis."
          },
          "cancel_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date the thesis project was canceled."
          },
          "revision_due_date": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "format": "date"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due date(s) for requested revisions."
          },
          "file_uploaded": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student uploaded a file, where the handin is not completed yet."
          },
          "supervisor_grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Grade Date"
          },
          "reviewer_grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reviewer Grade Date"
          },
          "grade_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade Date"
          },
          "upload_possible": {
            "type": "boolean",
            "title": "Upload Possible"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of this database entry."
          },
          "extension_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension De"
          },
          "extension_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extension En"
          },
          "attest_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest De"
          },
          "attest_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attest En"
          },
          "student": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StudentBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "supervisor": {
            "$ref": "#/components/schemas/PersonBaseUsernameOrgID"
          },
          "reviewer": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PersonBaseUsername"
              },
              {
                "type": "null"
              }
            ]
          },
          "assistants": {
            "items": {
              "$ref": "#/components/schemas/PersonBaseUsername"
            },
            "type": "array",
            "title": "Assistants",
            "default": []
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "thesisgrades": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisGrade"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisgrades"
          },
          "is_supervisor": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Supervisor"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesis_id",
          "begin_date",
          "org",
          "revision_due_date",
          "upload_possible",
          "modified",
          "supervisor",
          "program"
        ],
        "title": "ThesisListWithGrade"
      },
      "ThesisLogBase": {
        "properties": {
          "log_id": {
            "type": "string",
            "format": "uuid",
            "title": "Log Id"
          },
          "log_tag": {
            "type": "string",
            "title": "Log Tag"
          },
          "log_date": {
            "type": "string",
            "format": "date-time",
            "title": "Log Date"
          },
          "log_text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Log Text"
          }
        },
        "type": "object",
        "required": [
          "log_id",
          "log_tag",
          "log_date"
        ],
        "title": "ThesisLogBase"
      },
      "ThesisOffer": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype"
          },
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of usernames of assistants for this thesis project."
          },
          "working_title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "(Working) title of the project in German."
          },
          "working_title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "(Working) title of the project in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the thesis project in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the thesis project in English."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer not valid (i.e. not shown in public offers) after this date."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "public": {
            "type": "boolean",
            "title": "Public offer (FALSE, if entry by student).",
            "default": true
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the supporting org."
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username of the supervisor offering this thesis project."
          },
          "thesisoffer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesisoffer Id"
          },
          "assigned": {
            "type": "boolean",
            "title": "Assigned",
            "description": "Whether this topic is already assigned to at least one student."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "supervisor": {
            "$ref": "#/components/schemas/PersonBaseUsernameOrgID"
          },
          "assistants": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PersonBaseUsername"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assistants"
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesisoffer_id",
          "assigned",
          "modified",
          "supervisor",
          "program",
          "org"
        ],
        "title": "ThesisOffer"
      },
      "ThesisOfferBase": {
        "properties": {
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of usernames of assistants for this thesis project."
          },
          "working_title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "(Working) title of the project in German."
          },
          "working_title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "(Working) title of the project in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the thesis project in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the thesis project in English."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer not valid (i.e. not shown in public offers) after this date."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "public": {
            "type": "boolean",
            "title": "Public offer (FALSE, if entry by student).",
            "default": true
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the supporting org."
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username of the supervisor offering this thesis project."
          },
          "thesisoffer_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesisoffer Id"
          },
          "assigned": {
            "type": "boolean",
            "title": "Assigned",
            "description": "Whether this topic is already assigned to at least one student."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          }
        },
        "type": "object",
        "required": [
          "thesisoffer_id",
          "assigned",
          "modified"
        ],
        "title": "ThesisOfferBase"
      },
      "ThesisOfferCreate": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype",
            "default": 1
          },
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of usernames of assistants for this thesis project."
          },
          "working_title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "(Working) title of the project in German."
          },
          "working_title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "(Working) title of the project in English."
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the thesis project in German."
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description of the thesis project in English."
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer not valid (i.e. not shown in public offers) after this date."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "public": {
            "type": "boolean",
            "title": "Public offer (FALSE, if entry by student).",
            "default": true
          },
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "supervisor_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Supervisor Username",
            "examples": [
              "go42tum"
            ]
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "org_id",
          "supervisor_username"
        ],
        "title": "ThesisOfferCreate"
      },
      "ThesisOfferHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/ThesisOffer"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "ThesisOfferHits"
      },
      "ThesisOfferStudentCreate": {
        "properties": {
          "org_id": {
            "type": "integer",
            "title": "Org Id"
          },
          "supervisor_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Supervisor Username",
            "examples": [
              "go42tum"
            ]
          },
          "working_title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Title"
          },
          "working_title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Title En"
          }
        },
        "type": "object",
        "required": [
          "org_id",
          "supervisor_username"
        ],
        "title": "ThesisOfferStudentCreate"
      },
      "ThesisOfferUpdate": {
        "properties": {
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assistant Usernames"
          },
          "working_title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Title"
          },
          "working_title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Working Title En"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "description_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description En"
          },
          "valid_through": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Valid Through"
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "public": {
            "type": "boolean",
            "title": "Public",
            "default": true
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username"
          }
        },
        "type": "object",
        "title": "ThesisOfferUpdate"
      },
      "ThesisOrderby": {
        "type": "string",
        "enum": [
          "student",
          "student:desc",
          "matrikel",
          "matrikel:desc",
          "begin",
          "begin:desc",
          "start",
          "start:desc",
          "end",
          "end:desc"
        ],
        "title": "ThesisOrderby"
      },
      "ThesisProgram": {
        "properties": {
          "thesis_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the thesis."
          },
          "preparation_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the preparation modules."
          },
          "paper_copies": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of paper copies required."
          },
          "accept_onelanguage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If set to True the thesis title can be given in one language only."
          },
          "thesisinfo_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in German."
          },
          "thesisinfo_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in English."
          },
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype"
          },
          "thesis_name": {
            "type": "string",
            "title": "Thesis Name"
          },
          "thesis_name_en": {
            "type": "string",
            "title": "Thesis Name En"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "thesis_subtype",
          "thesis_name",
          "thesis_name_en"
        ],
        "title": "ThesisProgram"
      },
      "ThesisProgramConfigCreate": {
        "properties": {
          "thesis_duration": {
            "type": "string",
            "title": "Thesis Duration"
          },
          "preparation_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the preparation modules."
          },
          "paper_copies": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of paper copies required."
          },
          "accept_onelanguage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If set to True the thesis title can be given in one language only."
          },
          "thesisinfo_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in German."
          },
          "thesisinfo_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in English."
          },
          "override_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name of this thesis subtype in German."
          },
          "override_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name of this thesis subtype in English."
          },
          "prerequisites_stpk_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "SPO node ID of prerequisites for thesis registration."
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/ThesisAPVTypes"
          },
          "spo_container": {
            "type": "string",
            "title": "Spo Container"
          },
          "course_code": {
            "type": "string",
            "title": "Course Code"
          },
          "exam_course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the colloquium exam."
          },
          "combine_exams": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "The thesis exams are regularly held as colloquiua with multiple students in one session."
          },
          "supervisor_assignment_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of org in which potential supervisors need to have assigned the function \"supervisor\"."
          },
          "supervisors_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisors Function Id"
          },
          "always_reviewer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "A reviewer is always required to grade the thesis."
          },
          "offer_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "No thesis administration via DSSNAT, only offer of thesis projects."
          },
          "calendar_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary mail address of the Exchange calendar, the due dates should be included in."
          },
          "evasys_survey": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of evasys survey, the students will be invited to, after handing in the thesis."
          },
          "stzmeasure_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the STZ measure associated with this thesis type."
          },
          "project_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis project is no longer valid after this semester."
          },
          "registration_student_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note the student is shown during online registration in German."
          },
          "registration_student_note_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note the student is shown during online registration in English."
          },
          "registration_student_confirmations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Declarations the student needs to confirm during online registration in German."
          },
          "registration_student_confirmations_en": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Declarations the student needs to confirm during online registration in English."
          },
          "registration_form_addendum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional text on the registration form in German."
          },
          "registration_form_addendum_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional text on the registration form in English."
          },
          "grace_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grace period after due date, where upload is still allowed."
          }
        },
        "type": "object",
        "required": [
          "thesis_duration",
          "apvtype_id",
          "spo_container",
          "course_code"
        ],
        "title": "ThesisProgramConfigCreate"
      },
      "ThesisProgramConfigUpdate": {
        "properties": {
          "thesis_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the thesis."
          },
          "preparation_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the preparation modules."
          },
          "paper_copies": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of paper copies required."
          },
          "accept_onelanguage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If set to True the thesis title can be given in one language only."
          },
          "thesisinfo_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in German."
          },
          "thesisinfo_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in English."
          },
          "override_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Name"
          },
          "override_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Override Name En"
          },
          "prerequisites_stpk_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prerequisites Stpk Id"
          },
          "apvtype_id": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ThesisAPVTypes"
              },
              {
                "type": "null"
              }
            ]
          },
          "spo_container": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spo Container"
          },
          "course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Code"
          },
          "exam_course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Course Code"
          },
          "combine_exams": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Combine Exams"
          },
          "supervisor_assignment_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Assignment Org Id"
          },
          "supervisors_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisors Function Id"
          },
          "always_reviewer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always Reviewer"
          },
          "offer_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer Only"
          },
          "calendar_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Calendar Email"
          },
          "evasys_survey": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evasys Survey"
          },
          "stzmeasure_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stzmeasure Id"
          },
          "project_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Valid Through"
          },
          "registration_student_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Student Note"
          },
          "registration_student_note_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Student Note En"
          },
          "registration_student_confirmations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Student Confirmations"
          },
          "registration_student_confirmations_en": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Student Confirmations En"
          },
          "registration_form_addendum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Form Addendum"
          },
          "registration_form_addendum_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Registration Form Addendum En"
          },
          "grace_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grace Period"
          }
        },
        "type": "object",
        "title": "ThesisProgramConfigUpdate"
      },
      "ThesisProgramInternal": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype"
          },
          "thesis_duration": {
            "type": "string",
            "title": "Duration of the thesis."
          },
          "preparation_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the preparation modules."
          },
          "paper_copies": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of paper copies required."
          },
          "accept_onelanguage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If set to True the thesis title can be given in one language only."
          },
          "thesisinfo_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in German."
          },
          "thesisinfo_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in English."
          },
          "override_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name of this thesis subtype in German."
          },
          "override_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name of this thesis subtype in English."
          },
          "prerequisites_stpk_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "SPO node ID of prerequisites for thesis registration."
          },
          "apvtype_id": {
            "$ref": "#/components/schemas/ThesisAPVTypes",
            "title": "ID of the APV type in TUMonline (e.g. MAGARBN)."
          },
          "spo_container": {
            "type": "string",
            "title": "Title of the node in the SPO, that contains the thesis module."
          },
          "course_code": {
            "type": "string",
            "title": "Code of the thesis exam."
          },
          "exam_course_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the colloquium exam."
          },
          "combine_exams": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "The thesis exams are regularly held as colloquiua with multiple students in one session."
          },
          "supervisor_assignment_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of org in which potential supervisors need to have assigned the function \"supervisor\"."
          },
          "supervisors_function_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisors Function Id"
          },
          "always_reviewer": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "A reviewer is always required to grade the thesis."
          },
          "offer_only": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "No thesis administration via DSSNAT, only offer of thesis projects."
          },
          "calendar_email": {
            "anyOf": [
              {
                "type": "string",
                "format": "email"
              },
              {
                "type": "null"
              }
            ],
            "title": "Primary mail address of the Exchange calendar, the due dates should be included in."
          },
          "evasys_survey": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of evasys survey, the students will be invited to, after handing in the thesis."
          },
          "stzmeasure_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "ID of the STZ measure associated with this thesis type."
          },
          "project_valid_through": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 5,
                "minLength": 5,
                "pattern": "^[0-9]{4}[sSwW]$"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis project is no longer valid after this semester."
          },
          "registration_student_note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note the student is shown during online registration in German."
          },
          "registration_student_note_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note the student is shown during online registration in English."
          },
          "registration_student_confirmations": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Declarations the student needs to confirm during online registration in German."
          },
          "registration_student_confirmations_en": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Declarations the student needs to confirm during online registration in English."
          },
          "registration_form_addendum": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional text on the registration form in German."
          },
          "registration_form_addendum_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Additional text on the registration form in English."
          },
          "grace_period": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grace period after due date, where upload is still allowed."
          },
          "modified_config": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of this database entry."
          },
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "stpstudnr": {
            "type": "integer",
            "title": "ID of the study program in the SPO management."
          },
          "stpstpnr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stpstpnr"
          },
          "org": {
            "$ref": "#/components/schemas/OrgBase"
          },
          "valid_from_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "valid_through_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "inactive_after_semester": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SemesterBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "thesis_name": {
            "type": "string",
            "title": "Thesis Name"
          },
          "thesis_name_en": {
            "type": "string",
            "title": "Thesis Name En"
          },
          "preparation_title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation Title"
          },
          "preparation_title_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation Title En"
          },
          "thesis_duration_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Duration De"
          },
          "thesis_duration_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesis Duration En"
          },
          "preparation_duration_de": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation Duration De"
          },
          "preparation_duration_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation Duration En"
          },
          "preparation": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisProgramPreparation"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesis_duration",
          "apvtype_id",
          "spo_container",
          "course_code",
          "modified_config",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "stpstudnr",
          "org",
          "modified",
          "thesis_name",
          "thesis_name_en"
        ],
        "title": "ThesisProgramInternal"
      },
      "ThesisProgramPreparation": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype"
          },
          "exam_auto_pass": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Auto Pass"
          },
          "course_registration": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Registration"
          },
          "thesispreparation_id": {
            "type": "integer",
            "title": "Thesispreparation Id"
          },
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          },
          "module": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MHBEssential"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesispreparation_id",
          "module_id"
        ],
        "title": "ThesisProgramPreparation"
      },
      "ThesisProgramPreparationCreate": {
        "properties": {
          "exam_auto_pass": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Auto Pass"
          },
          "course_registration": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Registration"
          },
          "thesispreparation_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesispreparation Id"
          },
          "module_id": {
            "type": "integer",
            "title": "Module Id"
          }
        },
        "type": "object",
        "required": [
          "module_id"
        ],
        "title": "ThesisProgramPreparationCreate"
      },
      "ThesisProgramPreparationUpdate": {
        "properties": {
          "exam_auto_pass": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Exam Auto Pass"
          },
          "course_registration": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Registration"
          },
          "module_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Module Id"
          }
        },
        "type": "object",
        "title": "ThesisProgramPreparationUpdate"
      },
      "ThesisProgramStudent": {
        "properties": {
          "thesis_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the thesis."
          },
          "preparation_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the preparation modules."
          },
          "paper_copies": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of paper copies required."
          },
          "accept_onelanguage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If set to True the thesis title can be given in one language only."
          },
          "thesisinfo_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in German."
          },
          "thesisinfo_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in English."
          },
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "thesis_name": {
            "type": "string",
            "title": "Thesis Name"
          },
          "thesis_name_en": {
            "type": "string",
            "title": "Thesis Name En"
          },
          "register_help": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Help"
          },
          "register_help_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Register Help En"
          },
          "potential_supervisors": {
            "items": {
              "$ref": "#/components/schemas/PersonBaseUsernameOrgID"
            },
            "type": "array",
            "title": "Potential Supervisors",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "thesis_subtype",
          "thesis_name",
          "thesis_name_en"
        ],
        "title": "ThesisProgramStudent"
      },
      "ThesisProgramSupervisor": {
        "properties": {
          "thesis_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the thesis."
          },
          "preparation_duration": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration of the preparation modules."
          },
          "paper_copies": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Number of paper copies required."
          },
          "accept_onelanguage": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "If set to True the thesis title can be given in one language only."
          },
          "thesisinfo_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in German."
          },
          "thesisinfo_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the thesis in English."
          },
          "program_short": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Program Short"
          },
          "program_url": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in German."
          },
          "program_url_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link to website with information on the program in English."
          },
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "program_name": {
            "type": "string",
            "title": "Program Name"
          },
          "program_name_en": {
            "type": "string",
            "title": "Program Name En"
          },
          "degree_program_name": {
            "type": "string",
            "title": "Degree Program Name"
          },
          "degree_program_name_en": {
            "type": "string",
            "title": "Degree Program Name En"
          },
          "org_id": {
            "type": "integer",
            "title": "ID of the org, the program is assigned to (usually a node of type \"Studiengang\")."
          },
          "school": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SchoolBase"
              },
              {
                "type": "null"
              }
            ]
          },
          "degree": {
            "$ref": "#/components/schemas/DegreeBase"
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "thesis_name": {
            "type": "string",
            "title": "Thesis Name"
          },
          "thesis_name_en": {
            "type": "string",
            "title": "Thesis Name En"
          },
          "offer_help": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer Help"
          },
          "offer_help_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Offer Help En"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "program_name",
          "program_name_en",
          "degree_program_name",
          "degree_program_name_en",
          "org_id",
          "degree",
          "spo_version",
          "thesis_subtype",
          "thesis_name",
          "thesis_name_en"
        ],
        "title": "ThesisProgramSupervisor"
      },
      "ThesisRegistration": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype"
          },
          "begin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Begin date of the thesis project, as given on the printed registration form."
          },
          "force_language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "Thesis Id"
          },
          "thesisoffer": {
            "$ref": "#/components/schemas/ThesisOffer"
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "student": {
            "$ref": "#/components/schemas/StudentBase"
          },
          "preparation_due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Preparation Due Date"
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned Start Date"
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Date"
          },
          "student_confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Student Confirm Date"
          },
          "supervisor_confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Confirm Date"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "registration_student_note": {
            "type": "string",
            "title": "Registration Student Note"
          },
          "registration_student_note_en": {
            "type": "string",
            "title": "Registration Student Note En"
          },
          "registration_student_confirmations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Registration Student Confirmations"
          },
          "registration_student_confirmations_en": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Registration Student Confirmations En"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesis_id",
          "thesisoffer",
          "program",
          "student",
          "modified",
          "registration_student_note",
          "registration_student_note_en",
          "registration_student_confirmations",
          "registration_student_confirmations_en"
        ],
        "title": "ThesisRegistration"
      },
      "ThesisRegistrationAdmin": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "begin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Begin date of the thesis project, as given on the printed registration form."
          },
          "force_language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "thesis_id": {
            "type": "string",
            "format": "uuid",
            "title": "ID of the thesis project."
          },
          "thesisoffer": {
            "$ref": "#/components/schemas/ThesisOffer"
          },
          "program": {
            "$ref": "#/components/schemas/ThesisProgram"
          },
          "student": {
            "$ref": "#/components/schemas/StudentBaseClerk"
          },
          "preparation_due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the preparation modules."
          },
          "planned_start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Planned start date, after potential preparation modules are finished."
          },
          "due_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due (or end) date of the thesis."
          },
          "student_confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of student confirmation of the registration."
          },
          "supervisor_confirm_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp of student confirmation of the registration."
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp of last modification of this database entry."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldBase"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "registration_student_note": {
            "type": "string",
            "title": "Registration Student Note"
          },
          "registration_student_note_en": {
            "type": "string",
            "title": "Registration Student Note En"
          },
          "registration_student_confirmations": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Registration Student Confirmations"
          },
          "registration_student_confirmations_en": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Registration Student Confirmations En"
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "thesis_id",
          "thesisoffer",
          "program",
          "student",
          "modified",
          "registration_student_note",
          "registration_student_note_en",
          "registration_student_confirmations",
          "registration_student_confirmations_en"
        ],
        "title": "ThesisRegistrationAdmin"
      },
      "ThesisRegistrationBase": {
        "properties": {
          "begin_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Begin Date"
          },
          "force_language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ThesisRegistrationBase"
      },
      "ThesisRegistrationCreate": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "Study Id"
          },
          "spo_version": {
            "type": "string",
            "title": "Spo Version"
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "Thesis Subtype"
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin Date"
          },
          "force_language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "thesisoffer": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "$ref": "#/components/schemas/ThesisOfferStudentCreate"
              }
            ],
            "title": "Either the ID of an existing offer or basic data of the new offer."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "begin_date",
          "thesisoffer"
        ],
        "title": "ThesisRegistrationCreate"
      },
      "ThesisRegistrationCreateAdmin": {
        "properties": {
          "study_id": {
            "type": "string",
            "title": "ID of the study program (4-digit university code, 2-digit degree code, one or two 3-digit SKZ e.g. 163017051)."
          },
          "spo_version": {
            "type": "string",
            "title": "SPO version of the study program."
          },
          "thesis_subtype": {
            "type": "integer",
            "title": "ID of thesis subtype."
          },
          "begin_date": {
            "type": "string",
            "format": "date",
            "title": "Begin date of the thesis project, as given on the printed registration form."
          },
          "force_language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ],
            "title": "The student renounced the possibility to write the thesis in a different language."
          },
          "thesisoffer": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "$ref": "#/components/schemas/ThesisOfferStudentCreate"
              }
            ],
            "title": "Either the ID of an existing offer or basic data of the new offer."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "language": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LanguageSelection"
              },
              {
                "type": "null"
              }
            ]
          },
          "student_username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Student Username",
            "examples": [
              "go42tum"
            ]
          }
        },
        "type": "object",
        "required": [
          "study_id",
          "spo_version",
          "thesis_subtype",
          "begin_date",
          "thesisoffer",
          "student_username"
        ],
        "title": "ThesisRegistrationCreateAdmin"
      },
      "ThesisResearchfieldBase": {
        "properties": {
          "weight": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Weight"
          },
          "researchfield_0": {
            "type": "string",
            "title": "Researchfield 0"
          },
          "researchfield_1": {
            "type": "string",
            "title": "Researchfield 1"
          },
          "researchfield_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 2",
            "default": ""
          },
          "researchfield_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 3",
            "default": ""
          },
          "total_weight": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Total Weight"
          },
          "researchfield": {
            "$ref": "#/components/schemas/Researchfield"
          }
        },
        "type": "object",
        "required": [
          "weight",
          "researchfield_0",
          "researchfield_1",
          "total_weight",
          "researchfield"
        ],
        "title": "ThesisResearchfieldBase"
      },
      "ThesisResearchfieldCreate": {
        "properties": {
          "weight": {
            "type": "integer",
            "minimum": 1.0,
            "title": "Weight"
          },
          "researchfield_0": {
            "type": "string",
            "title": "Researchfield 0"
          },
          "researchfield_1": {
            "type": "string",
            "title": "Researchfield 1"
          },
          "researchfield_2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 2",
            "default": ""
          },
          "researchfield_3": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfield 3",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "weight",
          "researchfield_0",
          "researchfield_1"
        ],
        "title": "ThesisResearchfieldCreate"
      },
      "ThesisRevision": {
        "properties": {
          "revision_due_date": {
            "type": "string",
            "format": "date",
            "title": "Due date for the revision."
          },
          "request": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark for the request email in German."
          },
          "request_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark for the request email in English."
          }
        },
        "type": "object",
        "required": [
          "revision_due_date"
        ],
        "title": "ThesisRevision"
      },
      "ThesisSelection": {
        "type": "string",
        "enum": [
          "unfinished",
          "current",
          "due",
          "uploaded",
          "finished",
          "grading",
          "all"
        ],
        "title": "ThesisSelection"
      },
      "ThesisTitelCheck": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title"
          },
          "warning": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning"
          },
          "warning_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Warning En"
          }
        },
        "type": "object",
        "required": [
          "title"
        ],
        "title": "ThesisTitelCheck"
      },
      "ThesisUpdateAdmin": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German."
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English."
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German as LaTeX (e.g. for ceremony presentation)."
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English as LaTeX (e.g. for ceremony presentation)."
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the language, the thesis is written in (usually en for English, de for German)."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "List of usernames of assistants for this thesis project."
          },
          "supervisor_username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Supervisor Username"
          },
          "org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Org Id"
          }
        },
        "type": "object",
        "title": "ThesisUpdateAdmin"
      },
      "ThesisUpdateStudent": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title En"
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Latex"
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title Latex En"
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Language"
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          }
        },
        "type": "object",
        "title": "ThesisUpdateStudent"
      },
      "ThesisUpdateSupervisor": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German."
          },
          "title_en": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English."
          },
          "title_latex": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in German as LaTeX (e.g. for ceremony presentation)."
          },
          "title_latex_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title of the project in English as LaTeX (e.g. for ceremony presentation)."
          },
          "language": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2,
                "minLength": 2
              },
              {
                "type": "null"
              }
            ],
            "title": "Code of the language, the thesis is written in (usually en for English, de for German)."
          },
          "researchfields": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ThesisResearchfieldCreate"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Researchfields"
          },
          "assistant_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Assistant Usernames"
          }
        },
        "type": "object",
        "title": "ThesisUpdateSupervisor"
      },
      "ThesisWithGradesHits": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "offset": {
            "type": "integer",
            "title": "Offset"
          },
          "next_offset": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Next Offset"
          },
          "hits": {
            "items": {
              "$ref": "#/components/schemas/ThesisListWithGrade"
            },
            "type": "array",
            "title": "Hits"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "count",
          "offset",
          "hits"
        ],
        "title": "ThesisWithGradesHits"
      },
      "ThesisexamGradeSupervisor": {
        "properties": {
          "grade": {
            "anyOf": [
              {
                "anyOf": [
                  {
                    "type": "number"
                  },
                  {
                    "type": "string"
                  }
                ],
                "title": "Numerical Grade (1.0, 1.3 to 5.0)."
              },
              {
                "type": "null"
              }
            ],
            "title": "Grade (numerical 1.0, 1.3 to 5.0), may be None only if grade_remark is set to \"X\"."
          },
          "grade_remark": {
            "anyOf": [
              {
                "type": "string",
                "const": "X"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special grade \"X\" for \"did not show up\", if set no grade can be given"
          },
          "thesisexam_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Thesisexam Date"
          }
        },
        "type": "object",
        "title": "ThesisexamGradeSupervisor"
      },
      "ThirdTrialCandidates": {
        "properties": {
          "course": {
            "$ref": "#/components/schemas/CourseVirtual"
          },
          "students": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/StudentBasePerson"
                },
                {
                  "$ref": "#/components/schemas/StatisticsStudentBasePerson"
                }
              ]
            },
            "type": "array",
            "title": "Students"
          }
        },
        "type": "object",
        "required": [
          "course",
          "students"
        ],
        "title": "ThirdTrialCandidates"
      },
      "UIConfig": {
        "properties": {
          "keycloak_url": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Keycloak Url"
          },
          "keycloak_realm": {
            "type": "string",
            "title": "Keycloak Realm"
          },
          "keycloak_client_id": {
            "type": "string",
            "title": "Keycloak Client Id"
          },
          "backend_baseurl": {
            "type": "string",
            "minLength": 1,
            "format": "uri",
            "title": "Backend Baseurl"
          }
        },
        "type": "object",
        "required": [
          "keycloak_url",
          "keycloak_realm",
          "keycloak_client_id",
          "backend_baseurl"
        ],
        "title": "UIConfig"
      },
      "User": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "apps": {
            "additionalProperties": {
              "$ref": "#/components/schemas/App"
            },
            "type": "object",
            "title": "Apps",
            "default": {}
          },
          "default_org_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Org Id"
          },
          "groups": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Groups",
            "default": []
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "User"
      },
      "UserBase": {
        "properties": {
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "First or given name (empty if the name is not two-part)."
          },
          "lastname": {
            "type": "string",
            "title": "Last or only name."
          },
          "title_pre": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title before the name."
          },
          "title_post": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Academic degree or title after the name."
          },
          "email": {
            "type": "string",
            "format": "email",
            "title": "Email"
          },
          "gender_id": {
            "type": "integer",
            "maximum": 3.0,
            "minimum": 0.0,
            "title": "Gender Id",
            "default": 0
          },
          "username": {
            "type": "string",
            "maxLength": 7,
            "minLength": 7,
            "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
            "title": "Username",
            "examples": [
              "go42tum"
            ]
          },
          "fullname": {
            "type": "string",
            "title": "Fullname",
            "readOnly": true
          },
          "listname": {
            "type": "string",
            "title": "Listname",
            "readOnly": true
          },
          "titlename": {
            "type": "string",
            "title": "Titlename",
            "readOnly": true
          },
          "gender": {
            "$ref": "#/components/schemas/PersonGenderBase",
            "readOnly": true
          }
        },
        "type": "object",
        "required": [
          "lastname",
          "email",
          "username",
          "fullname",
          "listname",
          "titlename",
          "gender"
        ],
        "title": "UserBase"
      },
      "UserUpdate": {
        "properties": {
          "username": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 7,
                "minLength": 7,
                "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                "examples": [
                  "go42tum"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Username"
          },
          "person_id": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 16,
                "minLength": 16,
                "pattern": "^[A-F0-9]{16}$",
                "examples": [
                  "8694A922D56E4F87",
                  "2D1E1B14DDBF776D"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Person Id"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname"
          },
          "sap_person_nr": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sap Person Nr"
          }
        },
        "type": "object",
        "title": "UserUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "VirtualCourseUpdate": {
        "properties": {
          "course_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name"
          },
          "course_name_en": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Course Name En"
          },
          "hoursperweek": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hoursperweek"
          },
          "credits": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credits"
          },
          "always_new_ghk": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Always New Ghk"
          },
          "do_not_copy": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Do Not Copy"
          },
          "remark": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Remark"
          },
          "examiner_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Examiner Usernames"
          },
          "organizer_usernames": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 7,
                  "minLength": 7,
                  "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
                  "examples": [
                    "go42tum"
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organizer Usernames"
          },
          "extend_examiner_usernames": {
            "items": {
              "type": "string",
              "maxLength": 7,
              "minLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ]
            },
            "type": "array",
            "title": "Extend Examiner Usernames",
            "default": []
          },
          "extend_organizer_usernames": {
            "items": {
              "type": "string",
              "maxLength": 7,
              "minLength": 7,
              "pattern": "^[a-z]{2}[0-9]{2}[a-z]{3}$",
              "examples": [
                "go42tum"
              ]
            },
            "type": "array",
            "title": "Extend Organizer Usernames",
            "default": []
          }
        },
        "type": "object",
        "title": "VirtualCourseUpdate"
      },
      "WarnConfig": {
        "properties": {
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "examples": [
              "<p><span style=\"font-size:8pt\">Technische Universität München | Arcisstraße 21 | 80333 München | Germany</span></p>\n<p><span style=\"font-size:10pt\">%ANREDE% %VORNAME_KOMPLETT% %FAMILIENNAME%</span></p>\n<p><span style=\"font-size:10pt\">%STRASSE%<br />\n%PLZ% %ORT%</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>"
            ]
          },
          "maintext": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintext",
            "examples": [
              "<p>Garching, %DATUM_HEUTE%</p>\n<p>Betreff: Ihr Studienfortschritt im {{ program.degree_program_name }}</p>\n<p>&nbsp;</p>\n<p>%SEHRGEEHRT% %VORNAME% %NAMENSZUSATZ%%FAMILIENNAME%,</p>\n<p>die vielfältigen Anforderungen eines Studiums zu erfüllen, fällt nicht immer leicht. Die TUM möchte Sie daher hiermit frühzeitig auf offensichtliche Schwierigkeiten in Ihrem Studium aufmerksam machen. Wir empfehlen Ihnen dringend, über die Ursachen Ihres nicht im Plan liegenden Studienfortschritts nachzudenken und die Studienfachberatung oder andere Anlaufstellen aufzusuchen.</p>\n<p>Wir möchten Sie bei der Umsetzung Ihrer eigenen Ziele bestmöglich unterstützen. Dazu benötigen wir Ihre Mitwirkung, Ihr Interesse am Studienfach und auch Ihren Willen, die erforderliche Zeit und das unverzichtbare Engagement für Ihr Studium aufzubringen.</p>\n<p>Damit Sie unsere Erwartung an Ihre Mitwirkung einordnen können, möchten wir Sie darauf hinweisen, dass wir in der Auslegung unserer Module im Mittel von 30 Stunden Arbeit je Credit ausgehen, was bei 30 Credits pro Semester einer Belastung von 1800 Stunden im Jahr entspricht. Werden Prüfungen verzögert, der Studienablauf signifikant verändert oder wird die Arbeit vor allem in die Prüfungsvorbereitung geschoben, so steigt der erforderliche Aufwand für Sie noch einmal zusätzlich an. Um das Studium spätestens zum sechsten Fachsemester - also erfolgreich innerhalb der Studienfortschrittskontrolle - abzuschließen, müssen im Mittel mindestens 20 Credits pro Semester erworben werden.</p>\n<p><b>In Ihrem Fall haben wir festgestellt, dass Sie sich aktuell im {{ fachsemester }}. Fachsemester befinden{% if frv %}, wobei eine gewährte Fristverlängerung von {% if frv==1 %}einem Semester{% else %}{{ frv }} Semestern{% endif %} berücksichtigt wird,{% endif %} aber bisher lediglich {{ credits }} CP erworben haben.{% if credits and special_warning_credits %} Darunter {{ special_warning_credits }} Credits in physikalischen Spezialfächern.{% endif %}</b></p>\n<p>Was bedeutet das für die kommenden Semester?</p>\n<p>Durch noch nicht bestandene oder aufgeschobene Prüfungen kann für Sie in den nächsten Semestern eine sehr hohe Prüfungsbelastung entstehen. Konkret ist für Ihren Studienerfolg erforderlich: {% for semester in program.progresschecks %}{% if semester.fachsemester>=fachsemester_effective %}nach dem {{ semester.fachsemester + (frv or 0) }}. Fachsemester mindestens {% if semester.credits %}{{ semester.credits }} Credits{% endif %}{% if semester.special_check %}{% if semester.credits %}, davon{% endif %} {{ semester.special_check }}{% endif %}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}. Wenn diese Grenzen nicht erreicht werden, greift die Studienfortschrittskontrolle mit einem Ausschluss aus dem Studium.</p>\n<p>Nehmen Sie daher, soweit noch nicht geschehen, bitte kurzfristig Kontakt mit einer Vertrauensperson Ihrer Wahl oder mit einem der folgenden Ansprechpartner auf:</p>\n<p>- Dr. Martin Saß (Sprechstunde i.d.R. Mittwoch und Donnerstag vormittag) oder das Team der Studienberatung in Physik (https://academics.nat.tum.de/beratung#c4487)</p>\n<p>- Dr. Katja Block (Sprechstunde Montag 9:30-11:30 und Mittowch 13:30-15:30) als Ansprechpartnerin für das Studium in besonderen Lebenslagen</p>\n<p>- Allgemeine Studienberatung; Unterstützung bei Neuorientierung oder alternativen Studienmöglichkeiten sowie Lern- und Prüfungscoaching (https://www.tum.de/studium/hilfe-und-beratung)</p>\n<p>- Studierendenwerk (https://www.studierendenwerk-muenchen-oberbayern.de/beratungsnetzwerk/): Anlaufstelle für soziale und wirtschaftliche Fragen wie z.B. Studienfinanzierung, psychologische Beratung etc.</p>\n<p>Kommen Sie auf uns zu – wir sind für Sie da.</p>\n<p>Ich wünsche Ihnen viel Erfolg in den kommenden Semestern.</p>",
              "<p>Garching, %DATUM_HEUTE%</p>\n<p>Subject: Your academic progress in the {{ program.degree_program_name }}</p>\n<p>&nbsp;</p>\n<p>Dear %VORNAME% %NAMENSZUSATZ%%FAMILIENNAME%,</p>\n<p>keeping apace with the demands of full-time study is not always easy. When difficulties do arise, however, it is best to address them as quickly as possible. We are writing today in an effort to call your attention early to your apparent difficulties in meeting your academic progress targets. We strongly recommend that you consider the factors leading to these difficulties and seek out academic counseling.</p>\n<p>Our goal is to support you as good as possible in meeting your own goals. In order to do so, we require your participation, your interest in your field of study and your willingness to devote the necessary time and level of commitment to your degree program.</p>\n<p>To help you better understand our expectations, we would like to explain that the design of our degree program modules is based on an average of 30 hours of work per credit, which, at 30 credits per semester, corresponds to a workload of 1800 hours per academic year. If examinations are postponed, if the progression of studies significantly shifts from the planned curriculum, or if the completion of course requirements is pushed into periods of time intended for exam preparation, the effort necessary for you to master the workload increases exponentially. In order to complete the study program within six semesters - and hence within the targets specified by the academic progress check - a student needs to earn on average 20 credits per semester.</p>\n<p><b>In your case, we have found that you have earned only {{ credits }} CP{% if credits and special_warning_credits is not none %} including {{ special_warning_credits }} CP in Physics special courses{% endif %} by your {{ fachsemester }}. semester{% if frv %}, where an extension of {% if frv==1 %}one semester{% else %}{{ frv }} semesters{% endif %} is accounted for{% endif %}.</b></p>\n<p>So what does this mean for the coming semesters?</p>\n<p>Examinations that have not yet been passed or have been postponed can place a very high examination load on you in the coming semesters. In concrete terms, to successfully complete your studies, you need to have earned {% for semester in program.progresschecks %}{% if semester.fachsemester>=fachsemester_effective %}after {{ semester.fachsemester + (frv or 0) }}. semester at least{% if semester.credits %} {{ semester.credits }} CP{% endif %}{% if semester.special_check_en %}{% if semester.credits %} and therein{% endif %} {{ semester.special_check_en }}{% endif %}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}. If these minimums are not achieved, the academic progress check takes effect to expel you from the program.</p>\n<p>We, thus, again encourage you to contact the trusted person of your choice or someone at one of the following services as soon as possible:</p>\n<p>- Dr. Martin Saß (consultation hour regularly Wednesday and Thursday morning) or the team of study organisation and counceling in Physics (https://academics.nat.tum.de/en/counseling#c4487)</p>\n<p>- Dr. Katja Block (consultation hour Monday 9:30-11:30 and Wednesday 13:30-15:30) as contact person for studying with special needs</p>\n<p>- Student Advising; support with new academic orientation or alternative options for study, as well as learning and examination coaching (https://www.tum.de/en/studies/support-and-advice)</p>\n<p>- Student Union (https://www.studierendenwerk-muenchen-oberbayern.de/en/advisory-network): contact point for social and financial issues, such as paying for your studies, psychological counseling, etc.</p>\n<p>Come and talk to us – we are here to help.</p>\n<p>Wishing you all the best in the coming semesters.</p>"
            ]
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature",
            "examples": [
              "<p>&nbsp;</p>\n<p>Mit besten Grüßen</p>\n<p>Martin Saß<br />\n<span style=\"font-size:6pt\">Dieses Dokument wurde maschinell erstellt und ist ohne Siegel und Unterschrift gültig.</span></p>",
              "<p>&nbsp;</p>\n<p>Your’s sincerely</p>\n<p>Martin Saß<br />\n<span style=\"font-size:6pt\">This letter was automatically created and is valid without seal and signature.</span></p>"
            ]
          },
          "sidetext": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sidetext",
            "examples": [
              "<p><span style=\"color:#0065BD; font-size:8pt\">TUM School of Natural Sciences<br/>\nMasterprüfungsausschuss Physik</span></p>\n<p><span style=\"font-size:8pt\">Dr. Martin Saß<br/>\nSchriftführer<br/>\n<br/>\nBoltzmannstr. 3<br/>\n85748 Garching<br/>\n<br/>\n<br/>\nTel: +49 89 289-18463<br/>\n<br/>\nmsass@tum.de</span></p>",
              "<p><span style=\"color:#0065BD; font-size:8pt\">TUM School of Natural Sciences<br/>\nMaster Examination Board Physics</span></p>\n<p><span style=\"font-size:8pt\">Dr. Martin Saß<br/>\nProgram Manager<br/>\n<br/>\nBoltzmannstr. 3<br/>\n85748 Garching<br/>\n<br/>\n<br/>\nTel: +49 89 289-18463<br/>\n<br/>\nmsass@tum.de</span></p>"
            ]
          },
          "ignore_frv_age": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Frv Age"
          },
          "ignore_fa": {
            "type": "boolean",
            "title": "Ignore Fa",
            "default": false
          },
          "special_stpk_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Stpk Id"
          },
          "modified": {
            "type": "string",
            "format": "date-time",
            "title": "Modified"
          },
          "program": {
            "$ref": "#/components/schemas/ProgramSPOPlus"
          }
        },
        "type": "object",
        "required": [
          "modified",
          "program"
        ],
        "title": "WarnConfig"
      },
      "WarnConfigUpdate": {
        "properties": {
          "address": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Address",
            "examples": [
              "<p><span style=\"font-size:8pt\">Technische Universität München | Arcisstraße 21 | 80333 München | Germany</span></p>\n<p><span style=\"font-size:10pt\">%ANREDE% %VORNAME_KOMPLETT% %FAMILIENNAME%</span></p>\n<p><span style=\"font-size:10pt\">%STRASSE%<br />\n%PLZ% %ORT%</span></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>"
            ]
          },
          "maintext": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maintext",
            "examples": [
              "<p>Garching, %DATUM_HEUTE%</p>\n<p>Betreff: Ihr Studienfortschritt im {{ program.degree_program_name }}</p>\n<p>&nbsp;</p>\n<p>%SEHRGEEHRT% %VORNAME% %NAMENSZUSATZ%%FAMILIENNAME%,</p>\n<p>die vielfältigen Anforderungen eines Studiums zu erfüllen, fällt nicht immer leicht. Die TUM möchte Sie daher hiermit frühzeitig auf offensichtliche Schwierigkeiten in Ihrem Studium aufmerksam machen. Wir empfehlen Ihnen dringend, über die Ursachen Ihres nicht im Plan liegenden Studienfortschritts nachzudenken und die Studienfachberatung oder andere Anlaufstellen aufzusuchen.</p>\n<p>Wir möchten Sie bei der Umsetzung Ihrer eigenen Ziele bestmöglich unterstützen. Dazu benötigen wir Ihre Mitwirkung, Ihr Interesse am Studienfach und auch Ihren Willen, die erforderliche Zeit und das unverzichtbare Engagement für Ihr Studium aufzubringen.</p>\n<p>Damit Sie unsere Erwartung an Ihre Mitwirkung einordnen können, möchten wir Sie darauf hinweisen, dass wir in der Auslegung unserer Module im Mittel von 30 Stunden Arbeit je Credit ausgehen, was bei 30 Credits pro Semester einer Belastung von 1800 Stunden im Jahr entspricht. Werden Prüfungen verzögert, der Studienablauf signifikant verändert oder wird die Arbeit vor allem in die Prüfungsvorbereitung geschoben, so steigt der erforderliche Aufwand für Sie noch einmal zusätzlich an. Um das Studium spätestens zum sechsten Fachsemester - also erfolgreich innerhalb der Studienfortschrittskontrolle - abzuschließen, müssen im Mittel mindestens 20 Credits pro Semester erworben werden.</p>\n<p><b>In Ihrem Fall haben wir festgestellt, dass Sie sich aktuell im {{ fachsemester }}. Fachsemester befinden{% if frv %}, wobei eine gewährte Fristverlängerung von {% if frv==1 %}einem Semester{% else %}{{ frv }} Semestern{% endif %} berücksichtigt wird,{% endif %} aber bisher lediglich {{ credits }} CP erworben haben.{% if credits and special_warning_credits %} Darunter {{ special_warning_credits }} Credits in physikalischen Spezialfächern.{% endif %}</b></p>\n<p>Was bedeutet das für die kommenden Semester?</p>\n<p>Durch noch nicht bestandene oder aufgeschobene Prüfungen kann für Sie in den nächsten Semestern eine sehr hohe Prüfungsbelastung entstehen. Konkret ist für Ihren Studienerfolg erforderlich: {% for semester in program.progresschecks %}{% if semester.fachsemester>=fachsemester_effective %}nach dem {{ semester.fachsemester + (frv or 0) }}. Fachsemester mindestens {% if semester.credits %}{{ semester.credits }} Credits{% endif %}{% if semester.special_check %}{% if semester.credits %}, davon{% endif %} {{ semester.special_check }}{% endif %}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}. Wenn diese Grenzen nicht erreicht werden, greift die Studienfortschrittskontrolle mit einem Ausschluss aus dem Studium.</p>\n<p>Nehmen Sie daher, soweit noch nicht geschehen, bitte kurzfristig Kontakt mit einer Vertrauensperson Ihrer Wahl oder mit einem der folgenden Ansprechpartner auf:</p>\n<p>- Dr. Martin Saß (Sprechstunde i.d.R. Mittwoch und Donnerstag vormittag) oder das Team der Studienberatung in Physik (https://academics.nat.tum.de/beratung#c4487)</p>\n<p>- Dr. Katja Block (Sprechstunde Montag 9:30-11:30 und Mittowch 13:30-15:30) als Ansprechpartnerin für das Studium in besonderen Lebenslagen</p>\n<p>- Allgemeine Studienberatung; Unterstützung bei Neuorientierung oder alternativen Studienmöglichkeiten sowie Lern- und Prüfungscoaching (https://www.tum.de/studium/hilfe-und-beratung)</p>\n<p>- Studierendenwerk (https://www.studierendenwerk-muenchen-oberbayern.de/beratungsnetzwerk/): Anlaufstelle für soziale und wirtschaftliche Fragen wie z.B. Studienfinanzierung, psychologische Beratung etc.</p>\n<p>Kommen Sie auf uns zu – wir sind für Sie da.</p>\n<p>Ich wünsche Ihnen viel Erfolg in den kommenden Semestern.</p>",
              "<p>Garching, %DATUM_HEUTE%</p>\n<p>Subject: Your academic progress in the {{ program.degree_program_name }}</p>\n<p>&nbsp;</p>\n<p>Dear %VORNAME% %NAMENSZUSATZ%%FAMILIENNAME%,</p>\n<p>keeping apace with the demands of full-time study is not always easy. When difficulties do arise, however, it is best to address them as quickly as possible. We are writing today in an effort to call your attention early to your apparent difficulties in meeting your academic progress targets. We strongly recommend that you consider the factors leading to these difficulties and seek out academic counseling.</p>\n<p>Our goal is to support you as good as possible in meeting your own goals. In order to do so, we require your participation, your interest in your field of study and your willingness to devote the necessary time and level of commitment to your degree program.</p>\n<p>To help you better understand our expectations, we would like to explain that the design of our degree program modules is based on an average of 30 hours of work per credit, which, at 30 credits per semester, corresponds to a workload of 1800 hours per academic year. If examinations are postponed, if the progression of studies significantly shifts from the planned curriculum, or if the completion of course requirements is pushed into periods of time intended for exam preparation, the effort necessary for you to master the workload increases exponentially. In order to complete the study program within six semesters - and hence within the targets specified by the academic progress check - a student needs to earn on average 20 credits per semester.</p>\n<p><b>In your case, we have found that you have earned only {{ credits }} CP{% if credits and special_warning_credits is not none %} including {{ special_warning_credits }} CP in Physics special courses{% endif %} by your {{ fachsemester }}. semester{% if frv %}, where an extension of {% if frv==1 %}one semester{% else %}{{ frv }} semesters{% endif %} is accounted for{% endif %}.</b></p>\n<p>So what does this mean for the coming semesters?</p>\n<p>Examinations that have not yet been passed or have been postponed can place a very high examination load on you in the coming semesters. In concrete terms, to successfully complete your studies, you need to have earned {% for semester in program.progresschecks %}{% if semester.fachsemester>=fachsemester_effective %}after {{ semester.fachsemester + (frv or 0) }}. semester at least{% if semester.credits %} {{ semester.credits }} CP{% endif %}{% if semester.special_check_en %}{% if semester.credits %} and therein{% endif %} {{ semester.special_check_en }}{% endif %}{% if not loop.last %}, {% endif %}{% endif %}{% endfor %}. If these minimums are not achieved, the academic progress check takes effect to expel you from the program.</p>\n<p>We, thus, again encourage you to contact the trusted person of your choice or someone at one of the following services as soon as possible:</p>\n<p>- Dr. Martin Saß (consultation hour regularly Wednesday and Thursday morning) or the team of study organisation and counceling in Physics (https://academics.nat.tum.de/en/counseling#c4487)</p>\n<p>- Dr. Katja Block (consultation hour Monday 9:30-11:30 and Wednesday 13:30-15:30) as contact person for studying with special needs</p>\n<p>- Student Advising; support with new academic orientation or alternative options for study, as well as learning and examination coaching (https://www.tum.de/en/studies/support-and-advice)</p>\n<p>- Student Union (https://www.studierendenwerk-muenchen-oberbayern.de/en/advisory-network): contact point for social and financial issues, such as paying for your studies, psychological counseling, etc.</p>\n<p>Come and talk to us – we are here to help.</p>\n<p>Wishing you all the best in the coming semesters.</p>"
            ]
          },
          "signature": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Signature",
            "examples": [
              "<p>&nbsp;</p>\n<p>Mit besten Grüßen</p>\n<p>Martin Saß<br />\n<span style=\"font-size:6pt\">Dieses Dokument wurde maschinell erstellt und ist ohne Siegel und Unterschrift gültig.</span></p>",
              "<p>&nbsp;</p>\n<p>Your’s sincerely</p>\n<p>Martin Saß<br />\n<span style=\"font-size:6pt\">This letter was automatically created and is valid without seal and signature.</span></p>"
            ]
          },
          "sidetext": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sidetext",
            "examples": [
              "<p><span style=\"color:#0065BD; font-size:8pt\">TUM School of Natural Sciences<br/>\nMasterprüfungsausschuss Physik</span></p>\n<p><span style=\"font-size:8pt\">Dr. Martin Saß<br/>\nSchriftführer<br/>\n<br/>\nBoltzmannstr. 3<br/>\n85748 Garching<br/>\n<br/>\n<br/>\nTel: +49 89 289-18463<br/>\n<br/>\nmsass@tum.de</span></p>",
              "<p><span style=\"color:#0065BD; font-size:8pt\">TUM School of Natural Sciences<br/>\nMaster Examination Board Physics</span></p>\n<p><span style=\"font-size:8pt\">Dr. Martin Saß<br/>\nProgram Manager<br/>\n<br/>\nBoltzmannstr. 3<br/>\n85748 Garching<br/>\n<br/>\n<br/>\nTel: +49 89 289-18463<br/>\n<br/>\nmsass@tum.de</span></p>"
            ]
          },
          "ignore_frv_age": {
            "anyOf": [
              {
                "type": "string",
                "format": "duration"
              },
              {
                "type": "null"
              }
            ],
            "title": "Ignore Frv Age"
          },
          "ignore_fa": {
            "type": "boolean",
            "title": "Ignore Fa",
            "default": false
          },
          "special_stpk_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Special Stpk Id"
          }
        },
        "type": "object",
        "title": "WarnConfigUpdate"
      }
    },
    "securitySchemes": {
      "OAuth2AuthorizationCodeBearer": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "scopes": {},
            "authorizationUrl": "https://sso.srv.nat.tum.de/realms/dssnat/protocol/openid-connect/auth",
            "tokenUrl": "https://sso.srv.nat.tum.de/realms/dssnat/protocol/openid-connect/token"
          }
        }
      },
      "APIKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "api-key"
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "x-api-key"
      }
    }
  },
  "tags": [
    {
      "name": "Semester Data",
      "description": "Query and manage semester data (IDs in other systems, lecture periods, exam periods and exam registration, holidays, lecture-free days, ...)."
    },
    {
      "name": "Country Data",
      "description": "Query and manage country data."
    },
    {
      "name": "Organisation Data",
      "description": "Information on organisational units of TUM."
    },
    {
      "name": "Study Programs",
      "description": "Information on study programs of TUM."
    },
    {
      "name": "Person Data",
      "description": "Data of persons with assigned functions."
    },
    {
      "name": "Research Fields",
      "description": "Research fields by research area to classify organisational units and thesis topics."
    },
    {
      "name": "Background Tasks",
      "description": "Management of background service tasks."
    },
    {
      "name": "User Data",
      "description": "User related information."
    },
    {
      "name": "Status",
      "description": "Status information on the Digital School Services."
    },
    {
      "name": "APV Tool",
      "description": "Support communication in final degree document process with students and CST/ZPA."
    },
    {
      "name": "Theses Program Configuration",
      "description": "Administration of Thesis programs."
    },
    {
      "name": "Theses Offers",
      "description": "Publication of Theses Offers."
    },
    {
      "name": "Theses Students",
      "description": "Registration and submission of Theses by students."
    },
    {
      "name": "Theses Supervisors",
      "description": "Offering, registration and grading of Theses by supervisors."
    },
    {
      "name": "Theses Student Office",
      "description": "Administration of Thesis process from registration to submission and grading."
    },
    {
      "name": "Rooms",
      "description": "Directory of rooms."
    },
    {
      "name": "Ceremony Invitations",
      "description": "Manage ceremony invitations."
    },
    {
      "name": "Email Administration",
      "description": "Management of email templates and certificates."
    },
    {
      "name": "Evaluation Surveys",
      "description": "Support for evaluation and surveys using Evasys."
    },
    {
      "name": "Evaluation Students",
      "description": "Provide pseudonym emails of students for external evaluation."
    },
    {
      "name": "Evaluation Course",
      "description": "Provide course data for evaluation."
    },
    {
      "name": "Module Handbook Admin",
      "description": "Administration of the module handbook application."
    },
    {
      "name": "Module Handbook Catalogs",
      "description": "Query and manage the module catalogs."
    },
    {
      "name": "Module Handbook Descriptions",
      "description": "Query and manage the module descriptions."
    },
    {
      "name": "Module Handbook Modules",
      "description": "Query and manage the module handbook."
    },
    {
      "name": "Course Catalog",
      "description": "Query the course catalog."
    },
    {
      "name": "SPO Helper Functions",
      "description": "Helper functions to support modelling tasks in the SPOs."
    },
    {
      "name": "Course Administration",
      "description": "Supporting tools for course administration in TUMonline."
    },
    {
      "name": "Moodle Tools",
      "description": "Supporting tools for course administration in Moodle."
    },
    {
      "name": "Exam Administration",
      "description": "Supporting tools for exam administration in TUMonline."
    },
    {
      "name": "Teaching Plan",
      "description": "Planning of teaching in upcoming semesters."
    },
    {
      "name": "Teaching Report Staff",
      "description": "Reporting of teaching duties and departmental duty system."
    },
    {
      "name": "Teaching Report Duties",
      "description": "Reporting of teaching duties and departmental duty system."
    },
    {
      "name": "Teaching Report Jobs",
      "description": "Reporting of teaching duties and departmental duty system."
    },
    {
      "name": "Teaching Report Organisations",
      "description": "Reporting of teaching duties and departmental duty system."
    },
    {
      "name": "Teaching Report Accounts",
      "description": "Reporting of teaching duties and departmental duty system."
    },
    {
      "name": "Teaching Report Coordinator",
      "description": "Reporting of teaching duties and departmental duty system."
    },
    {
      "name": "Student File",
      "description": "Student data and enrolements."
    },
    {
      "name": "Student Statistics",
      "description": "Grading tables."
    },
    {
      "name": "Student Requests",
      "description": "Student requests."
    },
    {
      "name": "Tuition Substitution Funds",
      "description": "Management of measures and assignments within the concept for the use of the tuition substitution funds."
    },
    {
      "name": "Semester Rankings",
      "description": "Generation of semester rankings."
    },
    {
      "name": "Scholarship Invitations",
      "description": "Administration of scholarship programs, students may be invited to join."
    },
    {
      "name": "Ph.D. Administration",
      "description": "Tools to extend DocGS for administration of doctoral candidacy list."
    },
    {
      "name": "TUMonline Function Objects",
      "description": "Manage function objects in TUMonline."
    },
    {
      "name": "Onboarding",
      "description": "Tools to support onboarding of new professors/staff."
    },
    {
      "name": "GDPR Tools",
      "description": "Information on GDPR processings and answering the right of access."
    },
    {
      "name": "Camunda Workflows",
      "description": "Management of camunda workflow IDs."
    }
  ]
}