name: Release and Deploy Microservice

on:
  push:
    tags:
      - '*@v*'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      microservice: ${{ steps.extract.outputs.microservice }}
    steps:
      - name: Extract microservice name from tag
        id: extract
        run: |
          # Tag format: microservice@vX.Y.Z
          TAG=${GITHUB_REF#refs/tags/}
          MICROSERVICE="${TAG%@*}"
          echo "Microservice: $MICROSERVICE"
          echo "::set-output name=microservice::$MICROSERVICE"

      - uses: actions/checkout@v3
      
      - name: Run release for microservice
        run: |
          echo "Releasing microservice: ${{ steps.extract.outputs.microservice }}"
          version=$(nix eval --raw .#${{ steps.extract.outputs.microservice }}.version)
          name=$(nix eval --raw .#${{ steps.extract.outputs.microservice }}.pname)
          LOCAL_IMAGE="nixops-${name}:${version}"
          REMOTE_VERSIONED_IMAGE="ghcr.io/aet-devops25/nixops-${name}:${version}"
          docker load < result
          docker tag $LOCAL_IMAGE $REMOTE_VERSIONED_IMAGE
          docker push $REMOTE_VERSIONED_IMAGE

  deploy-staging:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v25
        with:
          nix_path: nixpkgs=channel:nixos-unstable
      - uses: cachix/cachix-action@v14
        with:
          name: team-nixops
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: azure/setup-helm@v4.3.0
      - name: Deploy to staging
        run: |
          RELEASE_NAME="nixops"
          CHART_NAME="./helm"
          NAMESPACE="nixops-default"

          GENAI_VERSION="$(nix eval --raw .#genai.version)"
          CLIENT_VERSION="$(nix eval --raw .#client.version)"
          SCRAPER_VERSION="$(nix eval --raw .#scraper.version)"
          EMBEDDING_BRIDGE_VERSION="$(nix eval --raw .#embedding-bridge.version)"
          SCHEDULE_MANAGER_VERSION="$(nix eval --raw .#schedule-manager.version)"

          VAR_FLAGS="--values ./helm/values.ci.yaml \
            --set genai.image.tag=$GENAI_VERSION \
            --set client.image.tag=$CLIENT_VERSION \
            --set scraper.image.tag=$SCRAPER_VERSION \
            --set embeddingBridge.image.tag=$EMBEDDING_BRIDGE_VERSION \
            --set scheduleManager.image.tag=$SCHEDULE_MANAGER_VERSION"

          echo "Using GenAI version: $GENAI_VERSION"
          echo "Using Client version: $CLIENT_VERSION"
          echo "Using Scraper version: $SCRAPER_VERSION"
          echo "Using Embedding-Bridge version: $EMBEDDING_BRIDGE_VERSION"
          echo "Using Schedule-Manager version: $SCHEDULE_MANAGER_VERSION"

          TEMP_KUBECONFIG=$(mktemp)
          echo '${{ secrets.KUBECONFIG }}' > "$TEMP_KUBECONFIG" 
   
          helm upgrade --kubeconfig "$TEMP_KUBECONFIG"  "$RELEASE_NAME" "$CHART_NAME" -n "$NAMESPACE" --install $VAR_FLAGS

          rm -f "$TEMP_KUBECONFIG"
          run: |
            echo "Deploying microservice ${{ needs.release.outputs.microservice }} to staging environment"
            # Add your deploy steps here

